@model MineralConcessionEF.LeaseApplicationModel
@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 class="text-center">Pay Second Installment</h1>
<section class="box form-container">
    @using (Html.BeginForm("Secondpayment", "LeaseApplication", FormMethod.Post, new { id = "__AntiForgeryForm", @enctype = "multipart/form-data", @class = "form-horizontal bordered-row" }))
    {
        @Html.HiddenFor(x => x.Status)
        @Html.HiddenFor(x => x.SpMode)
        @Html.HiddenFor(x => x.LesseeLOI)
        <div class="content-body">
            <div class="col-xs-12">
                <ul class="nav nav-pills nav-justified thumbnail setup-panel">
                    <li>
                        <a class="btn btn-light btn-rounded" href="../MiningLease/SecondInstallment.aspx" id="li-step-1">
                            <h4 class="list-group-item-heading">Step 1</h4>

                        </a>
                    </li>
                    <li>
                        <a class="btn btn-light btn-rounded" href="../MiningLease/SubmissionClearance.aspx" id="li-step-2">
                            <h4 class="list-group-item-heading">Step 2</h4>

                        </a>
                    </li>
                </ul>
            </div>
            @if (Model.Status == 8)
            {
                <h1 class="text-center">Pay Second Installment</h1>

                <div class="col-sm-6">
                    <div class="form-group row">
                        <label for="Submission_of_Clearances" style="color: #089c4c;font-size: 0.9rem;font-weight:bold">1) Draft Mining Plan</label>
                    </div>
                </div>

                <div id="step1">

                    <div class="row">

                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Due Date*</label>
                                <div class="col-sm-7">
                                    <label class="col-sm-4 col-form-label ">@Model.MiningPlanDueDate</label>

                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">IBM Submission Date*</label>
                                <div class="col-sm-7">
                                    <label class="col-sm-4 col-form-label ">@System.DateTime.Now.ToShortDateString()</label>

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">IBM Receiving Copy*</label>
                                <div class="col-sm-7">
                                    <input type="file" class="custom-file-input" id="filesupport" name="@Html.NameFor(Model => Model.IBM_ReceivingFile)">
                                    <label class="custom-file-label" for="customFile">Choose Files</label>
                                    <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group row">
                            <label for="Submission_of_Clearances" style="color: #089c4c;font-size: 0.9rem;font-weight:bold">2) Performance security</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Due Date*</label>
                                <div class="col-sm-7">
                                    <label class="col-sm-4 col-form-label ">@Model.PerformanceSecurity_Installment_ScheduleDate</label>

                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">IBM Submission Date*</label>
                                <div class="col-sm-7">
                                    <label class="col-sm-4 col-form-label ">@System.DateTime.Now.ToShortDateString()</label>

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Amount*</label>
                                <div class="col-sm-7">
                                    <label class="col-sm-4 col-form-label ">@Model.PerformanceSecurity_Installment_Amount</label>

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Bank Name*</label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(x => x.PS_BankName, new { @class = "form-control Pointer", @style = "width:100%;", @maxLength = 45 })

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Bank Gaurranty No.*</label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(x => x.PS_BankGaurrantyNo, new { @class = "form-control Pointer", @style = "width:100%;", @maxLength = 30 })

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Bank Gaurranty (Upload)*</label>
                                <div class="col-sm-7">
                                    <input type="file" class="custom-file-input" id="filesupport" name="@Html.NameFor(Model => Model.BankGaurrantyFile)">
                                    <label class="custom-file-label" for="customFile">Choose Files</label>
                                    <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Bank Guaranty Date*</label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(x => x.PS_BankGuarantyDate, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })


                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label">Validity Upto*</label>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(x => x.PS_ValidityUpto, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row">
                            <label for="Submission_of_Clearances" style="color: #089c4c;font-size: 0.9rem;font-weight:bold">3) Payment of second installment (10%) of Upfront Payment</label>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <div class="p-1">

                        </div>
                        <div class="p-1">
                            <label for="inputPassword" class="col-sm-13 col-form-labe font-weight-bolder">Amount</label>

                        </div>
                        <div class="p-1">
                            <label for="inputPassword" class=" font-weight-bolder"> @Model.Second_Installment_Amount</label>
                        </div>
                        <div class="p-1">

                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="p-1">

                        </div>
                        <div class="p-1">
                            <label for="inputPassword" class=" font-weight-bolder">Due Date</label>

                        </div>
                        <div class="p-1">
                            <label for="inputPassword" class=" font-weight-bolder">@Model.Second_Installment_ScheduleDate</label>
                        </div>
                        <div class="p-1">

                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="p-1">

                        </div>
                        <div class="p-1">
                            <img src=@Url.Content("~/img/b.jpg") alt="SBI" style="width:100px;height:50px;">
                            <input name="BankSelection" id="chkSBI" type="radio" value="SBI" checked="checked">
                        </div>
                        <div class="p-1">
                            <img src=@Url.Content("~/img/ICICI.png") alt="SBI" style="width:100px;height:50px;">
                            <input name="BankSelection" id="chkICICI" type="radio" value="ICICI">
                        </div>
                        <div class="p-1">

                        </div>
                    </div>
                    <div style="display:none" id="divPaymentOption">
                        <div class="d-flex justify-content-between" style="display:none">
                            <div class="p-1">

                            </div>
                            <div class="p-1">
                                <label for="Net_Banking">Net Banking</label>
                                <input name="ModeSelection" type="radio" id="chkICICINetBanking" value="NetBanking" />
                            </div>
                            <div class="p-1">
                                <label for="Net_Banking">NEFT/RTGS</label>
                                <input name="ModeSelection" type="radio" id="chkNEFT" value="NEFT" checked="checked" />
                            </div>
                            <div class="p-1">

                            </div>
                        </div>
                    </div>
                    <div style="display:none" id="divNetBankingPayment">
                        <div class="d-flex justify-content-between">
                            <div class="p-1">

                            </div>
                            <div class="p-1">
                                <label for="Net_Banking">Corporate</label>
                                <input name="NetBankingSelection" type="radio" value="Corporate" checked="checked" />
                            </div>
                            <div class="p-1">
                                <label for="Net_Banking">Retail</label>
                                <input name="NetBankingSelection" type="radio" value="Retail" />
                            </div>
                            <div class="p-1">

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 offset-sm-6">
                        <input type="button" value="Submit" id="btnSubmit" class="btn  btn-primary" onclick="onMakePayment();" style="margin-right: 10px; width: 150px;" />


                    </div>
                </div>
            }
            @if (Model.Status == 9)
            {
                <h1 class="text-center">Submission of Clearances</h1>

                @if (((List<string>)ViewBag.DocList).Contains("Mining Plan Approval Letter"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        Mining Plan
                    </div>

                    <hr class="border_hr_line" />

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            <span>@Model.MiningPlanDueDate</span>
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Approval Order No. <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.MP_ApprovalOrderNo, new { @class = "k-textbox Pointer", @style = "width:100%;", @maxLength = 75 })
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Approval Order Date <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.ApprovaDateMiningPlan, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })


                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Approval Letter<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">

                            <input type="file" class="custom-file-input" id="MPSOMLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.MPSOMLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>

                            <br />
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Valid From <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">

                            @Html.TextBoxFor(x => x.MP_ValidFrom, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Valid Upto <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">

                            @Html.TextBoxFor(x => x.MP_ValidUpto, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                            <br />

                        </div>
                    </div>

                }

                @if (((List<string>)ViewBag.DocList).Contains("Approved Table for Proposed Production"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        Proposed Production
                    </div>

                    <hr class="border_hr_line" />

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Approved Table<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            <input type="file" class="custom-file-input" id="ProposedProductionLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.ProposedProductionLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>



                    <div class="row" id="BOArea">
                        <div class="col-lg-11 col-md-11 col-sm-11 col-xs-12 pointer" style="margin: 15px 0; max-height: 400px; overflow: auto;">
                            <label>Year Wise Proposed Production</label>
                            <table border="1" id="AreaTable" class="table" style="margin-top: 15px;">
                                <thead>
                                    <tr>
                                        <th style="border-color: black;">Year</th>
                                        <th style="border-color: black;">Production (MT)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>@(Html.LabelFor(model => model.First_Year_PQty, "1st"))</td>
                                        <td>
                                            @(Html.TextBoxFor(model => model.First_Year_PQty, new { @class = "form-control", @type = "number", style = "width:220px;", maxlength = "15" }))
                                        </td>
                                    </tr>

                                    <tr>
                                        <td>@(Html.LabelFor(model => model.Second_Year_PQty, "2nd"))</td>
                                        <td>
                                            @(Html.TextBoxFor(model => model.Second_Year_PQty, new { @class = "form-control", @type = "number", style = "width:220px;", min = "0", maxlength = "15" }))
                                        </td>
                                    </tr>

                                    <tr>
                                        <td>@(Html.LabelFor(model => model.Third_Year_PQty, "3rd"))</td>
                                        <td>
                                            @(Html.TextBoxFor(model => model.Third_Year_PQty, new { @class = "form-control", @type = "number", style = "width:220px;", min = "0", maxlength = "15" }))
                                        </td>
                                    </tr>

                                    <tr>
                                        <td>@(Html.LabelFor(model => model.Fourth_Year_PQty, "4th"))</td>
                                        <td>
                                            @(Html.TextBoxFor(model => model.Fourth_Year_PQty, new { @class = "form-control", @type = "number", style = "width:220px;", min = "0", maxlength = "15" }))
                                        </td>
                                    </tr>

                                    <tr>
                                        <td>@(Html.LabelFor(model => model.Fifth_Year_PQty, "5th"))</td>
                                        <td>
                                            @(Html.TextBoxFor(model => model.Fifth_Year_PQty, new { @class = "form-control", @type = "number", style = "width:220px;", min = "0", maxlength = "15" }))
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <span id="span_First" style="color: red"></span>
                            <span id="span_Second" style="color: red"></span>
                            <span id="span_Third" style="color: red"></span>
                            <span id="span_Fourth" style="color: red"></span>
                            <span id="span_Fifth" style="color: red"></span>
                        </div>
                    </div>


                }

                @if (((List<string>)ViewBag.DocList).Contains("Environmental Clearances Letter"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        Environmental Clearances
                    </div>

                    <hr class="border_hr_line" />

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Environmental Clearances Letter<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">

                            <input type="file" class="custom-file-input" id="ECLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.ECLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>EC Order Date <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            @Html.TextBoxFor(x => x.EC_OrderDate, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>EC Order No. <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.EC_OrderNo, new { @class = "form-control Pointer", @style = "width:100%;", @maxLength = 75 })
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Annual Capacity <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.EC_AnnualCapacity, new { @class = "form-control makeNumeric Pointer", @style = "width:100%;", @maxLength = 10 })
                            <span id="span_ECQty" style="color: red"></span>
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>EC Valid Upto <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            @Html.TextBoxFor(x => x.EC_ValidUpto, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                }

                @if (((List<string>)ViewBag.DocList).Contains("Consent to Establish Approval Letter"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @Html.Label("Consent to Establish", "Consent to Establish", new { style = "color: #089c4c;font-size: 1.8rem;" })

                    </div>

                    <hr class="border_hr_line" />

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Approval Letter<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            <input type="file" class="custom-file-input" id="CTELetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.CTELetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Order Date <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            @Html.TextBoxFor(x => x.CTE_OrderDate, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Order No. <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.CTE_OrderNo, new { @class = "k-textbox Pointer", @style = "width:100%;", @maxLength = 75 })
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Valid Upto <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            @Html.TextBoxFor(x => x.CTE_ValidUpto, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                }

                @if (((List<string>)ViewBag.DocList).Contains("Consent to Operate Approval Letter"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Consent to Operate", "Consent to Operate", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>

                    <hr class="border_hr_line" />

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Approval Letter<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            <input type="file" class="custom-file-input" id="CTOLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.CTOLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Order Date <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            @Html.TextBoxFor(x => x.CTO_OrderDate, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Order No. <span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.CTO_OrderNo, new { @class = "k-textbox Pointer", @style = "width:100%;", @maxLength = 75 })
                        </div>
                    </div>

                }

                @if (((List<string>)ViewBag.DocList).Contains("Forest Clearances (In case of Forest Land)"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Forest Clearances (In case of Forest Land)", "Forest Clearances (In case of Forest Land)", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>

                    <hr class="border_hr_line" />

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            @(Html.Label("Approval Letter"))
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            <input type="file" class="custom-file-input" id="FCLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.FCLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>FC Order Date @*<span class="text-danger">*</span>*@</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            @Html.TextBoxFor(x => x.FC_OrderDate, "{0:yyyy-MM-dd}", new { @class = "form-control datetime pointer", @style = "width:100%;", onkeydown = "return false;" })

                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>FC Order No. @*<span class="text-danger">*</span>*@</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Html.TextBoxFor(x => x.FC_OrderNo, new { @class = "k-textbox Pointer", @style = "width:100%;", @maxLength = 75 })
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Other Consents", "Other Consents", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>
                    <hr class="border_hr_line" />
                }

                @if (((List<string>)ViewBag.DocList).Contains("DGPS Survey Report"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("DGPS Survey Report", "DGPS Survey Report", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>
                    <hr class="border_hr_line" />
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            @(Html.Label("Upload Document"))<span class="text-danger">*</span>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">


                            <input type="file" class="custom-file-input" id="DGPSLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.DGPSLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>
                }

                @if (((List<string>)ViewBag.DocList).Contains("Private Land Acquisition"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Private Land Acquisition", "Private Land Acquisition", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>
                    <hr class="border_hr_line" />
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Upload Document<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            <input type="file" class="custom-file-input" id="LandLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.LandLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>
                }

                @if (((List<string>)ViewBag.DocList).Contains("Revenue Officer Report"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Revenue Officer Report", "Revenue Officer Report", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>
                    <hr class="border_hr_line" />
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Upload Document<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            <input type="file" class="custom-file-input" id="RevenueLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.RevenueLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>
                }

                @if (((List<string>)ViewBag.DocList).Contains("Gram Panchyat Proposal"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Gram Panchyat Proposal", "Gram Panchyat Proposal", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>
                    <hr class="border_hr_line" />
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Upload Document<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            <input type="file" class="custom-file-input" id="GramPanchayatLetterFile" onchange="return filecheck(this);" name="@Html.NameFor(Model => Model.GramPanchayatLetterFile)">
                            <label class="custom-file-label" for="customFile">Choose Files</label>
                            <span class="text-danger font-smaller">Only jpg, jpeg, png, pdf, tif file types are allowed.</span>
                            <br />
                        </div>
                    </div>
                }


                @if (((List<string>)ViewBag.DocList).Contains("Documents as specified by state government"))
                {
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding_left_right_0">
                        @(Html.Label("Documents as specified by state government", "Documents as specified by state government", new { style = "color: #089c4c;font-size: 1.8rem;" }))
                    </div>
                    <hr class="border_hr_line" />
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-md-3 default-form-control-style">
                            <label>Due Date</label>
                        </div>
                        <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                            @Model.IssueDate
                        </div>
                    </div>

                    if (Model != null && Model.OtherDocHistory != null && Model.OtherDocHistory.Rows.Count > 0)
                    {
                        int a = 0;
                        for (int i = 0; i < Model.OtherDocHistory.Rows.Count; i++)
                        {

                            a = a + 1;

                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="col-md-3 default-form-control-style">
                                    <input type="hidden" name="DocId" id="DocId_@a" value="@Model.OtherDocHistory.Rows[i]["DocId"]" />
                                    <input type="hidden" name="Doclbl_@a" id="Doclbl_@a" value="@Model.OtherDocHistory.Rows[i]["DocName"]" />
                                    <label>@Model.OtherDocHistory.Rows[i]["DocName"]<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-md-9 default-form-control-style" style="padding-left: 7px; width: 752px;">
                                    <input type="file" name="DocName" id="DocName_@a" />

                                </div>
                            </div>
                        }
                    }

                }
                <div class="col-sm-6 offset-sm-6">
                    <input type="button" value="Submit" id="btnSubmit" class="btn  btn-primary" onclick="onMakePayment();" style="margin-right: 10px; width: 150px;" />


                </div>
            }
        </div>
    }
</section>
<script>
    $(document).ready(function () {
        loadNavigation('Secondpayment', 'glRoleRes', 'plUser', 'tl', 'MajorMineral', 'Second payment', ' ');
        $('.datetime').datetimepicker({
            format: 'LT',
            format: "DD/MM/YYYY",

        }).keydown(false);
    });
    var MiningPlanLetterFileSize = 0;
    var ApprovedTableFileSize = 0;
    var ECLetterFileSize = 0;
    var CTELetterFileSize = 0;
    var CTOLetterFileSize = 0;
    var FCLetterFileSize = 0;
    var DGPSReportFileSize = 0;
    var PrivateLandFileSize = 0;
    var RevenueOfficerFileSize = 0;
    var GramPanchyatFileSize = 0;
    $('input[name="MPSOMLetterFile"]').bind('change', function () { MiningPlanLetterFileSize = this.files[0].size; return false; });
    $('input[name="ProposedProductionLetterFile"]').bind('change', function () { ApprovedTableFileSize = this.files[0].size; return false; });
    $('input[name="ECLetterFile"]').bind('change', function () { ECLetterFileSize = this.files[0].size; return false; });
    $('input[name="CTELetterFile"]').bind('change', function () { CTELetterFileSize = this.files[0].size; return false; });
    $('input[name="CTOLetterFile"]').bind('change', function () { CTOLetterFileSize = this.files[0].size; return false; });
    $('input[name="FCLetterFile"]').bind('change', function () { FCLetterFileSize = this.files[0].size; return false; });
    $('input[name="DGPSReportFile"]').bind('change', function () { DGPSReportFileSize = this.files[0].size; return false; });
    $('input[name="PrivateLandFile"]').bind('change', function () { PrivateLandFileSize = this.files[0].size; return false; });
    $('input[name="RevenueOfficerFile"]').bind('change', function () { RevenueOfficerFileSize = this.files[0].size; return false; });
    $('input[name="GramPanchyatFile"]').bind('change', function () { GramPanchyatFileSize = this.files[0].size; return false; });
    function filecheck(r) {
        var filesize = $('#' + r.id)[0].files[0].size;
        var filess = $('#' + r.id)[0].files;
        var label = $('#' + r.id).siblings('.custom-file-label');
        var val = $('#' + r.id).val().toLowerCase(),
            regex = new RegExp("(.*?)\.(pdf|jpeg|jpg|png|tif)$");
        var extension = val.substr((val.lastIndexOf('.') + 1));
        if (!(regex.test(val))) {
            debugger;
            swal("", " " + extension + "  type is not an allowed file type. You can use only jpg, jpeg, png, pdf, tif types of file(s). ", "warning");
            this.value = '';
            label.html('Choose Files');
            $("#" + r.d).focus();
            return false;
        }
        else {
            label.html(filess.length + ' Files Selected');
        }
        return false;



    }
    function MP_Validation() {

        var First_Qty = $('#First_Year_PQty').val();
        var Second_Qty = $('#Second_Year_PQty').val();
        var Third_Qty = $('#Third_Year_PQty').val();
        var Fourth_Qty = $('#Fourth_Year_PQty').val();
        var Fifth_Qty = $('#Fifth_Year_PQty').val();

        First_Qty = First_Qty || 0;
        Second_Qty = Second_Qty || 0;
        Third_Qty = Third_Qty || 0;
        Fourth_Qty = Fourth_Qty || 0;
        Fifth_Qty = Fifth_Qty || 0;

        if (parseFloat(First_Qty) == 0) {
            $('#span_First').text('First Year Qty cannot be Zero!')
            $('#First_Year_PQty').val(0);
            $('#btnSubmit').hide();

            $('#span_Second').text('')
            $('#span_Third').text('')
            $('#span_Fourth').text('')
            $('#span_Fifth').text('')
        }
        else if (parseFloat(Second_Qty) == 0) {
            $('#span_Second').text('Second Year Qty cannot be Zero!')
            $('#Second_Year_PQty').val(0);
            $('#btnSubmit').hide();

            $('#span_First').text('')
            $('#span_Third').text('')
            $('#span_Fourth').text('')
            $('#span_Fifth').text('')
        }
        else if (parseFloat(Third_Qty) == 0) {
            $('#span_Third').text('Third Year Qty cannot be Zero!')
            $('#Third_Year_PQty').val(0);
            $('#btnSubmit').hide();

            $('#span_First').text('')
            $('#span_Second').text('')
            $('#span_Fourth').text('')
            $('#span_Fifth').text('')
        }
        else if (parseFloat(Fourth_Qty) == 0) {
            $('#span_Fourth').text('Fourth Year Qty cannot be Zero!')
            $('#Fourth_Year_PQty').val(0);
            $('#btnSubmit').hide();

            $('#span_First').text('')
            $('#span_Second').text('')
            $('#span_Third').text('')
            $('#span_Fifth').text('')
        }
        else if (parseFloat(Fifth_Qty) == 0) {
            $('#span_Fifth').text('Fifth Year Qty cannot be Zero!')
            $('#Fifth_Year_PQty').val(0);
            $('#btnSubmit').hide();

            $('#span_First').text('')
            $('#span_Second').text('')
            $('#span_Third').text('')
            $('#span_Fourth').text('')
        }
        else {
            $('#btnSubmit').show();

            $('#span_First').text('')
            $('#span_Second').text('')
            $('#span_Third').text('')
            $('#span_Fourth').text('')
            $('#span_Fifth').text('')
        }

    }

    function EC_Validation() {

        var EC_Qty = $('#EC_AnnualCapacity').val();
        EC_Qty = EC_Qty || 0;

        if (parseFloat(EC_Qty) == 0) {
            $('#span_ECQty').text('Annual Capacity i.e., EC Quantity cannot be Zero!')
            $('#EC_AnnualCapacity').val(0);
            $('#btnSubmit').hide();
        } else {
            $('#btnSubmit').show();
            $('#span_ECQty').text('')
        }

    }

    $("#EC_AnnualCapacity").focusout(function () {
        EC_Validation();
    });
    $("#First_Year_PQty").focusout(function () {
        MP_Validation();
    });
    $("#Second_Year_PQty").focusout(function () {
        MP_Validation();
    });
    $("#Third_Year_PQty").focusout(function () {
        MP_Validation();
    });
    $("#Fourth_Year_PQty").focusout(function () {
        MP_Validation();
    });
    $("#Fifth_Year_PQty").focusout(function () {
        MP_Validation();
    });


    $('#li-step-1').css("pointer-events", "none");
    $('#li-step-2').css("pointer-events", "none");
    function onMakePayment(chk) {
        var bank = $("input:radio[name='BankSelection']:checked").val();
        var mode = $("input:radio[name='ModeSelection']:checked").val();
        var NetBanking = $("input:radio[name='NetBankingSelection']:checked").val();
        if ($('#Status').val() == "8") {
            if ($('#SubmissionDateMiningPlan').val() == "") {
                swal("", "Please select a valid IBM Submission Date. [Draft Mining Plan]", "warning");
                $('input[name="SubmissionDateMiningPlan"]').focus();
            }
            else if (Ibmrecv == 0) {
                swal("", "Please Upload a valid IBM Receiving Copy. [Draft Mining Plan]", "warning");
                $('input[name="IBMReceivingCopy"]').focus();
                return false;

            }
            else if ($('#PS_BankName').val() == "") {
                swal("", "Please provide a valid Bank Name. [Performance security]", "warning");
                $('input[name="PS_BankName"]').focus();
            }
            else if ($('#PS_BankGaurrantyNo').val() == "") {
                swal("", "Please provide a valid Bank Gaurranty No. [Performance security]", "warning");
                $('input[name="PS_BankGaurrantyNo"]').focus();
            }
            else if (Bankguranteefile == 0) {
                swal("", "Please Upload a valid Bank Gaurranty. [Performance security]", "warning");
                $('input[name="BankGaurranty"]').focus();
                return false;

            }
            else if ($('#PS_BankGuarantyDate').val() == "") {
                swal("", "Please Select a valid Bank Guaranty Date. [Performance security]", "warning");
                $('input[name="PS_BankGuarantyDate"]').focus();
            }
            else if ($('#PS_ValidityUpto').val() == "") {
                swal("", "Please select a valid Validity Upto. [Performance security]", "warning");
                $('input[name="PS_ValidityUpto"]').focus();
            }
            else if ($('#PerformanceSecurity_Installment_SubmissionDate').val() == "") {
                swal("", "Please select a valid Submission Date. [Performance Security]", "warning");
                $('input[name="PerformanceSecurity_Installment_SubmissionDate"]').focus();
            }
            else {

                var startDate = document.getElementById("PS_BankGuarantyDate").value;
                var endDate = document.getElementById("PS_ValidityUpto").value;

                var sparts = startDate.split("/");
                var sdt = new Date(parseInt(sparts[2], 10),
                    parseInt(sparts[1], 10) - 1,
                    parseInt(sparts[0], 10));

                var eparts = endDate.split("/");
                var edt = new Date(parseInt(eparts[2], 10),
                    parseInt(eparts[1], 10) - 1,
                    parseInt(eparts[0], 10));

                if ((Date.parse(edt) <= Date.parse(sdt))) {
                    swal("", "Validity Upto should be greater than Bank Guarranty Date.", "warning");
                    $('#PS_ValidityUpto').focus()
                    return false;
                }

                $('#SpMode').val('Step1');
                // ApplyDsc();

                if (bank == "HDFC") {
                    $("#PaymentBank").val("HDFC");
                    if (confirm('Are you sure to make payment ?')) {
                        $("#__AntiForgeryForm").submit();
                    }
                }
                else if (bank == "ICICI") {
                    $("#PaymentBank").val("ICICI");
                    if (mode == "NetBanking") {
                        $("#PMode").val("NetBanking");

                        if (NetBanking == "Corporate") {
                            $("#NetBanking_mode").val("Corporate");
                            if (confirm('Are you sure to make payment ?')) {
                                $("#__AntiForgeryForm").submit();
                            }
                        }
                        else if (NetBanking == "Retail") {
                            $("#NetBanking_mode").val("Retail");
                            if (confirm('Are you sure to make payment ?')) {
                                $("#__AntiForgeryForm").submit();
                            }
                        }
                    }
                    else {
                        $("#PMode").val("NEFT/RTGS");
                        if (confirm('Are you sure to make payment ?')) {
                            $("#__AntiForgeryForm").submit();
                        }
                    }
                }
                else if (bank == "SBI") {

                    $("#PaymentBank").val("SBI");
                    if (confirm('Are you sure to make payment ?')) {
                        $("#__AntiForgeryForm").submit();
                    }
                }
                else {

                    swal("", "Please select bank to make payment !", "warning");
                    return false;

                }

            }

        }

        else if ($('#Status').val() == "9") {
            debugger;
            // Mining Plan

            if ($('#MP_ApprovalOrderNo').val() == "") {
                swal("", "Please provide a valid Approval Order No. [Mining Plan]", "warning");
                $('input[name="MP_ApprovalOrderNo"]').focus();
            }
            else if ($('#ApprovaDateMiningPlan').val() == "" && $('#ApprovaDateMiningPlan').val() != undefined) {

                swal("", "Please provide a valid Approval Date. [Mining Plan]", "warning");
                $('input[name="ApprovaDateMiningPlan"]').focus();

            }
            else if (MiningPlanLetterFileSize == 0 && $('#MiningPlanLetter').val() != undefined) {
                swal("", "Please Upload a valid Approval Letter. [Mining Plan]", "warning");
                $('input[name="MiningPlanLetter"]').focus();
                return false;

            }
            else if ($('#MP_ValidFrom').val() == "") {
                swal("", "Please Select a valid Valid From. [Mining Plan]", "warning");
                $('input[name="MP_ValidFrom"]').focus();
            }
            else if ($('#MP_ValidUpto').val() == "") {
                swal("", "Please select a valid Valid Upto. [Mining Plan]", "warning");
                $('input[name="MP_ValidUpto"]').focus();
            }

            // Proposed Production

            else if (ApprovedTableFileSize == 0 && $('#ProposedProductionLetterFile').val() != undefined) {
                swal("","Please Select Approved Table. [Proposed Production]");
                $('input[name="ProposedProductionLetterFile"]').focus();
                return false;

            }
            else if ($('#First_Year_PQty').val() == "" || $('#First_Year_PQty').val() == "0.0") {
                swal("", "Please provide a valid 1st Year Production Quantity. [Proposed Production]", "warning");
                $('input[name="First_Year_PQty"]').focus();
            }
            else if ($('#Second_Year_PQty').val() == "" || $('#Second_Year_PQty').val() == "0.0") {
                swal("", "Please provide a valid 2nd Year Production Quantity. [Proposed Production]", "warning");
                $('input[name="Second_Year_PQty"]').focus();
            }
            else if ($('#Third_Year_PQty').val() == "" || $('#Third_Year_PQty').val() == "0.0") {
                swal("", "Please provide a valid 3rd Year Production Quantity. [Proposed Production]", "warning");
                $('input[name="Third_Year_PQty"]').focus();
            }
            else if ($('#Fourth_Year_PQty').val() == "" || $('#Fourth_Year_PQty').val() == "0.0") {
                swal("", "Please provide a valid 4th Year Production Quantity. [Proposed Production]", "warning");
                $('input[name="Fourth_Year_PQty"]').focus();
            }
            else if ($('#Fifth_Year_PQty').val() == "" || $('#Fifth_Year_PQty').val() == "0.0") {
                swal("", "Please provide a valid 5th Year Production Quantity. [Proposed Production]", "warning");
                $('input[name="Fifth_Year_PQty"]').focus();
            }

            // Environment Clearance

            else if (ECLetterFileSize == 0 && $('#ECLetterFile').val() != undefined) {
                swal("", "Please Select Environmental Clearances Letter. [Environmental Clearances]", "warning");
                $('input[name="ECLetterFile"]').focus();
                return false;

            }
            else if ($('#EC_OrderDate').val() == "") {
                swal("", "Please Select a valid Order Date. [Environmental Clearances]", "warning");
                $('input[name="EC_OrderDate"]').focus();
            }
            else if ($('#EC_OrderNo').val() == "") {
                swal("", "Please provide a valid Order No. [Environmental Clearances]", "warning");
                $('input[name="EC_OrderNo"]').focus();
            }
            else if ($('#EC_AnnualCapacity').val() == "" || $('#EC_AnnualCapacity').val() == "0") {
                swal("", "Please provide a valid Annual Capacity. [Environmental Clearances]", "warning");
                $('input[name="EC_AnnualCapacity"]').focus();
            }
            else if ($('#EC_ValidUpto').val() == "") {
                swal("", "Please select a valid Valid Upto. [Environmental Clearances]", "warning");
                $('input[name="EC_ValidUpto"]').focus();
            }

            // Consent To Establish

            else if (CTELetterFileSize == 0 && $('#CTELetter').val() != undefined) {
                swal("", "Please select a valid CTE Approval Letter. [Consent to Establish]", "warning");
                $('input[name="CTELetter"]').focus();
                return false;
            }
            else if ($('#CTE_OrderDate').val() == "") {
                swal("", "Please Select a valid Order Date. [Consent to Establish]", "warning");
                $('input[name="CTE_OrderDate"]').focus();
            }
            else if ($('#CTE_OrderNo').val() == "") {
                swal("", "Please provide a valid Order No. [Consent to Establish]", "warning");
                $('input[name="CTE_OrderNo"]').focus();
            }
            else if ($('#CTE_ValidUpto').val() == "") {
                swal("", "Please select a valid Valid Upto. [Consent to Establish]", "warning");
                $('input[name="CTE_ValidUpto"]').focus();
            }

            // Consent To Operate

            else if (CTOLetterFileSize == 0 && $('#CTOLetter').val() != undefined) {
                swal("", "Please select a valid CTO Approval Letter. [Consent to Operate]", "warning");
                $('input[name="CTOLetter"]').focus();
                return false;
            }
            else if ($('#CTO_OrderDate').val() == "") {
                swal("", "Please select a valid Order Date. [Consent to Operate]", "warning");
                $('input[name="CTO_OrderDate"]').focus();
            }
            else if ($('#CTO_OrderNo').val() == "") {
                swal("", "Please provide a valid Order No. [Consent to Operate]", "warning");
                $('input[name="CTO_OrderNo"]').focus();
            }

            // Forest Clearances

            else if (FCLetterFileSize == 0 && $('#FCLetter').val() != undefined) {
                swal("", "Please select a valid FC Approval Letter. [Forest Clearances]", "warning");
                $('input[name="FCLetter"]').focus();
                return false;
            }
            else if ($('#FC_OrderDate').val() == "") {
                swal("", "Please select a valid Order Date. [Forest Clearances]", "warning");
                $('input[name="FC_OrderDate"]').focus();
            }
            else if ($('#FC_OrderNo').val() == "") {
                swal("", "Please provide a valid Order No. [Forest Clearances]", "warning");
                $('input[name="FC_OrderNo"]').focus();
            }

            // DGPS Report

            else if (DGPSReportFileSize == 0 && $('#DGPSReport').val() != undefined) {
                swal("", "Please Select DGPS Survey report!", "warning");
                $('input[name="DGPSReport"]').focus();
                return false;

            }

            // Private Land Aquisation

            else if (PrivateLandFileSize == 0 && $('#PrivateLand').val() != undefined) {
                swal("", "Private Land Acquisition !", "warning");
                $('input[name="PrivateLand"]').focus();
                return false;

            }

            // Revenue Officer Report

            else if (RevenueOfficerFileSize == 0 && $('#RevenueOfficer').val() != undefined) {
                swal("", "Please Select Revenue Officer Report!", "warning");
                $('input[name="RevenueOfficer"]').focus();
                return false;

            }

            // Gram Panchayat Report

            else if (GramPanchyatFileSize == 0 && $('#GramPanchyat').val() != undefined) {
                swal("", "Please Select Gram Panchyat Proposal!", "warning");
                $('input[name="GramPanchyat"]').focus();
                return false;

            }

            else {

                // Dynamic Documents

                var d = document.getElementsByName("DocId").length;
                for (var i = 1; i <= d; i++) {
                    if (document.getElementById("DocName_" + i) != null) {
                        var docname = document.getElementById("DocName_" + i).value;
                    }
                    else {
                        docname == "";
                    }
                    var Doclbl = document.getElementById("Doclbl_" + i).value;
                    if (docname == "") {
                        swal("",'Please Upload ' + Doclbl + ".");
                        return false;
                    }
                }

                // MP Validation





                //if ($('#MP_ApprovalOrderNo').val() == "") {
                //    swal("","Please provide a valid Approval Order No. [Mining Plan]");
                //    $('input[name="MP_ApprovalOrderNo"]').focus();
                //}
                //else if ($('#ApprovaDateMiningPlan').val() == "" && $('#ApprovaDateMiningPlan').val() != undefined) {

                //    swal("","Please provide a valid Approval Date. [Mining Plan]");
                //    $('input[name="ApprovaDateMiningPlan"]').focus();

                //}
                //else if (MiningPlanLetterFileSize == 0 && $('#MiningPlanLetter').val() != undefined) {
                //    swal("","Please Upload a valid Approval Letter. [Mining Plan]");
                //    $('input[name="MiningPlanLetter"]').focus();
                //    return false;

                //}


                if ($('#MP_ValidFrom').val() != "" && $('#MP_ValidFrom').val() != undefined) {
                    if ($('#MP_ValidUpto').val() != "" && $('#MP_ValidUpto').val() != undefined) {
                        if ($('#ApprovaDateMiningPlan').val() != "" && $('#ApprovaDateMiningPlan').val() != undefined) {

                            var startDate = document.getElementById("MP_ValidFrom").value;
                            var endDate = document.getElementById("MP_ValidUpto").value;
                            var orderDate = document.getElementById("ApprovaDateMiningPlan").value;

                            var sparts_MP = startDate.split("/");
                            var sdt_MP = new Date(parseInt(sparts_MP[2], 10),
                                parseInt(sparts_MP[1], 10) - 1,
                                parseInt(sparts_MP[0], 10));

                            var eparts_MP = endDate.split("/");
                            var edt_MP = new Date(parseInt(eparts_MP[2], 10),
                                parseInt(eparts_MP[1], 10) - 1,
                                parseInt(eparts_MP[0], 10));

                            var oparts_MP = orderDate.split("/");
                            var odt_MP = new Date(parseInt(oparts_MP[2], 10),
                                parseInt(oparts_MP[1], 10) - 1,
                                parseInt(oparts_MP[0], 10));

                            if ((Date.parse(edt_MP) <= Date.parse(sdt_MP))) {
                                swal("", "Validity Upto should be greater than Valid From. [Mining Plan]", "warning");
                                $('#MP_ValidUpto').focus()
                                return false;
                            }

                            if ((Date.parse(edt_MP) <= Date.parse(odt_MP))) {
                                swal("", "Validity Upto should be greater than Order Date. [Mining Plan]", "warning");
                                $('#MP_ValidUpto').focus()
                                return false;
                            }

                        }
                    }
                }

                // EC Validation

                if ($('#EC_OrderDate').val() != "" && $('#EC_OrderDate').val() != undefined) {
                    if ($('#EC_ValidUpto').val() != "" && $('#EC_ValidUpto').val() != undefined) {

                        var startDate_EC = document.getElementById("EC_OrderDate").value;
                        var endDate_EC = document.getElementById("EC_ValidUpto").value;

                        var sparts_EC = startDate_EC.split("/");
                        var sdt_EC = new Date(parseInt(sparts_EC[2], 10),
                            parseInt(sparts_EC[1], 10) - 1,
                            parseInt(sparts_EC[0], 10));

                        var eparts_EC = endDate_EC.split("/");
                        var edt_EC = new Date(parseInt(eparts_EC[2], 10),
                            parseInt(eparts_EC[1], 10) - 1,
                            parseInt(eparts_EC[0], 10));

                        if ((Date.parse(edt_EC) <= Date.parse(sdt_EC))) {
                            swal("", "Validity Upto should be greater than Order Date. [Environmental Clearances]", "warning");
                            $('#EC_ValidUpto').focus()
                            return false;
                        }
                    }
                }

                // CTE Validation

                if ($('#CTE_OrderDate').val() != "" && $('#CTE_OrderDate').val() != undefined) {
                    if ($('#CTE_ValidUpto').val() != "" && $('#CTE_ValidUpto').val() != undefined) {

                        var startDate_CTE = document.getElementById("CTE_OrderDate").value;
                        var endDate_CTE = document.getElementById("CTE_ValidUpto").value;

                        var sparts_CTE = startDate_CTE.split("/");
                        var sdt_CTE = new Date(parseInt(sparts_CTE[2], 10),
                            parseInt(sparts_CTE[1], 10) - 1,
                            parseInt(sparts_CTE[0], 10));

                        var eparts_CTE = endDate_CTE.split("/");
                        var edt_CTE = new Date(parseInt(eparts_CTE[2], 10),
                            parseInt(eparts_CTE[1], 10) - 1,
                            parseInt(eparts_CTE[0], 10));

                        if ((Date.parse(edt_CTE) <= Date.parse(sdt_CTE))) {
                            swal("", "Validity Upto should be greater than Order Date. [Consent to Establish]", "warning");
                            $('#CTE_ValidUpto').focus()
                            return false;
                        }
                    }
                }


                $('#SpMode').val('Step2');
                ApplyDsc();
                //$("#__AntiForgeryForm").submit();
            }
        }
    }


    function ApplyDsc() {
        if (confirm("Digital Signature is require for Submitting the Online Application. Are you sure to proceed?")) {
            $("#__AntiForgeryForm").submit();
        }
    }
    $(document).ready(function () {
        $("#chkICICI").click(function () {
            $("#divPaymentOption").show();
        })
        $("#chkHDFC").click(function () {
            $("#divPaymentOption").hide();
        })
        $("#chkSBI").click(function () {
            $("#divPaymentOption").hide();
        })


        $("#chkICICINetBanking").click(function () {
            $("#divNetBankingPayment").show();
        })

        $("#chkNEFT").click(function () {
            $("#divNetBankingPayment").hide();
        })
    });

    var Ibmrecv = 0;
    $('input[name="IBM_ReceivingFile"]').bind('change', function () { Ibmrecv = this.files[0].size; return false; });
    $('input[name="IBM_ReceivingFile"]').bind('change', function () {
        debugger;
        filesize = this.files[0].size;
        var filess = this.files;
        var label = $(this).siblings('.custom-file-label');
        var val = $(this).val().toLowerCase(),
            regex = new RegExp("(.*?)\.(pdf|jpeg|jpg|png|tif)$");
        var extension = val.substr((val.lastIndexOf('.') + 1));
        if (!(regex.test(val))) {
            debugger;
            swal("", " " + extension + "  type is not an allowed file type. You can use only jpg, jpeg, png, pdf, tif types of file(s). ", "warning");
            this.value = '';
            label.html('');
            $("#IBM_ReceivingFile").focus();
            return false;
        }
        else {
            label.html(filess.length + ' Files Selected');
        }
        return false;

    });
    var Bankguranteefile = 0;
    $('input[name="BankGaurrantyFile"]').bind('change', function () { Bankguranteefile = this.files[0].size; return false; });
    $('input[name="BankGaurrantyFile"]').bind('change', function () {
        debugger;
        filesize = this.files[0].size;
        var filess = this.files;
        var label = $(this).siblings('.custom-file-label');
        var val = $(this).val().toLowerCase(),
            regex = new RegExp("(.*?)\.(pdf|jpeg|jpg|png|tif)$");
        var extension = val.substr((val.lastIndexOf('.') + 1));
        if (!(regex.test(val))) {
            debugger;
            swal("", " " + extension + "  type is not an allowed file type. You can use only jpg, jpeg, png, pdf, tif types of file(s). ", "warning");
            this.value = '';
            label.html('');
            $("#BankGaurrantyFile").focus();
            return false;
        }
        else {
            label.html(filess.length + ' Files Selected');
        }
        return false;

    });
</script>

