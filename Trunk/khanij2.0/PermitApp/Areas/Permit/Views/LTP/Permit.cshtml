@model PermitEF.LTPInfo
@{
    ViewData["Title"] = "LTPPermit";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}
@*<script src=" https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>*@

<style>
    @@media screen and (max-width: 1366px)
     {
        .note-sec .col-form-label {
            height: 50px;
        }
     }
    @@media screen and (max-width: 640px) {
        .note-sec .col-form-label {
            height: auto;
        }
    }
</style>
<section class="wrapper main-wrapper row">
    <div class="col-12">
        @Html.Partial("_CMSnavigation")
        @*MAIN CONTENT AREA STARTS*@
        <div class="row">
            <div class="col-12">
                <div class="main-tab">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" href="javascript:void(0);">
                                Apply New LTP
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Content("~/Permit/LTP/Permit_List")">
                                Generated e-LTP Permit
                            </a>
                        </li>

                    </ul>
                    @Html.Partial("_CMSutil")
                </div>

                <section class="box form-container">
                    @using (Html.BeginForm("Permit", "LTP", FormMethod.Post, new { enctype = "multipart/form-data", AUTOCOMPLETE = "Off", id = "Form" }))
                    {
                        @Html.HiddenFor(model => model.LTPPermitId)
                        @Html.HiddenFor(model => model.UserTypeId)
                        @Html.HiddenFor(model => model.LicenseId)
                        @Html.HiddenFor(model => model.IsApproved)
                        @Html.HiddenFor(model => model.IsReject)
                        <div class="content-body">
                            <div class="bg-light p-3 shadow-sm mb-4">
                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label">Name of Applicant</label>
                                    <div class="col-lg-9 col-md-8 col-sm-12">
                                        <label class="form-control-plaintext">
                                            <span class="colon">:</span>
                                            @Html.DisplayFor(model => model.LicenseName, new { @class = "plaintext", @readonly = "readonly" })
                                            @*<span id='pu'>@Model.LicenseName</span>*@
                                        </label>
                                    </div>
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label">Designation(In Case Of Company Or Firm)</label>
                                    <div class="col-lg-9 col-md-8 col-sm-12">
                                        <label class="form-control-plaintext">
                                            <span class="colon">:</span>
                                            <span id='DesignationName'>@Model.DesignationName</span>
                                           
                                        </label>

                                    </div>
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label">Mobile Number</label>
                                    <div class="col-lg-9 col-md-8 col-sm-12">
                                        <label class="form-control-plaintext">
                                            <span class="colon">:</span>
                                            @Html.DisplayFor(model => model.MobileNo, new { @class = "plaintext", @readonly = "readonly" })
                                        </label>
                                    </div>

                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label">Name of the recipient of the mineral</label>
                                    <div class="col-lg-9 col-md-8 col-sm-12">
                                        <label class="form-control-plaintext">
                                            <span class="colon">:</span>
                                            <span id='Consignee'>@Model.NameoftheRecieptMineral</span>
                                            @Html.HiddenFor(model => model.NameoftheRecieptMineralId)
                                        </label>
                                    </div>
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label">Address</label>
                                    <div class="col-lg-9 col-md-8 col-sm-12">
                                        <label class="form-control-plaintext">
                                            <span class="colon">:</span>
                                            <span id='Consignee'>@Model.Address</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="row note-sec">
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <h5 class="text-brown font-weight-bold mt-0">Application for Railway Transit Pass</h5>
                                </div>

                                <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Received From<span class="text-danger">*</span></label>
                                    @(Html.RadioButtonFor(e => e.ReceivedFrom, "INSIDESTATE", new { onchange = "onRadioChange()", @checked = "checked" }))
                                    INSIDE STATE

                                    @(Html.RadioButtonFor(e => e.ReceivedFrom, "OUTSIDESTATE", new { onchange = "onRadioChange()" }))
                                    OUTSIDE STATE / Manual RTP of Chhattisgarh
                                </div>

                                <div class="col-lg-4 col-md-6 col-sm-12 form-group" id="RTPPassListDropdown">
                                    <label class="col-form-label font-weight-bolder">e-RTP Pass No.<span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(model => model.RTPPassId, ViewBag.RTPPassNo as IEnumerable<SelectListItem>, "---Select---", new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })
                                </div>

                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Name Of The Mineral<span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(model => model.MineralId, ViewBag.Mineral as IEnumerable<SelectListItem>, "---Select---", new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })
                                    @(Html.HiddenFor(model => model.MineralName))
                                    @(Html.HiddenFor(model => model.MineralId))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Mineral Form<span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(model => model.MineralNatureId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })
                                    @(Html.HiddenFor(model => model.MineralNatureId))
                                </div>


                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Mineral Grade<span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        @Html.DropDownListFor(model => model.MineralGradeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })
                                        @(Html.HiddenFor(model => model.MineralGradeId))

                                    </div>
                                </div>

                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Quantity of The Mineral To Be Brought By Way Of Railway Transportation (Cubic Meter/Ton)<span class="text-danger">*</span></label>
                                    @(Html.TextBoxFor(model => model.qtybyRailway, new { @class = "form-control", Onkeypress = "return inputLimiter(event,'Numbers')" }))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Name of The Railway Siding (From Where The Mineral Is Transported (Source Siding)) <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(model => model.FromRailwaySidingId, ViewBag.RailwaySidingFrom as IEnumerable<SelectListItem>, "---Select---", new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })
                                    @(Html.HiddenFor(model => model.FromRailwaySidingName))
                                    @(Html.HiddenFor(model => model.FromRailwaySidingId))
                                </div>

                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Name of The Railway Siding (Where The Mineral Is To Be Unloaded (Destination Siding))<span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(model => model.WhereRailwaySidingId, ViewBag.RailwaySidingDestination as IEnumerable<SelectListItem>, "---Select---", new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })
                                    @(Html.HiddenFor(model => model.WhereRailwaySidingName, "Name of the Railway siding (Where the mineral is to be unloaded) "))
                                    @(Html.HiddenFor(model => model.WhereRailwaySidingId))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Purpose (Private Plant/Processing Plant/Licensed Place/Other)<span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(model => model.Purpose, new List<SelectListItem>
              {
                  new SelectListItem{ Text="Select Status", Value = "0",Selected=true },
                  new SelectListItem{ Text="Private Plant", Value = "Private Plant" },
                  new SelectListItem{ Text="Processing Plant", Value = "Processing Plant" },
                  new SelectListItem{ Text="Licensed Place", Value = "Licensed Place" },
                  new SelectListItem{ Text="Other", Value = "Other" },

               }, new { @class = "form-control", required = "required", autofocus = "autofocus" })
                                    @*@Html.DropDownListFor(model => model.Purpose, ViewBag.Purpose as IEnumerable<SelectListItem>, "---Select---", new { @class = "form-control form-control-sm searchableselect", autofocus = "autofocus" })*@
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Complete Address Of Destination<span class="text-danger">*</span></label>
                                    @*@Html.DisplayFor(model => model.DestinationAddress, new { @class = "plaintext", @readonly = "readonly" })*@
                                    @(Html.TextAreaFor(model => model.DestinationAddress, new { @class = "form-control" }))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Transportation Route Via<span class="text-danger">*</span></label>
                                    @(Html.TextBoxFor(model => model.TransportationRoute, new { @class = "form-control" }))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Other Details<span class="text-danger">*</span></label>
                                    @(Html.TextBoxFor(model => model.OtherDetails, new { @class = "form-control" }))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Details Of Railway Receipt <span class="text-danger">*</span></label>
                                    @(Html.TextBoxFor(model => model.DetailsofRailwayReciept, new { @class = "form-control" }))
                                </div>
                                <div class="col-lg-4 col-md-6 col-sm-12 form-group">
                                    <label class="col-form-label font-weight-bolder">Attachment <span class="text-danger">*</span></label>
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" id="Upload" name="flLTPCopy" multiple>
                                        <label class="custom-file-label" for="Upload">Choose Files</label>
                                    </div>
                                </div>
                                <div class="col-lg-12 mt-4">
                                    @if (Model.LTPPermitId == null || Model.LTPPermitId.Value == 0)
                                    {
                                        <input type="button" name="command" id="btnSave" value="Submit" onclick="return ForDSC()" class="btn btn-primary" />

                                    }

                                </div>


                            </div>

                        </div>

                    }
                </section>
            </div>
        </div>
    </div>
    @*MAIN CONTENT AREA ENDS*@
</section>
@*<uc1:footer runat="server" ID="footer" />*@
<script>
    indicateMe = "yes"
    backMe = "yes"
    $(document).ready(function () {
        loadNavigation('Add', 'glhelpdesk', 'plraiseticket', 'tl', 'LTP', 'Apply New LTP', ' ');
        $('.datetime').datetimepicker({
            format: "DD/MM/YYYY"
        }).keydown(false);
    });
</script>


<script>

    function onRadioChange() {
        var SelectedRadioVal = $("input[name='ReceivedFrom']:checked").val();

        if (SelectedRadioVal == 'INSIDESTATE') {
            /*$('#RTPPassListLabel').show();*/
            $("#RTPPassListDropdown").show();
            
            //$('#MineralId').attr("disabled", true);
            //$('#MineralNatureId').attr("disabled", true);
            //$('#MineralGradeId').attr("disabled", true);
            //$('#FromRailwaySidingId').attr("disabled", true);
            //$('#WhereRailwaySidingId').attr("disabled", true);
            //$('#DestinationAddress').attr("readonly", "readonly");
            //$('#qtybyRailway').attr("readonly", "readonly");
            
            //var RTPDropdownVal = $("#RTPPassId").val();
        }
        else {
            //var rtpdropdown = $("#RTPPassId").data("kendoComboBox");
            //rtpdropdown.select(-1);
            /* $('#RTPPassListLabel').hide();*/
            $('#MineralId').attr("disabled", false);
            $('#MineralNatureId').attr("disabled", false);
            $('#MineralGradeId').attr("disabled", false);
            $('#FromRailwaySidingId').attr("disabled", false);
            $('#WhereRailwaySidingId').attr("disabled", false);
            $("#DestinationAddress").removeAttr('readonly');
            $("#qtybyRailway").removeAttr('readonly');
            $("#RTPPassListDropdown").hide();
            $("#LicenseName").val('@Model.LicenseName');
            $("#DesignationName").val('@Model.DesignationName');
            $("#MobileNo").val('@Model.MobileNo');

            $("#qtybyRailway").val(0).focusout();
            $("#NameoftheRecieptMineral").val('@Model.NameoftheRecieptMineral').focusout();
            $("#Address").val('@Model.Address').focusout();
            $("#DestinationAddress").val('').focusout();
        }


    }

   
    function GetCreatedBy() {
        return {
            CreatedBy: $("#CREATED_BY").val()
        };
    }

    $(document).ready(function () {
      //  $('#rootwizard').bootstrapWizard({ 'tabClass': 'bwizard-steps' });

        if ('@TempData["AckMessage"]' != '') {
            alert('@TempData["AckMessage"]');

        }
        onRadioChange();
    });

    //$(function () {
    //    $("form").kendoValidator();
    //});

    function sendAntiForgery() {
        return { "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() }
    }
       function checkFields() {

           var valid = 1;
           if (!DropDownValidation("MineralId", "mineral name.")) {
               valid = 0;
               return false;
           }
           if (!DropDownValidation("MineralNatureId", "mineral form")) {
               valid = 0;
               return false;
           }
           if (!DropDownValidation("MineralGradeId", "grade")) {
               valid = 0;
               return false;
           }
           if (!blankFieldValidation("qtybyRailway", "qty of the mineral.")) {
            valid = 0;
            return false;
        }
           if (!DropDownValidation("FromRailwaySidingId", "from railway siding.")) {
             valid = 0;
             return false;
           }
           if (!DropDownValidation("WhereRailwaySidingId", "where railway siding.")) {
               valid = 0;
               return false;
           }
           if (!DropDownValidation("Purpose", "purpose.")) {
               valid = 0;
               return false;
           }

           if (!blankFieldValidation("DestinationAddress", "desination address.")) {
             valid = 0;
             return false;
         }


           if (!blankFieldValidation("TransportationRoute", "transportation route.")) {
             valid = 0;
             return false;
           }
           if (!blankFieldValidation("DetailsofRailwayReciept", "details of railway reciept.")) {
               valid = 0;
               return false;
           }

        //if (filesize == 0) {
        //    alert("Upload Forwarding Receipt");
        //    return false;
        //}
        //if (filesize > 2048000) {
        //    alert(filesize);
        //    alert("Upload file should be less then equal to 2 MB!");
        //    return false;
        //}

        return valid;

    }
    function ForDSC() {
      
        //alert($("#MineralId").val());
        //alert($("#MineralNatureId").val());
        //alert($("#MineralGradeId").val());

        var MId = $("#MineralId").val();
        var MNId = $("#MineralNatureId").val();
        var MGId = $("#MineralGradeId").val();


        if (MId > 0 && MNId > 0 && MGId > 0) {

            try {
              
               // var validatable = $("form").kendoValidator().data("kendoValidator");
                var checkdata = checkFields();
                if (checkdata == 1) {
                   
                    var SelectedRadioVal = $("input[name='ReceivedFrom']:checked").val();
                    if (SelectedRadioVal == 'INSIDESTATE') {
                        var RTPPass = $("#RTPPassId").val();
                        if (RTPPass == 0 || RTPPass == '' || RTPPass == 'undefined') {
                            alert("Please select e-RTP Pass No.");
                            return false;
                        }
                    }
                    $('#MineralId').attr("disabled", false);
                    $('#MineralNatureId').attr("disabled", false);
                    $('#MineralGradeId').attr("disabled", false);
                    $('#FromRailwaySidingId').attr("disabled", false);
                    $('#WhereRailwaySidingId').attr("disabled", false);

                    $(".loader-wrap").show();
                    if (confirm("Before submit e-permit you need to apply your Digital Signature. Are you confirmed to submit Application??")) {

                        var Postdata = 'action=signdoc' + "\n" + 'datatosign=Digital Signature Required' + "\n" + 'signaction=sign' + "\n" + 'filepath=' + "\n" + 'panNumberParam=' + "\n" + 'expirycheck=false' + "\n" + 'issuername=' + "\n" + 'certclass=1|2|3' + "\n" + 'certtype=ALL';
                        connection.send(Postdata);

                        connection.onerror = function (error) {
                            alert('Please check the server connection: ' + error);
                            alert(error);
                        };

                        connection.onmessage = function (e) { // when DSC is success then following function executed.
                            if (e.data.indexOf("subProtocol") == -1) {
                                $("#DSCResponse").val(e.data).change();
                                $(".loader-wrap").show();
                                $.ajax(
                                {
                                    url: '@Url.Action("CheckVerifyResponse", "Transit", new { Area = "Permit" })',
                                    type: "POST",
                                    data: { contentType: "pkcs7", signDataBase64Encoded: e.data, responseType: "plain" },
                                    success: function (msg) {
                                        if (msg == "SUCCESS") {
                                            $("#Form").submit();

                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    }
                                });



                            }
                            else {
                                alert(e.data);
                            }


                        };
                    }
                }



                else {
                    return false;
                }
            }
            catch (e) {
                return false;

            }
        }
        else {
            alert('Please select proper value of mineral Grade.');
        }
    }

    try {
        var connection = new WebSocket('wss://localhost.emudhra.com:8080');
        connection.onopen = function () {
            console.log('Connection Opened');
        };
        connection.onerror = function (error) {
        };
        connection.onmessage = function (e) {
            if (e.data.indexOf("subProtocol") == -1) {
            }
        };
    }
    catch (e) {
        swal("", "No DSC Connection Found", "warning");
    }

    function minmax(value, min, max) {
        if (parseInt(value) < min || isNaN(parseInt(value)))
            return 0;
        else if (parseInt(value) > max)
            return 3999;
        else return value;

    }

    var forminterval = null, gradeinterval = null;


function clear() {
    clearInterval(forminterval);
}

function clear1() {
    clearInterval(gradeinterval);
}

</script>
<script>
    $(document).ready(function () {
        var MineralNatureIdd = 0;
        $("#RTPPassId").change(function () {
         
            var RTPPass = $('#RTPPassId').val();
    // var RTPPass = $("#RTPPassId").data('kendoComboBox').value();
        var i = 0, j = 0;
            if (RTPPass != '---Select---') {
                $.ajax(
                    {
                        //url: "/Permit/LTP/GetuserDetailsUsingRTP",
                        url: '@Url.Action("GetuserDetailsUsingRTP", "LTP", new { Area = "Permit" })',
                        type: "POST",
                        data: { RTPPassID: RTPPass },
                        //contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        //async: false,
                        success: function (SList) {
                           
                            $.each(SList, function (i, result) {
                                //Bind mineral nature on the selection of mineral
                                $.ajax({
                                    type: "POST",
                                    url: "/Permit/LTP/GetMineralNature",
                                    data: { 'MineralId': result.MineralID },
                                    // cache: false,
                                    //contentType: "application/json",
                                    datatype: "JSON",
                                    success: function (NatureList) {
                                        $('#MineralNatureId').empty();
                                        var opt = new Option('---Select---', 0);
                                        $('#MineralNatureId').append(opt).selectpicker('refresh');
                                        $.each(NatureList, function (i, item) {
                                            var opt = new Option(item.MineralNature, item.MineralNatureId);
                                            $('#MineralNatureId').append(opt).selectpicker('refresh');
                                        });
                                        $('#MineralNatureId').val(result.MineralNatureId);
                                    }
                                    
                                });
                                //Bind the mineral grade on the selection of mineral nature
                                $.ajax({
                                    type: "POST",
                                    url: "/Permit/LTP/GetMineralGrade",
                                    data: { 'MineralNatureId': result.MineralNatureId },
                                    // cache: false,
                                    //contentType: "application/json",
                                    datatype: "JSON",
                                    success: function (GradeList) {
                                        $('#MineralGradeId').empty();
                                        var opt = new Option('---Select---', 0);
                                        $('#MineralGradeId').append(opt).selectpicker('refresh');
                                        $.each(GradeList, function (i, item) {
                                            var opt = new Option(item.MineralGrade, item.MineralGradeId);
                                            $('#MineralGradeId').append(opt).selectpicker('refresh');
                                        });
                                        $('#MineralGradeId').val(result.MineralGradeId);
                                    }

                                });
                                                            
                                //MineralNatureIdd = result.MineralNatureId;
                                /*$('#MineralNatureId').val(result.MineralNatureId).change();*/
                                //if (result != "" && result != null && result != 'undefined') {
                                $("#LicenseName").val(result.LicenseName);
                                var pu = $("#DesignationName");
                                pu.empty();
                                pu.append(result.Designation);
                                $("#DesignationName").val(result.Designation);
                                $("#MobileNo").val(result.MobileNo);
                                $('#MineralId').val(result.MineralID).change();
                               
                                $('#FromRailwaySidingId').val(result.SourceRailwayID).change();
                                $('#WhereRailwaySidingId').val(result.DestinationRailwayID).change();
                                $("#NameoftheRecieptMineralId").val(result.RecipientId);
                                $("#qtybyRailway").val(result.RTPQuantity).focusout();
                                $("#NameoftheRecieptMineral").val(result.RecipientName);
                                $("#Address").val(result.Address).focusout();
                                $("#DestinationAddress").val(result.DestinationAddress).focusout();
                                $('.pointer').css("pointer-events", "none");
                            });
                        }
                    });
            }
            else {
                
                $('#MineralNatureId').val(0);
                $('#MineralGradeId').val(0);
                $('#MineralId').val(0);
            }
          
            //alert(MineralNatureIdd);
            //$('#MineralNatureId').val(6).change();
        });
        //Bind mineral nature on the selection of mineral
        $("#MineralId").change(function () {
            var MineralID = $("#MineralId").val();
            $.ajax({
                type: "POST",
                url: "/Permit/LTP/GetMineralNature",
                data: { 'MineralId': MineralID },
                // cache: false,
                //contentType: "application/json",
                datatype: "JSON",
                success: function (NatureList) {
                    $('#MineralNatureId').empty();
                    var opt = new Option('---Select---', 0);
                    $('#MineralNatureId').append(opt).selectpicker('refresh');
                    $.each(NatureList, function (i, item) {
                        var opt = new Option(item.MineralNature, item.MineralNatureId);
                        $('#MineralNatureId').append(opt).selectpicker('refresh');
                    });
                   
                }

            });
        });
        //Bind the mineral grade on the selection of mineral nature
        $("#MineralNatureId").change(function () {
            var MineralNatureId = $("#MineralNatureId").val();
            $.ajax({
                type: "POST",
                url: "/Permit/LTP/GetMineralGrade",
                data: { 'MineralNatureId': MineralNatureId },
                // cache: false,
                //contentType: "application/json",
                datatype: "JSON",
                success: function (GradeList) {
                    $('#MineralGradeId').empty();
                    var opt = new Option('---Select---', 0);
                    $('#MineralGradeId').append(opt).selectpicker('refresh');
                    $.each(GradeList, function (i, item) {
                        var opt = new Option(item.MineralGrade, item.MineralGradeId);
                        $('#MineralGradeId').append(opt).selectpicker('refresh');
                    });
                   
                }

            });
        });
            });
</script>
