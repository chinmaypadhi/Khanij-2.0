@model PermitEF.ePermitModel

@{
    ViewData["Title"] = "ePermitPayment";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}

<style>
    .colon {top: 7px;}


    /*  bhoechie tab */
    div.bhoechie-tab-container {
        z-index: 0;
        background-color: #ffffff;
        padding: 0 !important;
        border-radius: 4px;
        -moz-border-radius: 4px;
        border: 1px solid #ddd;
        margin-top: 20px;
        margin-left: 0px;
        margin-bottom: 20px;
        -webkit-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        box-shadow: 0 6px 12px rgba(0,0,0,.175);
        -moz-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        background-clip: padding-box;
        opacity: 0.97;
        filter: alpha(opacity=97);
    }

    div.bhoechie-tab-menu {
        padding-right: 0;
        padding-left: 0;
        padding-bottom: 0;
    }

        div.bhoechie-tab-menu div.list-group {
            margin-bottom: 0;
        }

            div.bhoechie-tab-menu div.list-group > a {
                margin-bottom: 0;
            }

                div.bhoechie-tab-menu div.list-group > a .glyphicon,
                div.bhoechie-tab-menu div.list-group > a .fa {
                    color: #5A55A3;
                }

                div.bhoechie-tab-menu div.list-group > a:first-child {
                    border-top-right-radius: 0;
                    -moz-border-top-right-radius: 0;
                }

                div.bhoechie-tab-menu div.list-group > a:last-child {
                    border-bottom-right-radius: 0;
                    -moz-border-bottom-right-radius: 0;
                }

                div.bhoechie-tab-menu div.list-group > a.active,
                div.bhoechie-tab-menu div.list-group > a.active .glyphicon,
                div.bhoechie-tab-menu div.list-group > a.active .fa {
                    background-color: #5A55A3;
                    background-image: #5A55A3;
                    color: #ffffff;
                }

                    div.bhoechie-tab-menu div.list-group > a.active:after {
                        content: '';
                        position: absolute;
                        left: 100%;
                        top: 50%;
                        margin-top: -13px;
                        border-left: 0;
                        border-bottom: 13px solid transparent;
                        border-top: 13px solid transparent;
                        border-left: 10px solid #5A55A3;
                    }

    div.bhoechie-tab-content {
        background-color: #ffffff;
        /* border: 1px solid #eeeeee; */
        padding-left: 20px;
        padding-top: 10px;
    }

    div.bhoechie-tab div.bhoechie-tab-content:not(.active) {
        display: none;
    }
</style>

<section class="wrapper main-wrapper row">
    <div class="col-12" id="mainDiv">
        @Html.Partial("_CMSnavigation")
        <!-- MAIN CONTENT AREA STARTS -->
        <div class="row">
            <div class="col-12">
                <div class="main-tab">
                    <ul class="nav nav-tabs">

                        <li class="nav-item">
                            <a class="nav-link active" href="#">
                                Generated e-Permit List
                            </a>
                        </li>

                    </ul>
                    @Html.Partial("_CMSutil")
                </div>
                <section class="box form-container">
                    <div class="content-body">
                        @*@if (Model != null)
        {*@
                        @using (Html.BeginForm("MakeEndUserPayment", "BulkPermit", FormMethod.Post, new { AUTOCOMPLETE = "Off", id = "form1" }))
                        {
                        @Html.HiddenFor(model => model.ProposedQty)
                        @Html.HiddenFor(model => model.BulkPermitId)
                        @Html.HiddenFor(model => model.TotalPayableAmount)
                        @Html.HiddenFor(model => model.MineralName)
                        @Html.HiddenFor(model => model.MineralGradeName)
                        @Html.HiddenFor(model => model.EmailId)
                        @Html.HiddenFor(model => model.MobileNo)

                        @(Html.HiddenFor(model => model.PayableRoyalty))
                        @(Html.HiddenFor(model => model.NMET))
                        @(Html.HiddenFor(model => model.TCS))
                        @(Html.HiddenFor(model => model.DMF))
                        @(Html.HiddenFor(model => model.Cess))
                        @(Html.HiddenFor(model => model.eCess))
                        @(Html.HiddenFor(model => model.Production))
                        @(Html.HiddenFor(model => model.RemainingProduction))
                        @(Html.HiddenFor(model => model.MineralGradeName))
                        @(Html.HiddenFor(model => model.MineralNature))
                        @(Html.HiddenFor(model => model.BasicRate))

                        @Html.HiddenFor(model => model.PaymentStatus)
                        @(Html.HiddenFor(model => model.PaymentBank))
                        @(Html.HiddenFor(model => model.PaymentMode))
                        @(Html.HiddenFor(model => model.P_Mode))

                        @(Html.HiddenFor(model => model.GeneratedBy))
                        @(Html.HiddenFor(model => model.GeneratedDesignation))
                        @(Html.HiddenFor(model => model.BulkPermitNo))
                        @(Html.HiddenFor(model => model.ActiveStatus))
                        @(Html.HiddenFor(model => model.TransactionalID))
                        @(Html.HiddenFor(model => model.TillDateBalanceUpfrontPayment))
                        @(Html.HiddenFor(model => model.EAuctionType))
                        @(Html.HiddenFor(model => model.DistrictId))
                        @(Html.HiddenFor(model => model.District))
                        @(Html.HiddenFor(model => model.DistrictCode))



                        <div class="row">

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Name of lessee/ licensee </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.LesseeName, new { @class = "form-control-plaintext" }))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Grant Order Number </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.GrantOrderNo, new { @class = "form-control-plaintext" }))
                                @(Html.HiddenFor(model => model.GrantOrderNo))
                            </div>



                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Period of Lease </label>
                            <div class="col-lg-3 col-md-8 col-sm-12 ">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.PeriodOfLease, new { @class = "form-control-plaintext" }))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Mineral Form </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.MineralNature, new { @class = "form-control-plaintext" }))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Unit </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.UnitName, new { @class = "form-control-plaintext" }))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Basic Price/Royalty Rate </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @*<div class="col-md-5 default-form-control-style">
            @(Html.Label("Basic Price/Royalty Rate"))
        </div>*@
                                @*<div class="col-md-3 default-form-control-style">*@
                                @if (Model != null && Model.PaymentDetails != null && Model.PaymentDetails.Count > 0)
                                {
                                    for (int i = 0; i < Model.PaymentDetails.Count; i++)
                                    {
                                        if (Model.PaymentDetails[i].PaymentType.ToUpper().Contains("ROYALTY"))
                                        {
                                            if (Model.PaymentDetails[i].CalType.ToUpper().Contains("%") == false)
                                            {

                                                <label class="form-control-plaintext" id="RoyaltyRate">@Model.PaymentDetails[i].CalValue @Model.PaymentDetails[i].CalType</label>
                                                @*<input class="form-control" data-val="true" data-val-number="The field RoyaltyRate must be a number."
                        id="RoyaltyRate" name="RoyaltyRate" readonly="readonly" type="text" value="@Model.PaymentDetails[i].CalValue @Model.PaymentDetails[i].CalType ">*@
                                            }
                                            else
                                            {
                                                <label class="form-control-plaintext" id="RoyaltyRate">@Model.PaymentDetails[i].CalValue (@Model.PaymentDetails[i].RoyaltyRate @Model.PaymentDetails[i].CalType Of @Model.PaymentDetails[i].BasisRate</label>
                                                @*<input class="form-control" data-val="true" data-val-number="The field RoyaltyRate must be a number."
                        id="RoyaltyRate" name="RoyaltyRate" readonly="readonly" type="text" value="@Model.PaymentDetails[i].CalValue (@Model.PaymentDetails[i].RoyaltyRate @Model.PaymentDetails[i].CalType Of @Model.PaymentDetails[i].BasisRate)">*@
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    @(Html.LabelFor(model => model.RoyaltyRate, new { @class = "form-control-plaintext" }))
                                }
                                @*</div>*@
                            </div>




                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Address </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.LesseeAddress, new { @class = "form-control-plaintext"}))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Grant Order Date </label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.DateOfGrant, new { @class = "form-control-plaintext" }))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Mineral Name</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.MineralName, new { @class = "form-control-plaintext" }))
                                @(Html.HiddenFor(model => model.MineralId))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Mineral Grade</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.MineralGradeName, new { @class = "form-control-plaintext" }))
                                @(Html.HiddenFor(model => model.MineralGradeId))
                            </div>



                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Quantity</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.ProposedQty, new { @class = "form-control-plaintext" }))
                            </div>


                        </div>



                        <h4 class="mt-3">Lease/License information</h4>

                        <hr />

                        <div class="row">

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Village</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.Village, new { @class = "form-control-plaintext" }))
                            </div>

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Panchayat</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.Panchayat, new { @class = "form-control-plaintext" }))
                            </div>

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">District</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.District, new { @class = "form-control-plaintext" }))
                            </div>



                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Tehsil</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.Tehsil, new {@class = "form-control-plaintext" }))
                            </div>


                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Police Station</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.PoliceStation, new { @class = "form-control-plaintext" }))
                            </div>


                            @if (Model != null && Model.EAuctionType == "2")
                                    {




                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Till Date Balance Amount</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.TillDateBalanceUpfrontPayment, new { @class = "form-control-plaintext"}))
                            </div>



                                    }

                        </div>




                        <h4 class="mt-3">Calculation</h4>

                        <hr />


                        <p class="font-weight-bold">a) Mining Department</p>
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11)
                                            {
                                        <th class="font-weight-bolder">Online Paid</th>
                                            }
                                            else
                                            {
                                        <th class="font-weight-bolder">Payable Online</th>
                                            }
                                        <th class="font-weight-bolder">Total Amount</th>
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11)
                                            {
                                        <th class="font-weight-bolder">Total Wallet Amount (At the time of Payment)</th>
                                            }
                                            else
                                            {
                                        <th class="font-weight-bolder">Total Wallet Amount</th>
                                            }
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11)
                                            {
                                        <th class="font-weight-bolder">Paid by Wallet Amount</th>
                                            }
                                            else
                                            {
                                        <th class="font-weight-bolder">Pay by Wallet Amount</th>

                                            }
                                        <th class="font-weight-bolder"></th>
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11)
                                            {
                                        <th class="font-weight-bolder">Paid Amount</th>
                                            }
                                            else
                                            {
                                        <th class="font-weight-bolder">Payable Amount</th>
                                            }

                                    </tr>
                                </thead>
                                <tbody>

                                    @if (Model != null && Model.PaymentDetails != null && Model.PaymentDetails.Count > 0)
                                        {
                                            decimal A = 0;
                                            decimal B = 0;
                                            decimal C = 0;
                                            decimal D = 0;
                                            int count = 0;
                                            var pid = 0;
                                            var bulkid = 0;
                                            string order = null;
                                            int noncount = 0;
                                            int fcont = 0;

                                            for (int i = 0; i < Model.PaymentDetails.Count; i++)
                                            {
                                                if (Model.PaymentDetails[i].PayDeptId == 1 && Model.PaymentDetails[i].ApplicableId == 1)
                                                {
                                                    fcont += 1;
                                                    if (Model.PaymentDetails[i].OrderNStatus == 1)
                                                    {
                                                        noncount = noncount + 1;
                                                    }
                                                    if (Model.PaymentDetails[i].MakePayementId == 1)
                                                    {
                                                        count = count + 1;
                                                    }
                                                    order = Convert.ToString(Model.MiningOrder);
                                                    bulkid = Convert.ToInt32(Model.BulkPermitId);
                                                    pid = Convert.ToInt32(Model.PaymentDetails[i].PayDeptId);
                                                    if (Model.PaymentDetails[i].MakePayementId == 1)
                                                    {
                                                        A += Convert.ToDecimal(Model.PaymentDetails[i].TotalAmount);
                                                        B += Convert.ToDecimal(Model.PaymentDetails[i].AdjustmentAmount);
                                                        C += Convert.ToDecimal(Model.PaymentDetails[i].WalletAdjustedAmount);
                                                        if (Model.PaymentDetails[i].WalletAdjustedAmount != 0)
                                                        {
                                                            D += Convert.ToDecimal(Model.PaymentDetails[i].MappingValue) - Model.PaymentDetails[i].WalletAdjustedAmount;
                                                        }
                                                        else
                                                        {
                                                            D += Convert.ToDecimal(Model.PaymentDetails[i].MappingValue);
                                                        }
                                                    }
                                    <tr>
                                        <td width="100px">@Model.PaymentDetails[i].PaymentType</td>
                                        <td width="100px">@Model.PaymentDetails[i].TotalAmount</td>
                                        <td width="100px">@Model.PaymentDetails[i].AdjustmentAmount</td>
                                        <td width="100px">@Model.PaymentDetails[i].WalletAdjustedAmount</td>
                                        <td width="50px">=</td>
                                        @if (Model.PaymentDetails[i].MakePayementId == 1)
                                                        {
                                                            if (Model.PaymentDetails[i].WalletAdjustedAmount != 0)
                                                            {
                                                                var mappval = (Convert.ToDecimal(Model.PaymentDetails[i].MappingValue) - Model.PaymentDetails[i].WalletAdjustedAmount).ToString();
                                        <td width="100px">@mappval</td>
}
else
{
                                        <td width="100px">@Model.PaymentDetails[i].MappingValue</td>

}
}
else
{
                                        <td width="100px" style="background-color:red">@Model.PaymentDetails[i].MappingValue (Not Applicable For Online Payment)</td>
}


                                    </tr>
                                                }

                                            }

                                            if (fcont == 0)
                                            {
                                    <tr>
                                        <td style="color:red;" width="100px">No Record Available</td>
                                    </tr>
                                            }
                                            else
                                            {

                                    <tr>
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11 || count == noncount)
                                                    {
                                        <td width="100px">Total Paid Amount</td>
                                                    }
                                                    else
                                                    {
                                        <td width="100px">Total Payable Amount</td>
                                                    }
                                        <td width="100px">@A</td>

                                        <td width="100px">@B</td>
                                        <td width="100px">@C</td>
                                        <td width="50px">=</td>
                                        <td width="100px">@D</td>

                                    </tr>
                                            }
                                        }
                                </tbody>
                            </table>
                        </div>

                        <p class="font-weight-bold">b) Income Tax Department</p>

                        <div class="table-responsive">
                            <table class="table table-bordered">

                                <tbody>

                                    @if (Model != null && Model.PaymentDetails != null && Model.PaymentDetails.Count > 0)
                                        {
                                            decimal A = 0;
                                            decimal B = 0;
                                            decimal C = 0;
                                            decimal D = 0;
                                            int count = 0;
                                            var pid = 0;
                                            var bulkid = 0;
                                            string order = null;
                                            int noncount = 0;
                                            int fcont = 0;

                                            for (int i = 0; i < Model.PaymentDetails.Count; i++)
                                            {
                                                if (Model.PaymentDetails[i].PayDeptId == 2 && Model.PaymentDetails[i].ApplicableId == 1)
                                                {
                                                    fcont += 1;
                                                    if (Model.PaymentDetails[i].OrderNStatus == 1)
                                                    {
                                                        noncount = noncount + 1;
                                                    }
                                                    if (Model.PaymentDetails[i].MakePayementId == 1)
                                                    {
                                                        count = count + 1;
                                                    }
                                                    order = Convert.ToString(Model.MiningOrder);
                                                    bulkid = Convert.ToInt32(Model.BulkPermitId);
                                                    pid = Convert.ToInt32(Model.PaymentDetails[i].PayDeptId);
                                                    if (Model.PaymentDetails[i].MakePayementId == 1)
                                                    {
                                                        A += Convert.ToDecimal(Model.PaymentDetails[i].TotalAmount);
                                                        B += Convert.ToDecimal(Model.PaymentDetails[i].AdjustmentAmount);
                                                        C += Convert.ToDecimal(Model.PaymentDetails[i].WalletAdjustedAmount);
                                                        if (Model.PaymentDetails[i].WalletAdjustedAmount != 0)
                                                        {
                                                            D += Convert.ToDecimal(Model.PaymentDetails[i].MappingValue) - Model.PaymentDetails[i].WalletAdjustedAmount;
                                                        }
                                                        else
                                                        {
                                                            D += Convert.ToDecimal(Model.PaymentDetails[i].MappingValue);
                                                        }
                                                    }
                                    <tr>
                                        <td width="100px">@Model.PaymentDetails[i].PaymentType</td>
                                        <td width="100px">@Model.PaymentDetails[i].TotalAmount</td>
                                        <td width="100px">@Model.PaymentDetails[i].AdjustmentAmount</td>
                                        <td width="100px">@Model.PaymentDetails[i].WalletAdjustedAmount</td>
                                        <td width="50px">=</td>
                                        @if (Model.PaymentDetails[i].MakePayementId == 1)
                                            {
                                                if (Model.PaymentDetails[i].WalletAdjustedAmount != 0)
                                                {
                                                    var mappval = (Convert.ToDecimal(Model.PaymentDetails[i].MappingValue) - Model.PaymentDetails[i].WalletAdjustedAmount).ToString();
                                        <td width="100px">@mappval</td>
                                                }
                                                else
                                                {
                                        <td width="100px">@Model.PaymentDetails[i].MappingValue</td>

                                                }
                                            }
                                            else
                                            {
                                        <td width="100px" style="background-color:red">@Model.PaymentDetails[i].MappingValue (Not Applicable For Online Payment)</td>
                                            }


                                    </tr>
                                                }

                                            }

                                            if (fcont == 0)
                                            {
                                    <tr>
                                        <td style="color:red;" width="100px">No Record Available</td>
                                    </tr>
                                            }
                                            else
                                            {

                                    <tr>
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11 || count == noncount)
                                                    {
                                        <td width="100px">Total Paid Amount</td>
                                                    }
                                                    else
                                                    {
                                        <td width="100px">Total Payable Amount</td>
                                                    }
                                        <td width="100px">@A</td>

                                        <td width="100px">@B</td>
                                        <td width="100px">@C</td>
                                        <td width="50px">=</td>
                                        <td width="100px">@D</td>

                                    </tr>
                                            }
                                        }
                                </tbody>
                            </table>
                        </div>

                        <p class="font-weight-bold">c) EVS Department</p>

                        <div class="table-responsive">
                            <table class="table table-bordered">

                                <tbody>

                                    @if (Model != null && Model.PaymentDetails != null && Model.PaymentDetails.Count > 0)
                                        {
                                            decimal A = 0;
                                            decimal B = 0;
                                            decimal C = 0;
                                            decimal D = 0;
                                            int count = 0;
                                            var pid = 0;
                                            var bulkid = 0;
                                            string order = null;
                                            int noncount = 0;
                                            int fcont = 0;

                                            for (int i = 0; i < Model.PaymentDetails.Count; i++)
                                            {
                                                if (Model.PaymentDetails[i].PayDeptId == 3 && Model.PaymentDetails[i].ApplicableId == 1)
                                                {
                                                    fcont += 1;
                                                    if (Model.PaymentDetails[i].OrderNStatus == 1)
                                                    {
                                                        noncount = noncount + 1;
                                                    }
                                                    if (Model.PaymentDetails[i].MakePayementId == 1)
                                                    {
                                                        count = count + 1;
                                                    }
                                                    order = Convert.ToString(Model.MiningOrder);
                                                    bulkid = Convert.ToInt32(Model.BulkPermitId);
                                                    pid = Convert.ToInt32(Model.PaymentDetails[i].PayDeptId);
                                                    if (Model.PaymentDetails[i].MakePayementId == 1)
                                                    {
                                                        A += Convert.ToDecimal(Model.PaymentDetails[i].TotalAmount);
                                                        B += Convert.ToDecimal(Model.PaymentDetails[i].AdjustmentAmount);
                                                        C += Convert.ToDecimal(Model.PaymentDetails[i].WalletAdjustedAmount);
                                                        if (Model.PaymentDetails[i].WalletAdjustedAmount != 0)
                                                        {
                                                            D += Convert.ToDecimal(Model.PaymentDetails[i].MappingValue) - Model.PaymentDetails[i].WalletAdjustedAmount;
                                                        }
                                                        else
                                                        {
                                                            D += Convert.ToDecimal(Model.PaymentDetails[i].MappingValue);
                                                        }
                                                    }
                                    <tr>
                                        <td width="100px">@Model.PaymentDetails[i].PaymentType</td>
                                        <td width="100px">@Model.PaymentDetails[i].TotalAmount</td>
                                        <td width="100px">@Model.PaymentDetails[i].AdjustmentAmount</td>
                                        <td width="100px">@Model.PaymentDetails[i].WalletAdjustedAmount</td>
                                        <td width="50px">=</td>
                                        @if (Model.PaymentDetails[i].MakePayementId == 1)
                                            {
                                                if (Model.PaymentDetails[i].WalletAdjustedAmount != 0)
                                                {
                                                    var mappval = (Convert.ToDecimal(Model.PaymentDetails[i].MappingValue) - Model.PaymentDetails[i].WalletAdjustedAmount).ToString();
                                        <td width="100px">@mappval</td>
                                                }
                                                else
                                                {
                                        <td width="100px">@Model.PaymentDetails[i].MappingValue</td>

                                                }
                                            }
                                            else
                                            {
                                        <td width="100px" style="background-color:red">@Model.PaymentDetails[i].MappingValue (Not Applicable For Online Payment)</td>
                                            }


                                    </tr>
                                                }

                                            }

                                            if (fcont == 0)
                                            {
                                    <tr>
                                        <td style="color:red;" width="100px">No Record Available</td>
                                    </tr>
                                            }
                                            else
                                            {

                                    <tr>
                                        @if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11 || count == noncount)
                                                    {
                                        <td width="100px">Total Paid Amount</td>
                                                    }
                                                    else
                                                    {
                                        <td width="100px">Total Payable Amount</td>
                                                    }
                                        <td width="100px">@A</td>

                                        <td width="100px">@B</td>
                                        <td width="100px">@C</td>
                                        <td width="50px">=</td>
                                        <td width="100px">@D</td>

                                    </tr>
                                            }
                                        }

                                </tbody>
                            </table>
                        </div>

                            //end
                            if (ViewBag.Adjustment != null && ViewBag.Adjustment.ToString() == "NO")
                            {

                       

                        <h4>Payment information</h4>
                        <hr />


                            }
                            if (Model.ActiveStatus == 6 || Model.ActiveStatus == 7 || Model.ActiveStatus == 11)
                            {
                                if (Model.ChallanNumber == "ONLINE PAYMENT")
                                {
                        @*<div class="col-lg-6 col-md-4 col-xs-12">*@
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="col-lg-2 col-md-12 col-sm-12">
                                    @(Html.Label("Payment Mode"))
                                </div>
                                <div class="col-lg-8 col-md-12 col-sm-12">
                                    @if (Model.ActiveStatus == 7)
                                                {
                                    @(Html.TextBoxFor(model => model.ChallanDate, new { @class = "form-control", @readonly = "readonly", @Value = "Online Payment Awaited" }))
                                                }
                                                else
                                                {
                                    @(Html.TextBoxFor(model => model.ChallanDate, new { @class = "form-control", @readonly = "readonly", @Value = "Online Payment" }))
                                                }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="col-lg-4 col-md-12 col-sm-12">
                                    @(Html.Label("Payment Date"))
                                </div>
                                <div class="col-lg-8 col-md-12 col-sm-12">
                                    @(Html.TextBoxFor(model => model.ChallanDate, new { @class = "form-control", @readonly = "readonly" }))
                                </div>
                            </div>
                        </div>
                        @*</div>*@
                                }
                                else
                                {

                        <div class="row">

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Challan Number</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.ChallanNumber, new { @class = "form-control-plaintext" }))
                            </div>

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Challan Date</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                @(Html.LabelFor(model => model.ChallanDate, new { @class = "form-control-plaintext" }))
                            </div>

                            <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Challan Copy</label>
                            <div class="col-lg-3 col-md-8 col-sm-12">
                                <span class="colon">:</span>
                                <a href="@Url.Action("Download", "Application", new { Area = "Lessee", name = Model.ChallanFileName, path = Model.ChallanFileName })" target="_blank" class="file-download-licensee">
                                    @((Model.ChallanCopyFilePath != null) ? Model.ChallanCopyFilePath : "")
                                </a>
                            </div>
                        </div>

                                }
                            }
                            else
                            {
                                if (ViewBag.Adjustment != null && ViewBag.Adjustment.ToString() == "NO")
                                {
                        <div class="row">
                            <div class="col-xs-11">
                                <div class="col-lg-11 col-md-4 col-sm-12 col-xs-12 bhoechie-tab-container">
                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 bhoechie-tab-menu">
                                        <div class="list-group">
                                            <a href="#" class="list-group-item active text-center" id="divOnlineOption">
                                                Online Payment
                                            </a>
                                            @*<a href="#" class="list-group-item text-center" id="divOfflineOption">Offline Payment
                            </a>*@
                                        </div>
                                    </div>
                                    <div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 bhoechie-tab">
                                        <!-- Online payment section -->
                                        <div class="bhoechie-tab-content active">
                                            @*<center>
                                <span><img src="~/Images/OnlinePayment.png" height="100"/></span>
                                <h2 style="margin-top: 0;color:#55518a">Comming Soon</h2>
                            </center>*@
                                            <div class="row" id="divPaymentOptionOnline">
                                                <div class="col-lg-9 col-md-4 col-xs-12">
                                                    <div id="divOnlineChallanDetails">
                                                        <div class="col-xs-12">
                                                            <div class="col-md-4 default-form-control-style">
                                                                <img src="@Url.Content("~/Images/SBI.jpg")" alt="SBI" style="width:100px;height:50px;" />
                                                                @if (Model.ActiveStatus != 6)
                                                                            {
                                                                <input name="BankSelection" type="radio" id="chkSBI" value="SBI" checked="checked" />
                                                                            }
                                                            </div>
                                                            <div class="col-md-4 default-form-control-style" style="text-align: left;">
                                                                <img src="@Url.Content("~/Images/ICICI.png")" alt="ICICI" style="width:100px;height:50px;" />
                                                                @if (Model.ActiveStatus != 6)
                                                                            {
                                                                <input name="BankSelection" type="radio" id="chkICICI" value="ICICI" />
                                                                            }
                                                            </div>
                                                            @*<div class="col-md-4 default-form-control-style">
                                                <img src="@Url.Content("~/Images/HDFC.jpg")" alt="HDFC" style="width:100px;height:50px;" />
                                                @if (Model.ActiveStatus != 6)
                                                {
                                                    <input name="BankSelection" type="radio" id="chkHDFC" value="HDFC" />
                                                }
                                            </div>*@
                                                        </div>
                                                    </div>
                                                    <div class="row" id="divPaymentOption" style="display: none">
                                                        <div class="col-lg-12 col-md-12 col-xs-12">
                                                            <div id="divOnline">
                                                                <div class="col-xs-12">
                                                                    <div class="col-md-4 default-form-control-style" style="text-align: left;">
                                                                        @(Html.Label("Net Banking"))
                                                                        <input name="ModeSelection" type="radio" value="NetBanking" checked="checked" />
                                                                    </div>
                                                                    <div class="col-md-4 default-form-control-style">
                                                                        @(Html.Label("NEFT/RTGS"))
                                                                        <input name="ModeSelection" type="radio" value="NEFT" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Offlineline payment section -->

                                    </div>
                                </div>
                                <br />
                            </div>
                        </div>
                                }
                            }

                        <div class="row mt-3">
                            <div class="col-md-12">
                                @if (Model.PaymentStatus == 0)
                                    {
                              
                                <div>
                                    @if (ViewBag.Adjustment != null && ViewBag.Adjustment.ToString() == "NO")
                                            {
                                    <input type="button" id="makePayment" onclick="return onMakePayment();" value="Make Payment" class="btn btn-success" />
                                            }
                                            else
                                            {
                                    <input type="button" id="SavePayment" onclick="return onSavePayment();" value="Save & Generate Permit" class="btn btn-success" />
                                            }
                                    <input type="button" id="cancel" onclick="return Oncancel();" value="Back" class="btn btn-danger">
                                </div>
                                    }
                                    else
                                    {
                               
                                <div>
                                    <input type="button" id="back" onclick="return OnBackToList();" value="Back to List" class="btn btn-success" />
                                </div>
                                    }
                            </div>
                        </div>
                        }
                        @*}*@
                    </div>
                </section>

            </div>
        </div>
    </div>
    <!-- MAIN CONTENT AREA ENDS -->
</section>

<script>
    backMe = "yes"
    $(document).ready(function () {
        loadNavigation('Add', 'glhelpdesk', 'plraiseticket', 'tl', 'EPermit', 'Apply New Permit', ' ');
        $('.datetime').datetimepicker({
            format: "DD/MM/YYYY"
        }).keydown(false);
    });
</script>
<script>

    $("#chkICICI").click(function () {
        $("#divPaymentOption").show();
    });

    $("#chkHDFC").click(function () {
        $("#divPaymentOption").hide();
    });

    $("#chkSBI").click(function () {
        $("#divPaymentOption").hide();
    });

    var vv = '@ViewBag.DisplayMsg';

    if (vv != null && vv != '') {
        alert('@ViewBag.ResultMsg');
        var url = '@Url.Action("ePermitPaymentList", "BulkPermit", new { Area = "Lessee" })';
        window.location.href = url;
    }

    $(document).ready(function () {
        $("div.bhoechie-tab-menu>div.list-group>a").click(function (e) {
            e.preventDefault();
            $(this).siblings('a.active').removeClass("active");
            $(this).addClass("active");
            var index = $(this).index();
            $("div.bhoechie-tab>div.bhoechie-tab-content").removeClass("active");
            $("div.bhoechie-tab>div.bhoechie-tab-content").eq(index).addClass("active");
        });
    });

    var filesize = 0;

    $('input[name="ChallanCopyPath"]').bind('change', function () {
        filesize = this.files[0].size;
        return false;
    });

    function onSavePayment() {
        var id = $("#BulkPermitId").val();
        if (parseInt(id) > 0) { // this check that if lessee / licensee have Balance payment . if yes then no need to go for online offline payment. its directly maintain from it.
            if (confirm('Are you sure to save and generate e-Permit ?')) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveAndGenerateEpermit", "MergeEPermit", new { Area = "ePermit" })',
                    data: '{BulkPermitId: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result != null && result != "" && result == "SUCCESS") {

                            alert("You have successfully save and generate e-permit.");
                            location.reload();
                        }

                    }

                });
            }
            else {
                return false;
            }
        }

    }
    function onMakePayment() {
        if (confirm('Are you sure to make payment ?')) {
            var id = $("#BulkPermitId").val();
            var BalanceAmount = $("#TillDateBalanceUpfrontPayment").val();
            var EAuctionType = $("#EAuctionType").val();
            if (EAuctionType == "2") {
                if (parseFloat(BalanceAmount) > 0) { // this check that if lessee / licensee have Balance payment . if yes then no need to go for online offline payment. its directly maintain from it.
                    alert("You have " + parseFloat(BalanceAmount) + " upfront balance amount. Your monthly periodic amount will be adjusted with upfront balance")

                }
            }


            var isValid = 0;
            if ($("#divOnlineOption").hasClass("active") == true) {
                $("#PaymentMode").val(1); // set online payment mode
                var bank = $("input:radio[name='BankSelection']:checked").val();
                var mode = $("input:radio[name='ModeSelection']:checked").val();
                if (bank == "HDFC") {
                    $("#PaymentBank").val("HDFC");
                    $("#__EUAntiForgeryForm").submit();
                }
                else if (bank == "ICICI") {
                    $("#PaymentBank").val("ICICI");
                    if (mode == "NetBanking") {
                        $("#P_Mode").val("NetBanking")
                        $("#__EUAntiForgeryForm").submit();
                    }
                    else {
                        $("#P_Mode").val("NEFT")
                        $("#__EUAntiForgeryForm").submit();
                    }
                }
                else if (bank == "SBI") {
                    $("#PaymentBank").val("SBI");
                    $("#__EUAntiForgeryForm").submit();
                }
                else {
                    alert("Please select bank to make payment !");
                    return false;
                }
            }
            else {
                $("#PaymentMode").val(0); // set offline mode value
                if ($("#ChallanNumber").val()) {
                    if ($("#ChallanDate").val()) {
                        if ($('input[name="ChallanCopyPath"]').val() != "") {
                            if (filesize < 2048000) {
                                if (confirm('Are you sure to make payment ?')) {
                                    $("#__EUAntiForgeryForm").submit();
                                }
                            }
                            else {
                                alert("Please make sure your file is less than 2 MB!");
                                return false;
                            }
                        }
                        else {
                            alert("Please select file!");
                        }
                    }
                    else {
                        lert("Please enter Challan Date!");
                        $("#ChallanDate").focus();
                    }
                }
                else {
                    alert("Please enter Challan Number!");
                    $("#ChallanNumber").focus();
                }
            }
        }
    }

    function Oncancel() {
        @*var url = '@Url.Action("ePermitForwardedApplication", "BulkPermit")';
        window.location.href = url;*@

        history.go(-1);
    }

    function OnBackToList() {
        @*var url = '@Url.Action("ePermitPaymentList", "BulkPermit")';
        window.location.href = url;*@
        history.go(-1);
    }

</script>
