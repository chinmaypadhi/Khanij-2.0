@model PermitEF.LicenseInfoRPTP
@{
    ViewData["Title"] = "ePermitApplication";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}

<style>
    .colon {
        top: 6px;
    }
</style>
<section class="wrapper main-wrapper row">
    <div class="col-12">
        @Html.Partial("_CMSnavigation")

        <!-- MAIN CONTENT AREA STARTS -->
        <div class="row">
            <div class="col-12">
                <div class="main-tab">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" href="#">
                                New e-permit
                            </a>
                        </li>
                       
                    </ul>
                    @Html.Partial("_CMSutil")
                </div>

                <section class="box form-container">
                    @using (Html.BeginForm("RPTPPermit", "ePermit", FormMethod.Post, new { enctype = "multipart/form-data", AUTOCOMPLETE = "Off", id = "__EUAntiForgeryForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.BultPermitId)
                        @Html.HiddenFor(model => model.UserTypeId)
                        @Html.HiddenFor(model => model.LicenseId)
                        @Html.HiddenFor(model => model.IsApproved)
                        @Html.HiddenFor(model => model.IsReject)

                        @Html.HiddenFor(model => model.MineralName)
                        @Html.HiddenFor(model => model.LicenseName)
                        @Html.HiddenFor(model => model.Address)
                        @Html.HiddenFor(model => model.MineralGrade)
                        @Html.HiddenFor(model => model.LicenseNumber)
                        @Html.HiddenFor(model => model.LicenseDate)

                        @Html.HiddenFor(model => model.MineralNatureId)
                        @Html.HiddenFor(model => model.MineralGradeId)
                        @Html.HiddenFor(model => model.MineralId)


                        @Html.HiddenFor(model => model.MineralNature)
                        @Html.HiddenFor(model => model.Village)
                        @Html.HiddenFor(model => model.Tehsil)
                        @Html.HiddenFor(model => model.Panchayat)
                        @Html.HiddenFor(model => model.PoliceStation)
                        @Html.HiddenFor(model => model.District)
                        @*   @Html.HiddenFor(model => model.AvailableQuantityinStock)*@
                        @Html.HiddenFor(model => model.listOfSelectedPass)
                        @(Html.HiddenFor(model => model.isForwarded))
                        @(Html.HiddenFor(model => model.DSCResponse))
                        @(Html.HiddenFor(model => model.State))
                        @(Html.HiddenFor(model => model.PeriodOfLisense))
                        @(Html.HiddenFor(model => model.GrantOrderNo))
                        @(Html.HiddenFor(model => model.GrantOrderDate))
                        @(Html.HiddenFor(model => model.Unit))
                        @(Html.HiddenFor(model => model.AvailableQuantityinStock))
                        <div class="row">
                            <div class="col-lg-9 col-md-12 col-sm-12">

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Name of License holder </label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @Html.DisplayFor(model => model.LicenseName, new { @class = "form-control-plaintext form-group" })
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Address</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @Html.DisplayFor(model => model.Address, new { @class = "form-control-plaintext form-group" })
                                    </div>
                                </div>

                                <div class="row" id="div_licenseeDetails">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Period of License</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @Html.DisplayFor(model => model.PeriodOfLisense, new { @class = "form-control-plaintext form-group" })
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Grant Order No.</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @Html.DisplayFor(model => model.GrantOrderNo, new { @class = "form-control-plaintext form-group" })
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Grant Order Date</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @Html.DisplayFor(model => model.GrantOrderDate, new { @class = "form-control-plaintext form-group" })
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Village</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @Html.DisplayFor(model => model.Village, new { @class = "form-control-plaintext form-group" })
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Tehsil</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.Tehsil, new { @class = "form-control-plaintext form-group" }))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Panchayat</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.Panchayat, new { @class = "form-control-plaintext form-group" }))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Police Station</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.PoliceStation, new { @class = "form-control-plaintext form-group" }))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">District</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.District, new { @class = "form-control-plaintext form-group" }))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Mineral Name</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.MineralName, new { @class = "form-control-plaintext form-group" }))
                                        @(Html.HiddenFor(model => model.MineralId))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Mineral Grade</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.MineralGrade, new { @class = "form-control-plaintext form-group" }))
                                        @(Html.HiddenFor(model => model.MineralGrade))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Mineral Form</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.MineralNature, new { @class = "form-control-plaintext form-group" }))
                                    </div>
                                </div>


                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Quantity</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.TextBoxFor(model => model.QuantitytobeDispatched, new { @class = "form-control form-group" }))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Unit</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.Unit, new { @class = " form-control-plaintext form-group" }))
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="col-lg-3 col-md-4 col-sm-12 col-form-label font-weight-bolder">Available Quantity InStock</label>
                                    <div class="col-lg-3 col-md-8 col-sm-12">
                                        <span class="colon">:</span>
                                        @(Html.DisplayFor(model => model.AvailableQuantityinStock, new { @class = "form-control-plaintext  form-group" }))
                                    </div>
                                </div>






                                <div class="row">
                                    <div class="col-sm-12">
                                        @if ((Model == null || Model.isForwarded == 1 || Model.isForwarded < 1 || Model.isForwarded == null) && Model.UserType != "DGM")
                                        {
                                            <input type="submit" title="Preview" value="Preview" name="cmdPreview" class="btn btn-dark btn-md " id="btnPreview" />
                                            <input type="button" title="Save" class=" btn btn-success btn-md " id="btnSave" onclick="return OnSubmiting();" value="Save">
                                            @*
                                <input type="button" title="Forward to DD/DMO" value="Forward to DD/DMO" class="btn btn-primary" onclick="return OnForwarding();" />*@

                                            @*<input type="button" title="Checkid" value="Check" class="btn btn-primary" onclick="return sendId();" />*@

                                        }
                                        else if (Model.UserType == "DGM")
                                        {
                                            <input type="button" class="btn btn-dark btn-md  " onclick="return checkdata();" value="Approve">
                                            <input type="button" class=" btn btn-primary" onclick="return Rejectdata();" value="Reject">
                                            @*<a href="@Url.Action("GetRPTPForPrint", "ePermit", new { @BulkPermitId = Model.BultPermitId })" style="margin-right: 10px;" class="btn btn-primary">Preview</a>*@
                                            <input type="submit" title="Preview" value="Preview" name="cmdPreview" class="btn btn-primary" id="btnPreview1" />
                                        }
                                        else
                                        {

                                            <input type="submit" title="Preview" value="Preview" name="cmdPreview" class="btn btn-success btn-md " id="btnPreview2" />
                                        }
                                        @*<a class="btn btn-dark btn-md  " data-toggle="modal" data-target="#viewcalculation">Preview</a>
                            <input type="button" onclick="return onSubmit();" id="btnSave" value="Save" class="btn btn-success btn-md " />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </section>
            </div>
        </div>
    </div>
    <!-- MAIN CONTENT AREA ENDS -->
</section>





<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
<script>
    indicateMe = "yes"
    $(document).ready(function () {
        loadNavigation('Add', 'glhelpdesk', 'plraiseticket', 'tl', 'E-Permit', 'Apply E Permit', ' ');
        //$('.datetime').datetimepicker({
        //    format: "DD/MM/YYYY"
        //}).keydown(false);
    });
</script>
<script>
    function OnSubmiting() {
        $("#__EUAntiForgeryForm").submit();
    var checkdata = checkFields();
       
        if (checkdata == 1) {
            alert('1');
           
        $(".loader-wrap").show();
        if (confirm("Before save application you need to apply your Digital Signature. Are you confirmed to forward Application??")) {
            var Postdata = 'action=signdoc' + "\n" + 'datatosign=Digital Signature Required' + "\n" + 'signaction=sign' + "\n" + 'filepath=' + "\n" + 'panNumberParam=' + "\n" + 'expirycheck=false' + "\n" + 'issuername=' + "\n" + 'certclass=1|2|3' + "\n" + 'certtype=ALL';
            connection.send(Postdata);
            $("#__EUAntiForgeryForm").submit();
            connection.onerror = function (error) {
                alert('Please check the server connection: ' + error);
                alert(error);
            };

            connection.onmessage = function (e) { // when DSC is success then following function executed.
                if (e.data.indexOf("subProtocol") == -1) {
                    //$("#DSCResponse").val(e.data).change();
                    //$(".loader-wrap").show();
                    $.ajax(
                    {
                      url: "/Permit/Transit/CheckVerifyResponse",
                        type: "POST",
                        async: false,
                        data: { contentType: "pkcs7", signDataBase64Encoded: e.data, responseType: "plain" },
                        success: function (msg) {
                            if (msg == "SUCCESS") {
                                alert('Hi');
                                $("#listOfSelectedPass").val(idsToSend);
                                $("#isForwarded").val(1).change();
                                $("#__EUAntiForgeryForm").submit();
                            }
                        }
                    });
                }
                else {
                    alert(e.data);
                }
            };
        }
        else {
            $(".loader-wrap").hide();
            return false;
        }
    }
    else {
        $(".loader-wrap").hide();
        return false;
    }



    }
    //following code is for DSC Signature
    try {
        var connection = new WebSocket('wss://localhost.emudhra.com:8080');

        connection.onopen = function () {
            console.log('Connection Opened');
        };
        connection.onerror = function (error) {
            //  alert('Please check the DSC connection: ' + error);
        };
        connection.onmessage = function (e) {
            if (e.data.indexOf("subProtocol") == -1) {
                //  alert(e.data);
            }
        };
    }
    catch (e) {
        alert("No DSC Connection Found");
    }
    //-----------------------------
</script>
<script>
    var idsToSend = [];

    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }

    $("#baklist").click(function () {
        $("#it_clearance").data("kendoGrid").dataSource.read();
        $("#MineralinformationGrid").data("kendoGrid").dataSource.read();
        $("#pendingPermit").show();
        $("#baklist").hide();
        $("#passGrid").hide();
        $("#baklistq1").hide();
        $("#btnpay").show();
        $("#chkSelectAll1").change();
        $('#txtTotalPayment').val(0);
        idsToSend = [];
    });

    var bulkId = 0;
    function getId() {

        return { BulkPermitId: bulkId }
    }

    function checkAll1(ele, gridId) {
        var state = $(ele).is(':checked');

        var grid = $('#grid').data('kendoGrid');
        $.each(grid.dataSource.view(), function () {
            if (this['IsSelected'] != state)
                this.dirty = true;
            this['IsSelected'] = state;
        });

        var data = $('#grid').data("kendoGrid").dataSource._data;

        for (i = 0; i < data.length; i++) {
            if (state == true) {
                totalAmt += parseFloat(data[i].TotalQty);
                idsToSend.push(data[i].TransitPassNo);
            }
            else {
                totalAmt = 0;
                idsToSend = [];
            }
        }
        $('#txtTotalPayment').val(totalAmt);
        grid.refresh();
    }

    function checkAll2(ele) {
        var state = $(ele).is(':checked');

        var grid = $('#tehsilGrid4').data('kendoGrid');
        $.each(grid.dataSource.view(), function () {
            if (this['IsSelected'] != state)
                this.dirty = true;
            this['IsSelected'] = state;
        });

        var data = $('#tehsilGrid4').data("kendoGrid").dataSource._data;

        for (i = 0; i < data.length; i++) {
            if (state == true) {
                totalAmt += parseFloat(data[i].QtyDispatch);
                idsToSend.push(data[i].ETransitPassId);
            }
            else {
                totalAmt = 0;
                idsToSend = [];
            }
        }
        $('#ApprovedQty').val(totalAmt);
        grid.refresh();
    }


    $("#chkSelectAll").change(function () {
        $("input:checkbox").prop('checked', $(this).prop("checked"));
    });

    $("#chkSelectAll1").change(function () {
        $("input:checkbox").prop('checked', $(this).prop("checked"));
    });

    $("#chkSelectAll2").change(function () {
        $("input:checkbox").prop('checked', $(this).prop("checked"));
    });

    function total1(ele) {

        var bulkId = $(ele).closest('tr').find('td:first').text();
        var total2 = $(ele).closest('tr').find('td:last').text();
        if ($(ele).prop('checked') == true) {
            totalAmt += Number(total2);
            $('#txtTotalPayment').val(totalAmt);
            var array = idsToSend;
            var index = array.indexOf(bulkId);
            if (index > -1) {
                array.splice(index, 1);
            }
            else {
                idsToSend.push(bulkId);
            }
        }
        else {
            var total2 = $(ele).closest('tr').find('td:last').text();
            totalAmt -= Number(total2);
            $('#txtTotalPayment').val(totalAmt);
            var array = idsToSend;
            var index = array.indexOf(bulkId);
            if (index > -1) {
                array.splice(index, 1);
            }
            else {
                idsToSend.push(bulkId);
            }
        }

    };

    function total2(ele) {

        var reportTotal = Number($('#ApprovedQty').val());
        var bulkId = $(ele).closest('tr').find('td:first').text();
        var total2 = $(ele).closest('tr').find('td:last').text();
        if ($(ele).prop('checked') == true) {
            reportTotal += Number(total2);
            $('#ApprovedQty').val(reportTotal);

            var array = idsToSend;
            var index = array.indexOf(bulkId);
            if (index > -1) {
                array.splice(index, 1);
            }
            else {
                idsToSend.push(bulkId);
            }
        }
        else {
            var total2 = $(ele).closest('tr').find('td:last').text();
            reportTotal -= Number(total2);
            $('#ApprovedQty').val(reportTotal);

            var array = idsToSend;
            var index = array.indexOf(bulkId);
            if (index > -1) {
                array.splice(index, 1);
            }
            else {
                idsToSend.push(bulkId);
            }

        }
    };

    var totalAmt = 0;
    function viewPass(bulkpermitId) {
        totalAmt = 0;
        bulkId = bulkpermitId;
        $("#grid").data("kendoGrid").dataSource.read();
        $("#passGrid").show();
        $("#pendingPermit").hide();
        $("#baklist").show();
        $("#baklistq1").show();
        $("#btnpay").hide();
        $("#chkSelectAll").checked = false;
        $('#txtTotalPayment').val(0);
        $("#chkSelectAll").change();
        idsToSend = [];

    }

    function redirectToRPTP(avqty, miid, mgid, mfid) {
        var MId = miid;
        var MGId = mgid;
        var MNId = mfid;
        var AQty = avqty;
        if (parseFloat(AQty) > 0) {

            $.ajax({
                type: "GET",
                url: '@Url.Action("CheckClosingStock", "ePermit")',
                data: { mineralid: MId, mineralGradeid: MGId, mineralFormid: MNId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "") {
                        $("#ClosingStock").val(result.Stocktbl[0].ClosingStock);

                        document.getElementById("LicenseName").value = result.Licenseetbl[0].Name;
                        $(".LicenseName").val(result.Licenseetbl[0].Name).change();
                        document.getElementById("PeriodOfLisense").value = result.Licenseetbl[0].PeriodOfLisense;
                        $(".PeriodOfLisense").val(result.Licenseetbl[0].PeriodOfLisense).change();
                        document.getElementById("Address").value = result.Licenseetbl[0].Address;
                        $(".Address").val(result.Licenseetbl[0].Address).change();

                        //document.getElementById("LicenseNumber").value = result.Licenseetbl[0].LicenseeCode;
                        //$(".LicenseNumber").val(result.Licenseetbl[0].LicenseeCode).change();
                        //document.getElementById("LicenseDate").value = result.Licenseetbl[0].ApprovedOn;
                        //$(".LicenseDate").val(result.Licenseetbl[0].ApprovedOn).change();
                        document.getElementById("GrantOrderNo").value = result.Licenseetbl[0].GrantOrderNumber;
                        $(".GrantOrderNo").val(result.Licenseetbl[0].GrantOrderNumber).change();
                        document.getElementById("GrantOrderDate").value = result.Licenseetbl[0].Name;
                        $(".GrantOrderDate").val(result.Licenseetbl[0].GrantOrderDate).change();
                        document.getElementById("Village").value = result.Licenseetbl[0].GrantOrderDate;
                        $(".Village").val(result.Licenseetbl[0].VillageName).change();
                        document.getElementById("Tehsil").value = result.Licenseetbl[0].Name;
                        $(".Tehsil").val(result.Licenseetbl[0].TehsilName).change();
                        document.getElementById("Panchayat").value = result.Licenseetbl[0].Panchayat;
                        $(".Panchayat").val(result.Licenseetbl[0].Panchayat).change();
                        document.getElementById("PoliceStation").value = result.Licenseetbl[0].PoliceStation;
                        $(".PoliceStation").val(result.Licenseetbl[0].PoliceStation).change();
                        document.getElementById("District").value = result.Licenseetbl[0].DistrictName;
                        $(".District").val(result.Licenseetbl[0].DistrictName).change();

                        document.getElementById("MineralName").value = result.Licenseetbl[0].MineralName;
                        $(".MineralName").val(result.Licenseetbl[0].MineralName).change();
                        document.getElementById("MineralGrade").value = result.Licenseetbl[0].MineralGrade;
                        $(".MineralGrade").val(result.Licenseetbl[0].MineralGrade).change();
                        document.getElementById("MineralNature").value = result.Licenseetbl[0].MineralNature;
                        $(".MineralNature").val(result.Licenseetbl[0].MineralNature).change();
                        document.getElementById("Unit").value = result.Licenseetbl[0].UnitName;
                        $(".Unit").val(result.Licenseetbl[0].UnitName).change();

                        $("#formRPTP").show();
                        $("#passGrid").hide();
                        $("#pendingPermit").hide();
                        $("#rootwizard").hide();


                        $("#MineralNatureId").val(MNId).change();
                        $("#MineralGradeId").val(MGId).change();
                        $("#MineralId").val(MId).change();

                        // $("#QuantitytobeDispatched").val(result.Stocktbl[0].ClosingStock).val();
                        $("#AvailableQuantityinStock").val(result.Stocktbl[0].ClosingStock).change();

                    }
                }
            });
        }
        else {
            alert("You have no any balance qty for take RPTP.");
            return false;
        }
    }

    $("#btnSearch").click(function () {

        if ($('#DrpMineralID').val() == null || $('#DrpMineralID').val() == undefined || $('#DrpMineralID').val() <= 0) {
            alert("Please select Mineral name.")
        }
        else if ($('#DrpMineralNatureId').val() == null || $('#DrpMineralNatureId').val() == undefined || $('#DrpMineralNatureId').val() <= 0) {
            alert("Please select Mineral Form.")
        }
        else if ($('#DrpMineralGradeId').val() == null || $('#DrpMineralGradeId').val() == undefined || $('#DrpMineralGradeId').val() <= 0) {
            alert("Please select Mineral Grade.")
        }
        else {

            var MId = $('#DrpMineralID').val();
            var MGId = $('#DrpMineralGradeId').val();
            var MNId = $('#DrpMineralNatureId').val();

            $.ajax({
                type: "GET",
                url: '@Url.Action("CheckClosingStock", "ePermit")',
                data: { mineralid: MId, mineralGradeid: MGId, mineralFormid: MNId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "") {
                        //$("#ClosingStock").val(result[0].ClosingStock);
                        //$("#secondHeader").show();
                        //$("#pendingPermit").show();
                        //$("#it_clearance").data("kendoGrid").dataSource.read();

                        $("#ClosingStock").val(result.Stocktbl[0].ClosingStock);

                        document.getElementById("LicenseName").value = result.Licenseetbl[0].Name;
                        $(".LicenseName").val(result.Licenseetbl[0].Name).change();
                        document.getElementById("PeriodOfLisense").value = result.Licenseetbl[0].PeriodOfLisense;
                        $(".PeriodOfLisense").val(result.Licenseetbl[0].PeriodOfLisense).change();
                        document.getElementById("Address").value = result.Licenseetbl[0].Address;
                        $(".Address").val(result.Licenseetbl[0].Address).change();

                        //document.getElementById("LicenseNumber").value = result.Licenseetbl[0].LicenseeCode;
                        //$(".LicenseNumber").val(result.Licenseetbl[0].LicenseeCode).change();
                        //document.getElementById("LicenseDate").value = result.Licenseetbl[0].ApprovedOn;
                        //$(".LicenseDate").val(result.Licenseetbl[0].ApprovedOn).change();
                        document.getElementById("GrantOrderNo").value = result.Licenseetbl[0].GrantOrderNumber;
                        $(".GrantOrderNo").val(result.Licenseetbl[0].GrantOrderNumber).change();
                        document.getElementById("GrantOrderDate").value = result.Licenseetbl[0].Name;
                        $(".GrantOrderDate").val(result.Licenseetbl[0].GrantOrderDate).change();
                        document.getElementById("Village").value = result.Licenseetbl[0].GrantOrderDate;
                        $(".Village").val(result.Licenseetbl[0].VillageName).change();
                        document.getElementById("Tehsil").value = result.Licenseetbl[0].Name;
                        $(".Tehsil").val(result.Licenseetbl[0].TehsilName).change();
                        document.getElementById("Panchayat").value = result.Licenseetbl[0].Panchayat;
                        $(".Panchayat").val(result.Licenseetbl[0].Panchayat).change();
                        document.getElementById("PoliceStation").value = result.Licenseetbl[0].PoliceStation;
                        $(".PoliceStation").val(result.Licenseetbl[0].PoliceStation).change();
                        document.getElementById("District").value = result.Licenseetbl[0].DistrictName;
                        $(".District").val(result.Licenseetbl[0].DistrictName).change();

                        document.getElementById("MineralName").value = result.Licenseetbl[0].MineralName;
                        $(".MineralName").val(result.Licenseetbl[0].MineralName).change();
                        document.getElementById("MineralGrade").value = result.Licenseetbl[0].MineralGrade;
                        $(".MineralGrade").val(result.Licenseetbl[0].MineralGrade).change();
                        document.getElementById("MineralNature").value = result.Licenseetbl[0].MineralNature;
                        $(".MineralNature").val(result.Licenseetbl[0].MineralNature).change();
                        document.getElementById("Unit").value = result.Licenseetbl[0].UnitName;
                        $(".Unit").val(result.Licenseetbl[0].UnitName).change();

                        $("#formRPTP").show();
                        $("#passGrid").hide();
                        $("#pendingPermit").hide();
                        $("#rootwizard").hide();


                        $("#MineralNatureId").val(MNId).change();
                        $("#MineralGradeId").val(MGId).change();
                        $("#MineralId").val(MId).change();

                        // $("#QuantitytobeDispatched").val(result.Stocktbl[0].ClosingStock).val();
                        $("#AvailableQuantityinStock").val(result.Stocktbl[0].ClosingStock).change();

                    }
                }
            });
        }
    });


function sentParam() {
    return {
        MineralId: $('#DrpMineralID').val(),
        MineralGradeId: $('#DrpMineralGradeId').val(),
        MineralNatureId: $('#DrpMineralNatureId').val()

    }
}

$("#btnPaymnet").click(function () {

    if ($('#txtTotalPayment').val() != null && parseInt($('#txtTotalPayment').val()) > 0) {

        if (confirm("Are you sure you want to generate RPTP?")) {

            $("#formRPTP").show();
            $("#passGrid").hide();
            $("#pendingPermit").hide();
            $("#rootwizard").hide();
            $("#QuantitytobeDispatched").val($('#txtTotalPayment').val());

        }

    }
    else {
        alert("Please select atleast one bulkpermit for RPTP generate.");
        return false;
    }
});


function sendid() {
    alert(idsToSend);
}

function OnMineralchange() {
    var Minname = $("#MineralID").data('kendoDropdownList').text();
    $("#MineralName").val(Minname.toString());
}

function OnMineralNaturechange() {
    var Minnature = $("#MineralNatureId").data('kendoDropdownList').text();
    $("#MineralNature").val(Minnature.toString());
}

function OnMineralGradechange() {
    var Minnature = $("#MineralGradeId").data('kendoDropdownList').text();
    $("#MineralGrade").val(Minnature.toString());
}

$("#btnPaymnet1").click(function () {

    if ($('#txtTotalPayment').val() != null && parseInt($('#txtTotalPayment').val()) > 0) {
        if (confirm("Are you sure you want to generate RPTP?")) {

            $("#formRPTP").show();
            $("#passGrid").hide();
            $("#pendingPermit").hide();
            $("#rootwizard").hide();
            $("#QuantitytobeDispatched").val($('#txtTotalPayment').val());
        }

    }
    else {
        alert("Please select atleast one bulkpermit for RPTP generate.");
        return false;
    }
});

function checkUrl() {
    var field = 'BulkPermitId';
    var url = window.location.href;
    if (url.indexOf('?' + field + '=') != -1)
        return true;
    else if (url.indexOf('&' + field + '=') != -1)
        return true;
    return false
}

function checkAll(ele) {
    var state = $(ele).is(':checked');
    var grid = $('#it_clearance').data('kendoGrid');
    $.each(grid.dataSource.view(), function () {
        if (this['IsSelected'] != state)
            this.dirty = true;
        this['IsSelected'] = state;
    });

    var data = $("#it_clearance").data("kendoGrid").dataSource._data;
    totalAmt = 0;
    for (i = 0; i < data.length; i++) {
        if (state == true) {
            totalAmt += Number(data[i].TotalQty);
            idsToSend.push(data[i].BulkPermitNo);
        }
        else {
            totalAmt = 0;
            idsToSend = [];
        }
    }
    $('#txtTotalPayment').val(totalAmt);
    grid.refresh();
}

var totalAmt = 0;
var flag = 0;
function total(ele) {

    var total2 = $(ele).closest('tr').find('td:last').text();
    var bulkId = $(ele).closest('tr').find('td:first').text();

    //  var total2 = $(ele).closest('tr').find('TotalQty').text();
    if ($(ele).prop('checked') == true) {
        totalAmt += Number(total2);
        $('#txtTotalPayment').val(totalAmt);
        var array = idsToSend;
        var index = array.indexOf(bulkId);
        if (index > -1) {
            array.splice(index, 1);
        }
        else {
            idsToSend.push(bulkId);
        }
    }
    else {
        var total2 = $(ele).closest('tr').find('td:last').text();
        totalAmt -= Number(total2);
        $('#txtTotalPayment').val(totalAmt);
        var array = idsToSend;
        var index = array.indexOf(bulkId);
        if (index > -1) {
            array.splice(index, 1);
        }
    }

};

function OnRequestEnd(e) {
    //if ($('tbody').find('tr').length == 0) {
    //    $('.k-grid-top').children('a').click(function () { return false; });
    //}

    var MasterTableParameter = "ITClearance";
    if (e.response.Data[0] == 2) {
        fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
        e.preventDefault();
    }
    else {
        if (e.type == "create" && !e.response.Errors) {
            fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
        }
        else if (e.type == "update" && !e.response.Errors) {
            fn_AlertMessage(e.response.Data[0], "Update", MasterTableParameter);
        }
        else if (e.type == "destroy" && !e.response.Errors) {
            fn_AlertMessage(e.response.Data[0], "Delete", MasterTableParameter);
        }
        if (e.type != "read") {
            autosyncData();
        }
    }
}

function autosyncData() {
    $("#it_clearance").data("kendoGrid").dataSource.read();
    $("#MineralinformationGrid").data("kendoGrid").dataSource.read();
}

$(document).ready(function () {

    if (UserType.ToString() == "Licensee") {
        $("#div_licenseeDetails").show();
    }
    else {
        $("#div_licenseeDetails").hide();
    }


    $("#rootwizard").show();

    var vv = '@Model.BultPermitId';
    if (vv != null && vv > 0) {

        $("#formRPTP").show();
        $("#passGrid").hide();
        $("#pendingPermit").hide();
        $("#rootwizard").show();
        if ('@TempData["SuccMessage"]' != '' && '@TempData["SuccMessage"]' != null) {
            alert('@TempData["SuccMessage"]');
        }
    }
    else {
        var editId = checkUrl();
        if (editId == true) {
            $("#formRPTP").show();

        }

        if ('@Model' != null && '@Model.TypeOfCoal' != null) {

            if ($("#TypeOfCoal").val() == "Linkage Coal") {
                $("#eAuction").hide();
            }
            else {
                $("#eAuction").show();
            }
        }

        if ('@TempData["SuccMessage"]' != '' && '@TempData["SuccMessage"]' != null) {
            alert('@TempData["SuccMessage"]');
        }
    }

    var vvCoal = '@Model.TypeOfCoal';
    if (vvCoal != null) {

        if (vvCoal == "Linkage Coal") {
            $("#eAuction").hide();
        }
        else {
            $("#eAuction").show();
        }
    }
});

$('#TypeOfCoal').change(function () {
    if ($("#TypeOfCoal").val() == "Linkage Coal") {
        $("#eAuction").hide();
    }
    else {
        $("#eAuction").show();
    }

})
function newapp() {
    $('#pendingPermit').show();
    $("#tehsilGrid").data("kendoGrid").dataSource.read();
    $('#RejectedPermit').hide();
    $('#ApprovedPermit').hide();
}
function aproApp() {

    $('#ApprovedPermit').show();
    $("#tehsilGrid1").data("kendoGrid").dataSource.read();
    $('#pendingPermit').hide();
    $('#RejectedPermit').hide();
}
function rejapp() {
    $('#RejectedPermit').show();
    $("#tehsilGrid2").data("kendoGrid").dataSource.read();
    $('#pendingPermit').hide();
    $('#ApprovedPermit').hide();
}

$('#ApprovedQty').change(function () {
    var qty = $("#ApprovedQty").val();
    var qty1 = $("#QuantitytobeDispatched").val();
    if (parseInt(qty) > parseInt(qty1)) {
        alert("You can't approved qty which is higher than Quantity to be Dispatched ")
    }
})

$('#QuantitytobeDispatched').change(function () {
    var qty = $("#AvailableQuantityinStock").val();
    var qty1 = $("#QuantitytobeDispatched").val();
    if (parseInt(qty1) > parseInt(qty)) {
        alert("You can't enterd quantity to be dispatched which is higher than available qty. ")
    }
})

function OnForwarding() {


    var checkdata = checkFields();
    if (checkdata == 1) {
        if (confirm("Are you confirmed to forward Application??")) {
            if ($("#BulkPermitId").val() == null || $("#BulkPermitId").val() != "") {
                $("#listOfSelectedPass").val(idsToSend);
                $("#isForwarded").val(1).change();
            }
            $("#frmEPermit").submit();

        }
        else {
            return false;
        }


    }
    else
        return false;
}

    function OnSubmiting() {
        $("#__EUAntiForgeryForm").submit();
   // var checkdata = checkFields();

    if (checkdata == 1) {
        $(".loader-wrap").show();
        if (confirm("Before save application you need to apply your Digital Signature. Are you confirmed to forward Application??")) {
            var Postdata = 'action=signdoc' + "\n" + 'datatosign=Digital Signature Required' + "\n" + 'signaction=sign' + "\n" + 'filepath=' + "\n" + 'panNumberParam=' + "\n" + 'expirycheck=false' + "\n" + 'issuername=' + "\n" + 'certclass=1|2|3' + "\n" + 'certtype=ALL';
            connection.send(Postdata);

            connection.onerror = function (error) {
                alert('Please check the server connection: ' + error);
                alert(error);
            };

            connection.onmessage = function (e) { // when DSC is success then following function executed.
                if (e.data.indexOf("subProtocol") == -1) {
                    $("#DSCResponse").val(e.data).change();
                    $(".loader-wrap").show();
                    $.ajax(
                    {
                        url: '@Url.Action("CheckVerifyResponse", "ForwardingNote", new { Area = "Transit" })',
                        type: "POST",
                        async: false,
                        data: { contentType: "pkcs7", signDataBase64Encoded: e.data, responseType: "plain" },
                        success: function (msg) {
                            if (msg == "SUCCESS") {
                                $("#listOfSelectedPass").val(idsToSend);
                                $("#isForwarded").val(1).change();
                                $("#frmEPermit").submit();
                            }
                        }
                    });
                }
                else {
                    alert(e.data);
                }
            };
        }
        else {
            $(".loader-wrap").hide();
            return false;
        }
    }
    else {
        $(".loader-wrap").hide();
        return false;
    }



}

function checkFields() {
    var valid = 1;
    var ProposedQty = $('#QuantitytobeDispatched').val();
    var Availble = $('#AvailableQuantityinStock').val();

    var GODate = $('#GrantOrderDate').val();
    var GONumber = $('#GrantOrderNo').val();

    if (GODate == null || GODate == "") {
        valid = 0;
        alert("Grant Order Date not found ");
        return false;
    }
    if (GONumber == null || GONumber == "") {
        valid = 0;
        alert("Grant Order Number not found ");
        return false;
    }

    if (parseInt(ProposedQty) > parseInt(Availble)) {
        valid = 0;
        alert("You can't enterd quantity to be dispatched which is higher than available qty. ")
        return false;
    }

    var coalname = '@Model.Mineral';
    //if (coalname.toUpperCase() == "COAL") {
    //    var TypeOfCoalDispatched = $('#TypeOfCoal').val();
    //    var EAuctionType = $('#TypeOfCoalTobeDispatch').val();
    //    if ($("#TypeOfCoal").val() != "Linkage Coal") {
    //        if (EAuctionType == null || EAuctionType == "" || EAuctionType < 0) {
    //            valid = 0;
    //            alert("please select type of Coal to be Dispatched.");
    //            return false;
    //        }
    //    }
    //    else if (TypeOfCoalDispatched == null || TypeOfCoalDispatched == "") {

    //        valid = 0;
    //        alert("please select type of Coal Dispatched.");
    //        return false;
    //    }
    //}

    if (ProposedQty == null || ProposedQty == "") {
        valid = 0;
        alert("please enter Quantity to be Dispatched.");
        return false;
    }

    return valid;
}

function checkdata() {
    var qty = $("#ApprovedQty").val();
    var qty1 = $("#QuantitytobeDispatched").val();
    var remks = $("#Remark").val();
    var id = $("#BultPermitId").val();
    if (parseInt(qty) > 0) {

        if (remks != null && remks.trim() != '') {
            if (confirm('Are you confirmed to approve e-Permit request for RPTP?')) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ApproveRPTP", "ePermit")',
                    data: { RPTPBulkPermitId: id, Approvedqty: qty, Remark: remks, listOfSelectedPass: idsToSend.toString() },
                    dataType: "json",
                    contenttype: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data != null) {
                            alert("Application of RPTP has been approved and your e-Permit for RPTP is" + data + ".")
                            window.location.href = '@Url.Action("DMOEPermitApproval", "ePermit")';
                        }
                        else {
                            alert("e-Permit Request not approved. Please try later.")
                        }
                    }

                });

            }
        }
        else {
            alert("Please enter remarks.")
            return false;
        }
    }
    else {
        alert("Please select approved qty before approved RPTP e-Permit .")
        return false;
    }
}


function Rejectdata() {
    var remks = $("#Remark").val();
    var id = $("#BultPermitId").val();
    if (remks != null && remks.trim() != '') {
        if (confirm('Are you confirmed to reject e-Permit request for RPTP?')) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("RejectRPTP", "ePermit")',
                    data: { RPTPBulkPermitId: id, Remark: remks },
                    dataType: "json",
                    contenttype: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data != null) {
                            alert("Application of RPTP has been rejected successfully.")
                            window.location.href = '@Url.Action("DMOEPermitApproval", "ePermit")';
                        }
                        else {
                            alert("e-Permit Request not rejected. Please try later.")
                        }

                    }

                });

            }
        }
        else {
            alert("Please enter remarks before reject e-Permit.")
        }
    }

    $('input[type="radio"]').click(function () {
        if ($(this).attr('id') == 'approve') {
            $('#ApprovedPermit').show();
            $('#pendingPermit').hide();
            $('#RejectedPermit').hide();
        }
        else if ($(this).attr('id') == 'reject') {
            $('#RejectedPermit').show();
            $('#pendingPermit').hide();
            $('#ApprovedPermit').hide();
        }
        else {
            $('#pendingPermit').show();
            $('#RejectedPermit').hide();
            $('#ApprovedPermit').hide();
        }
    });

    function sendAntiForgery() {
        return { "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() }
    }



    var exportFlag = false;
    var columnToHide = 0;
    function funcPdfExport(e) {
        $("thead tr th a.k-link").removeAttr("href");
        var grid = $("#tehsilGrid").data("kendoGrid");
        for (i = 0; i <= grid.columns.length - 1; i++) {
            if (grid.columns[i].command != null) {
                if (!exportFlag) {
                    grid.hideColumn(i);
                    columnToHide = i;
                    e.preventDefault();
                    exportFlag = true;
                    grid.saveAsPDF();
                    setTimeout(function () {
                        exportFlag = false;
                    })
                }
            }
        }
    }


    var exportFlag1 = false;
    var columnToHide1 = 0;
    function funcPdfExport1(e) {
        $("thead tr th a.k-link").removeAttr("href");
        var grid = $("#tehsilGrid1").data("kendoGrid");
        for (i = 0; i <= grid.columns.length - 1; i++) {
            if (grid.columns[i].command != null) {
                if (!exportFlag1) {
                    grid.hideColumn(i);
                    columnToHide1 = i;
                    e.preventDefault();
                    exportFlag1 = true;
                    grid.saveAsPDF();
                    setTimeout(function () {
                        exportFlag1 = false;
                    })
                }
            }
        }
        e.promise
        .done(function () {
            grid.showColumn(columnToHide1);
        });
    }

    function autosyncData1() {
        $("#tehsilGrid1").data("kendoGrid").dataSource.read();
    }



    var exportFlag2 = false;
    var columnToHide2 = 0;
    function funcPdfExport2(e) {
        $("thead tr th a.k-link").removeAttr("href");
        var grid = $("#tehsilGrid2").data("kendoGrid");
        for (i = 0; i <= grid.columns.length - 1; i++) {
            if (grid.columns[i].command != null) {
                if (!exportFlag2) {
                    grid.hideColumn(i);
                    columnToHide2 = i;
                    e.preventDefault();
                    exportFlag2 = true;
                    grid.saveAsPDF();
                    setTimeout(function () {
                        exportFlag2 = false;
                    })
                }
            }
        }
        e.promise
        .done(function () {
            grid.showColumn(columnToHide2);
        });
    }

    function autosyncData2() {
        $("#tehsilGrid2").data("kendoGrid").dataSource.read();
    }

    function getPDF(selector) {
        kendo.drawing.drawDOM($(selector)).then(function (group) {
            kendo.drawing.pdf.saveAs(group, "LTP Permit.pdf");
        });
    }

    function sendReportDate() {
        return {
            "fromdate": $("#FDate").val(),
            "todate": $("#TDate").val(),
            "RPTPBulkPermitId": $("#BultPermitId").val()
        }
    }
    function getReport() {
        $("#gridData").show();
        $("#tehsilGrid4").data("kendoGrid").dataSource.read();
    }

    function GetMineralNature() {
        return {
            MineralID: $("#DrpMineralID").val()
        };
    }

    function GetMineralGrade() {
        return {
            MineralNatureId: $("#DrpMineralNatureId").val()
        };
    }
    function GetCreatedBy() {
        return {
            CreatedBy: $("#CREATED_BY").val()
        };
    }
</script>

