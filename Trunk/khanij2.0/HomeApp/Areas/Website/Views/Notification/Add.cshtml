@*// *********************************************************************************************************
    //  View Name                : Add
    //  Desciption               : To Save and Update Website Notification Details
    //  Created By               : Lingaraj Dalai
    //  Created On               : 07 Oct 2021
    // ********************************************************************************************************
*@
@model HomeEF.AddNotificationModel
@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}
@if (TempData["Message"] != null)
{
    <script>
        var vv = '@TempData["Message"]';
        if (vv == 1) {
            swal("","Notification created successfully.","success");
        }
        else if (vv == 2) {
            swal("","Notification already exists.","warning");
        }
        else if (vv == 3) {
            swal("", "Something Errror occured. Please Try After Sometime!!", "error");
        }
    </script>
}
<script>
    indicateMe = "yes"
    $(document).ready(function () {
        loadNavigation('Add', 'glhelpdesk', 'plraiseticket', 'tl', 'CMS', 'Notification', ' ');
        $('.datepicker').datetimepicker({
            format: 'LT',
            format: 'DD-MMM-YYYY',
            daysOfWeekDisabled: [0, 0],
        }).keydown(false);
        $('.searchableselect').searchableselect();
        BindNotificationTypeData();
        var filesize = 0;
        $('input[name="Notificationfile"]').bind('change', function () {
            $("input[name='Submit']").attr('disabled', false);
            filesize = this.files[0].size;
            var val = $(this).val().toLowerCase(),
                regex = new RegExp("(.*?)\.(pdf)$");
            if (!(regex.test(val))) {
                swal("", ".docx,xls,jpeg,jpg,png,tif  type is not an allowed file type. You can use only  pdf types of file(s). ", "warning");
                this.value = '';
                $("input[name='Submit']").attr('disabled', true);
                return false;
            }
            else if (filesize > 2048000) {
                swal("", "File size must be 2 MB !", "warning");
                $("input[name='Submit']").attr('disabled', true);
                return false;
            }
            else {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            }
            return false;
        });
        if ($("#hdnPublishDate").val() != "") {
            $("#txtPublishDate").val($("#hdnPublishDate").val());
        }
    });
    /*Bind Notification Type details*/
    function BindNotificationTypeData() {
        debugger;
        $.ajax({
            url: '/Website/Notification/GetNotificationTypeDetails',
            dataType: 'json',
            type: 'post',
            success: function (data) {
                debugger;
                $('#NotificationTypeId').html('');
                $('#NotificationTypeId').append("<option value=''>Select</option>");
                $.each(data, function (ind, item) {
                    $('#NotificationTypeId').append("<option value='" + item.inT_NOTIFICATION_TYPE_ID + "'>" + item.vcH_NOTIFICATION_NAME + "</option>");
                });
                if ($('#hfNotificationTypeId').val() != "") {
                    $('#NotificationTypeId').val($('#hfNotificationTypeId').val());
                }
                if ($('#NotificationTypeId').val() == null) {
                    $('#NotificationTypeId').html('');
                    $('#NotificationTypeId').append("<option value=''>Select</option>");
                    $.each(data, function (ind, item) {
                        $('#NotificationTypeId').append("<option value='" + item.inT_NOTIFICATION_TYPE_ID + "'>" + item.vcH_NOTIFICATION_NAME + "</option>");
                    });
                }
            },
            error: function (err) {
            }
        });
    }
    function Validate() {
        var Iss = false;
        if (!DropDownValidation("NotificationTypeId", "Notification Type")) {
            return false;
        }
        else if (!blankFieldValidation("VCH_NOTIFICATION_SUB", "Notification Subject")) {
            return false;
        }
        else if (!blankFieldValidation("txtPublishDate", "Publish Date")) {
            return false;
        }
        else if ($("#hdnNotificationFile").val() == "") {
            if (!FileUploadValidation("Notificationfile", "Document")) {
                return false;
            }
        }
        Iss = true;
        return Iss;
    }
    function CountAddress() {
        $("#lblRemarks").text(250 - (document.getElementById("VCH_NOTIFICATION_SUB").value.length));
    }
</script>
<section class="wrapper main-wrapper row">
    <div class="col-12">
        @Html.Partial("_navigation")
        <!-- MAIN CONTENT AREA STARTS -->
        <div class="row">
            <div class="col-12">
                <div class="main-tab">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" href="javascript:void(0);">
                                Add
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="~/Website/Notification/ViewList">
                                View
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="~/Website/Notification/Archive">
                                Archive
                            </a>
                        </li>
                    </ul>
                    @Html.Partial("_util")
                </div>
                <section class="box form-container">
                    <div class="content-body">
                        <h5>Notification</h5>
                        @using (Html.BeginForm("Add", "Notification", FormMethod.Post, new { enctype = "multipart/form-data", AUTOCOMPLETE = "Off", id = "form1" }))
                        {
                            <div class="row">
                                <div class="col-lg-4  col-md-8">
                                    <label class="col-form-label">Notification Type <span class="text-danger">*</span></label>
                                    <div class="form-group">
                                        <select id="NotificationTypeId" name="INT_NOTIFICATION_TYPE_ID" class="form-control searchableselect" autofocus="autofocus">
                                            <option value="">Select</option>
                                        </select>
                                        @Html.HiddenFor(m => m.INT_NOTIFICATION_TYPE_ID, new { @id = "hfNotificationTypeId" })
                                        @Html.ValidationMessageFor(m => m.INT_NOTIFICATION_TYPE_ID, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.INT_NOTIFICATION_ID)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4  col-md-8">
                                    <label class="col-form-label">Notification Subject <span class="text-danger">*</span></label>
                                    <div class="form-group">
                                        @Html.TextAreaFor(m => m.VCH_NOTIFICATION_SUB, new { @class = "form-control", @rows = "3", @autofocus = "autofocus", @maxlength = "250", @onkeyup = "CountAddress()" })
                                        @Html.ValidationMessageFor(m => m.VCH_NOTIFICATION_SUB, "", new { @class = "text-danger" })
                                        <small class="text-danger">Maximum <strong><label id="lblRemarks" class="col-form-label text-danger">250</label></strong> characters</small>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4  col-md-8">
                                    <label class="col-form-label">Publish On<span class="text-danger">*</span></label>
                                    <div class="form-group">
                                        <div class="input-group">
                                            <input id="txtPublishDate" type="text" class="form-control datepicker" name="DTM_PUBLISHED_ON">
                                            <div class="input-group-prepend">
                                                <label class="input-group-text" for="txtPublishDate"><i class="icon-calendar-alt-solid"></i></label>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.DTM_PUBLISHED_ON, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.DTM_PUBLISHED_ON, new { @id = "hdnPublishDate" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4  col-md-8">
                                    <label class="col-form-label">Upload Document <span class="text-danger">*</span></label>
                                    <div class="form-group">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="Notificationfile" name="Notificationfile">
                                            <label class="custom-file-label" for="customFile">Choose Files</label>
                                        </div>
                                        <small class="text-danger">Files type <strong>(.pdf)</strong> with maximum <strong>2MB</strong></small>
                                        @Html.ValidationMessageFor(m => m.Notificationfile, "", new { @class = "text-danger" })
                                        @if (Model.VCH_UPLOAD_FILE != null && Model.VCH_UPLOAD_FILE != "")
                                        {
                                            <label class="form-control-plaintext" id="lblNotificationfile"> <a href='~/@Model.VCH_UPLOAD_FILE' data-original-title="Download Notification Copy" target="_blank"><i class="icon-file-pdf-solid h5"></i></a></label>
                                        }
                                        @Html.HiddenFor(m => m.VCH_UPLOAD_FILE, new { @id = "hdnNotificationFile" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4  col-md-8">
                                    <label class="col-form-label">Status</label>
                                    <div class="form-group">
                                        @Html.RadioButtonFor(n => n.BIT_STATUS, true, new { @class = "custom-radio", id = "Rdbtn_Active" })
                                        <label class="radio-label mr-2">Publish</label>
                                        @Html.RadioButtonFor(n => n.BIT_STATUS, false, new { @class = "custom-radio", id = "Rdbtn_Inactive", @checked = true })
                                        <label class="radio-label">Unpublish</label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 col-sm-12">
                                    <input type="submit" value='@ViewBag.Button' name="Submit" class="btn btn-success btn-md ml-0 waves-effect waves-light  btnsave" id="Submit" onclick="return Validate()">
                                    @if (ViewBag.Button == "Update")
                                    {
                                        <a href="~/Website/Notification/ViewList" class="btn btn-danger btn-md ml-0 waves-effect waves-light btncancel">Cancel</a>
                                    }
                                    else
                                    {
                                        <a href="~/Website/Notification/Add" class="btn btn-danger btn-md ml-0 waves-effect waves-light btncancel">Cancel</a>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </section>
            </div>
        </div>
    </div>
    <!-- MAIN CONTENT AREA ENDS -->
</section>


