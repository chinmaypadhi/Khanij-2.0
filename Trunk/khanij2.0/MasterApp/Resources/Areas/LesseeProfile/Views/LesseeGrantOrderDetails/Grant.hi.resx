<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="(in Years)" xml:space="preserve">
    <value>(इन  इयर्स )</value>
  </data>
  <data name="(with approved lease plan)" xml:space="preserve">
    <value>(विथ  एप्रूव्ड  लीज  प्लान)</value>
  </data>
  <data name="(with plan / LOI Letter)" xml:space="preserve">
    <value>(विथ  प्लान  / ल ओ आई   लेटर )</value>
  </data>
  <data name="Agreement Date" xml:space="preserve">
    <value>एग्रीमेंट  डेट</value>
  </data>
  <data name="Amount/Percentage" xml:space="preserve">
    <value>अमाउंट/परसेंटेज</value>
  </data>
  <data name="Application Type" xml:space="preserve">
    <value>एप्लीकेशन  टाइप</value>
  </data>
  <data name="Approved Quantity Details" xml:space="preserve">
    <value>एप्रूव्ड  क्वांटिटी  डिटेल्स</value>
  </data>
  <data name="Choose Files" xml:space="preserve">
    <value>चूज  फाइल्स</value>
  </data>
  <data name="Files type" xml:space="preserve">
    <value>फाइल्स  टाइप</value>
  </data>
  <data name="Final Offer(Revenue Sharing in %)" xml:space="preserve">
    <value>फाइनल  ऑफर (रेवेनुए  शेयरिंग  इन  %)</value>
  </data>
  <data name="Financial Year wise Approved Mineral Quantity" xml:space="preserve">
    <value>फाइनेंसियल  ईयर  वाइज  एप्रूव्ड  मिनरल  क्वांटिटी</value>
  </data>
  <data name="Grant Order &amp; Lease Deed Details" xml:space="preserve">
    <value>ग्रांट  आर्डर  &amp;  लीज  डीड  डिटेल्स</value>
  </data>
  <data name="Grant Order Copy" xml:space="preserve">
    <value>ग्रांट  आर्डर  कॉपी </value>
  </data>
  <data name="Lease Deed Date" xml:space="preserve">
    <value>लीज  डीड  डेट</value>
  </data>
  <data name="Lease Deed Document" xml:space="preserve">
    <value>लीज  डीड  डॉक्यूमेंट</value>
  </data>
  <data name="Lease Deed No" xml:space="preserve">
    <value>लीज  डीड  नो</value>
  </data>
  <data name="Lease Extended as per MMDR Amendment 2021" xml:space="preserve">
    <value>लीज  एक्सटेंडेड  ऐस  पर  म म डी र  अमेंडमेंट  2021</value>
  </data>
  <data name="Lease Extension Details" xml:space="preserve">
    <value>लीज  एक्सटेंशन  डिटेल्स</value>
  </data>
  <data name="Lease Extension Document Uploading" xml:space="preserve">
    <value>लीज  एक्सटेंशन  डॉक्यूमेंट  अपलोड</value>
  </data>
  <data name="Lease Extension Validity From" xml:space="preserve">
    <value>लीज  एक्सटेंशन  वैलिडिटी  फ्रॉम</value>
  </data>
  <data name="Lease Extension Validity Upto" xml:space="preserve">
    <value>लीज  एक्सटेंशन  वैलिडिटी  अपटू</value>
  </data>
  <data name="Lease Period" xml:space="preserve">
    <value>लीज  पीरियड</value>
  </data>
  <data name="Lease Validity From" xml:space="preserve">
    <value>लीज  वैलिडिटी  फ्रॉम</value>
  </data>
  <data name="Lease Validity Upto" xml:space="preserve">
    <value>लीज  वैलिडिटी  अपटू</value>
  </data>
  <data name="MDPA" xml:space="preserve">
    <value>म डी पि  ए</value>
  </data>
  <data name="MDPA Details" xml:space="preserve">
    <value>म डी पि ए  डिटेल्स</value>
  </data>
  <data name="Mineral Sale Percentage %" xml:space="preserve">
    <value>मिनरल  सेल  परसेंटेज  %</value>
  </data>
  <data name="Mines Allotted As Per Act" xml:space="preserve">
    <value>माइंस  ऐलोटेड  ऐस  पर  एक्ट</value>
  </data>
  <data name="Mines Section" xml:space="preserve">
    <value>माइंस  सेक्शन</value>
  </data>
  <data name="Mines Under Section(17A) ?" xml:space="preserve">
    <value>माइंस  अंडर  सेक्शन (17A ) ?</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>नेक्स्ट</value>
  </data>
  <data name="Order Date" xml:space="preserve">
    <value>आर्डर  डेट</value>
  </data>
  <data name="Order Number" xml:space="preserve">
    <value>आर्डर  नंबर</value>
  </data>
  <data name="Production Quantity" xml:space="preserve">
    <value>प्रोडक्शन  क्वांटिटी</value>
  </data>
  <data name="Request For Non Captive Sale" xml:space="preserve">
    <value>रिक्वेस्ट  फॉर  नॉन  कैप्टिव  सेल</value>
  </data>
  <data name="Request For Non-Captive Sale" xml:space="preserve">
    <value>रिक्वेस्ट  फॉर  नॉन -कैप्टिव  सेल</value>
  </data>
  <data name="Type of Mines" xml:space="preserve">
    <value>टाइप  ऑफ़  माइंस</value>
  </data>
  <data name="Upload Demarcation Report" xml:space="preserve">
    <value>अपलोड  डीमारकेसन  रिपोर्ट</value>
  </data>
  <data name="Upload MDPA" xml:space="preserve">
    <value>अपलोड  म डी पि ए</value>
  </data>
  <data name="Upload Tender/Allottment Document" xml:space="preserve">
    <value>अपलोड  टेंडर/ऐलोटमेंट  डॉक्यूमेंट</value>
  </data>
</root>