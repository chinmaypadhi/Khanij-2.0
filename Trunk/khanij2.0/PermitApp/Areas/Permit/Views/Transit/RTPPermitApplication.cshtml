@model PermitEF.ForwardingNoteModel

@using PermitEF;
@using PermitApp.Web;
@using PermitApp.Helper;
@using Microsoft.Extensions.Configuration;
@using  Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "RTPPermitApplication";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}
@{
    UserLoginSession profile = HttpContextAccessor.HttpContext.Session.Get<UserLoginSession>(KeyHelper.UserKey);
}

<section class="wrapper main-wrapper row">
    <div class="col-12">
        @Html.Partial("_CMSnavigation")
        <!-- MAIN CONTENT AREA STARTS -->
        <div class="row">
            <div class="col-12">
                <div class="main-tab">
                    <ul class="nav nav-tabs">
                        @if (@profile.UserType == "Lessee" || @profile.UserType == "Licensee" || @profile.UserType == "Tailing Dam" || @profile.UserType == "End User")
                        {
                            @if (Model == null || (Model.DSCLesseeFilePath == null || Model.DSCLesseeFilePath == ""))
                            {
                                @if (Model.ForwardingNoteId == null || Model.ForwardingNoteId == 0)
                                {
                                    <li class="nav-item">
                                        <a href="javascript:void(0);" target="_blank" title="Saved Application for RTP Transit Pass" id="btnSaveDraft" onclick="getPDF1();" class="btn btn-success btn-md  mb-2  waves-effect waves-light rounded-0">Saved Application for RTP Transit Pass</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="nav-item">
                                        <a href="javascript:void(0);" title="Generate Application for Railway Transit Pass" id="btnSave" onclick="getPDF();" class="btn btn-success btn-md  mb-2  waves-effect waves-light rounded-0">Generate Application for Railway Transit Pass</a>
                                    </li>
                                }
                            }

                            else
                            {
                                <li class="nav-item">
                                    <a href="@Model.DSCLesseeFilePath" title="Download Application for Railway Transit Pass" id="btnDownload" class="btn btn-success btn-md  mb-2  waves-effect waves-light rounded-0">Download Application for Railway Transit Pass</a>
                                </li>


                            }

                        }


                    </ul>
                    @Html.Partial("_CMSutil")
                </div>
                <input id="fName" type="hidden" />
                <input id="fid" type="hidden" />
                @Html.HiddenFor(model => model.GrantOrderNo)
                @Html.HiddenFor(model => model.DSCLesseeFilePath)
                @(Html.HiddenFor(model => model.ForwardingTransacationId))
                @(Html.HiddenFor(model => model.ForwardingNoteId))
                <section class="box form-container">
                    <div class="content-body">

                        <div class="table-responsive" id="viewtable">
                            <table class="table table-bordered" id="tablePRint" style="width: 800px;margin: 0 auto;">

                                <tbody>
                                    <tr>
                                        <th colspan="4" style="text-align: center; border-top: 1px solid black; border-left: 1px solid black;">
                                            <img id="imgLogo" src="/CMSimg/LogoPrintNew.png" height="80" alt="LOGO">


                                        </th>

                                    </tr>
                                    <tr>
                                        <td class="font-weight-bold text-center text-brown" style="font-size:20px" colspan="2">
                                            FORM-16 <br />
                                            See Rule 4 (1) <br />
                                            Application for Railway Transit Pass
                                        </td>

                                    </tr>
                                    <tr>
                                        <td width="40%" class="font-weight-bold"> Name and address of mineral sender </td>
                                        <td>
                                            @(Html.DisplayFor(x => x.Consigner, new { @class = "k-textbox" }))<br />
                                            @(Html.DisplayFor(x => x.Address, new { @class = "k-textbox" }))
                                        </td>

                                    </tr>
                                    <tr>

                                        <td class="font-weight-bold">Name and address of mineral receiver </td>
                                        <td>
                                            @(Html.DisplayFor(x => x.EndUser, new { @class = "k-textbox" }))<br />
                                            @(Html.DisplayFor(x => x.AddressofConsignee, new { @class = "k-textbox" }))
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="font-weight-bold">E-Permit Number</td>
                                        <td class="font-weight-bold"> @(Html.DisplayFor(x => x.BulkPermitNumber, new { @class = "k-textbox" }))</td>

                                    </tr>



                                    <tr>
                                        <td class="font-weight-bold">Name of the mineral</td>
                                        <td>@(Html.DisplayFor(model => model.MineralName, "e-Permit ID")) </td>

                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">EDRM Number</td>
                                        <td>@(Html.DisplayFor(model => model.EDRMNumber))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">EDRM Date.</td>
                                        <td>@(Html.DisplayFor(model => model.EDRMDate))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">EDRM Copy(Upload Scanned Copy)</td>
                                        <td>@(Html.DisplayFor(model => model.EDRMCopyPath))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Quantity of Mineral (Tonne) in EDRM </td>
                                        <td>@(Html.DisplayFor(model => model.EDRMQty))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Quantity of Mineral (Tonne)</td>
                                        <td>@(Html.DisplayFor(model => model.ReqQty))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Name and address of railway siding from where the mineral will be loaded </td>
                                        <td>@(Html.DisplayFor(x => x.AddressofRailwaySliding))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Name and address of destination railway siding</td>
                                        <td>@(Html.DisplayFor(x => x.DestinationRailwaySiding))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Date</td>
                                        <td>@(System.DateTime.Now.ToShortDateString()) </td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Time</td>
                                        <td> @(System.DateTime.Now.ToShortTimeString())</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Place</td>
                                        <td>@(Html.DisplayFor(model => model.Address))</td>
                                    </tr>

                                    <tr>
                                        <td class="font-weight-bold">Signature</td>
                                        <td></td>
                                    </tr>

                                    <tr style="display: none;">
                                        <td class="font-weight-bold">Name of  Applicant </td>
                                        <td colspan="3">@(Html.DisplayFor(model => model.Consigner, new { @class = "form-control", @readonly = "readonly" }))</td>

                                    </tr>



                                </tbody>
                            </table>




                        </div>

                    </div>
                </section>
            </div>
        </div>
    </div>
    <!-- MAIN CONTENT AREA ENDS -->
</section>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
<script>
    backMe = "yes"
    $(document).ready(function () {
        loadNavigation('Add', 'glhelpdesk', 'plraiseticket', 'tl', 'E-Permit', 'Generate Application for Railway Transit Pass', ' ');
    });


     function getPDF1() {

            var HTML_Width = $("#tablePRint").width();
            var HTML_Height = $("#tablePRint").height();
            var top_left_margin = 15;
            var PDF_Width = HTML_Width + (top_left_margin * 2);
            var PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);
            var canvas_image_width = HTML_Width;
            var canvas_image_height = HTML_Height;

            var totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;


            html2canvas($("#tablePRint")[0], { allowTaint: true }).then(function (canvas) {

                canvas.getContext('2d');

                console.log(canvas.height + "  " + canvas.width);

                // var data = canvas.toDataURL();
                var data = canvas.toDataURL("image/JPEG", 1.0);
                var pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);
                pdf.addImage(data, 'JPEG', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);


                for (var i = 1; i <= totalPDFPages; i++) {
                    pdf.addPage(PDF_Width, PDF_Height);
                    pdf.addImage(data, 'JPEG', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);
                }
                //data = data.replace('data:image/png;base64,', '');
                data = pdf.save($("#GrantOrderNo").val() + "ForwardingNote.pdf");

            });
    }


    function getPDF() {
        var HTML_Width = $("#tablePRint").width();
        var HTML_Height = $("#tablePRint").height();
        var top_left_margin = 15;
        var PDF_Width = HTML_Width + (top_left_margin * 2);
        var PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);
        var canvas_image_width = HTML_Width;
        var canvas_image_height = HTML_Height;

        var totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;


        html2canvas($("#tablePRint")[0], { allowTaint: true }).then(function (canvas) {

            canvas.getContext('2d');

            console.log(canvas.height + "  " + canvas.width);

            // var data = canvas.toDataURL();
            var data = canvas.toDataURL("image/JPEG", 1.0);
            var pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);
            pdf.addImage(data, 'JPEG', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);


            for (var i = 1; i <= totalPDFPages; i++) {
                pdf.addPage(PDF_Width, PDF_Height);
                pdf.addImage(data, 'JPEG', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);
            }
            //data = data.replace('data:image/png;base64,', '');
            data = pdf.output("datauristring").replace('data:application/pdf;base64,', '');

            try {
                var dt = new Date();
                var FNID = $("#ForwardingTransacationId").val();
                var FileName = "", _UpdateIn = "";
                var ticktime = '@System.DateTime.Now.Ticks.ToString()';

                if ('@profile.UserType' == "End User") {
                FileName = FNID + "_" + ticktime + ".pdf";
                _UpdateIn = "EU_FN";
                }
                else {
                FileName = FNID + "_" + ticktime + ".pdf";
                _UpdateIn = "LESSEE_FN";
                }

                $("#fName").val(FileName).change();
                $.ajax({
                url: "/Permit/Transit/SaveNormalPdfFile",
                data: { base64BinaryStr: data, fileName: $("#fName").val(), ID: $("#ForwardingNoteId").val(), UpdateIn: _UpdateIn },
                type: "post",
                dataType: 'json',
                success: function (msg) {

                if (msg == "SUCCESS") {

                var FPath = '@Configuration["DSCReadFilePath"]' + $("#fName").val();
                var OutPath = "";
                var Postdata = 'action=signpdf' + "\n" + 'datatosign=' + FPath + '' + "\n" + 'signaction=2' + "\n" + 'outputpath=' + OutPath + '' + "\n" + 'signtype=sign' + "\n" + 'expirycheck=false' + "\n" + 'coordinate=600,100,1300,50' + "\n" + 'issuername=' + "\n" + 'certtype=ALL' + "\n" + 'certclass=0';
                connection.send(Postdata);
                connection.onerror = function (error) {
                swal("", "Please check the server connection: " + error, "warning");
                //alert('Please check the server connection: ' + error);
                //alert(error);
                };

                connection.onmessage = function (e) { // when DSC is success then following function executed.

                if (e.data.indexOf("subProtocol") == -1) {

                $.ajax(
                {
                url: "/Permit/Transit/CheckVerifyResponse",
                type: "POST",
                data: { contentType: "pkcs7", signDataBase64Encoded: e.data, responseType: "plain" },
                async: false,
                success: function (msg) {

                if (msg == "SUCCESS") {

                var FNID = $("#fName").val();
                var ForwardingNoteId = $("#ForwardingNoteId").val();
                var signData = e.data;
                $.ajax({
                url: "/Permit/Transit/SavePdfFile",
                type: "POST",
                async: false,
                    data: { base64BinaryStr: signData, fileName: FNID, ID: ForwardingNoteId, UpdateIn: _UpdateIn },
                success: function (msg) {
                if (msg == "SUCCESS") {
                swal("", "You have successfully generate RTP.", "success")
                /*alert("You have successfully generate permit.");*/
                window.location.href = "@Url.Action("RTPPermitApplication", "Transit")" + "?ForwardingNoteId=" + $("#ForwardingNoteId").val();
                }
                else {
                swal("", "" + msg, "warning")
                /*alert(msg);*/
                }
                }
                });
                }
                }
                });
                }
                else {
                swal("", "" + e.data, "warning")
                /*  alert(e.data);*/
                }
                };
                }
                else {
                swal("", "" + msg, "warning")
                /*alert(msg);*/

                }
                }
                });
                }
                catch (e) {
                swal("", "Your DSC Connection is not working. Please try after some time.", "danger")
                }
                });
                }

                //following code is for DSC Signature
                try {
                var connection = new WebSocket('wss://localhost.emudhra.com:8080');

                connection.onopen = function () {
                console.log('Connection Opened');
                };
                connection.onerror = function (error) {
                //  alert('Please check the DSC connection: ' + error);
                };
                connection.onmessage = function (e) {
                if (e.data.indexOf("subProtocol") == -1) {
                //  alert(e.data);
                }
                };
                }
                catch (e) {
                swal("", "No DSC Connection Found", "warning")
                /*  alert("No DSC Connection Found");*/
                }
</script>


