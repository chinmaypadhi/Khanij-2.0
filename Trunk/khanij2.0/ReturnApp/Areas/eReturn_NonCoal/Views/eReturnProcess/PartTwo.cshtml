@*// *********************************************************************************************************
    //  View Name                : PartTwo
    //  Desciption               : Add Part2 of FOrm1 F1
    //  Created By               : Debaraj Swain
    //  Created On               : 30 Jun 2021
    // ********************************************************************************************************
*@
@model ReturnEF.MonthlyPartTwoViewModel
@{
    ViewData["Title"] = "ProfileView";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@*<link rel="stylesheet" href="~/css/bootstrap-datetimepicker.min.css" type="text/css" />
<script src="~/js/moment.min.js"></script>
<script src="~/js/bootstrap-datetimepicker.min.js"></script>
<script src='@Url.Content("~/js/sweetalert.min.js")'></script>
<script src="~/js/specialChar.js"></script>
<script src="~/js/CSMValidation.js"></script>*@
<script>
    $(document).ready(function () {
        //$('.datepicker').datetimepicker({
        //    format: 'LT',
        //    format: 'DD-MM-YYYY',
        //    daysOfWeekDisabled: [],
        //});
    });
</script>
<section class="wrapper main-wrapper row">
    @if (TempData["msg"] != null)
    {
        <script>
             swal("", "@TempData["msg"]", "success");
        </script>
    }
    @if (TempData["result"] != null)
    {
        <script>
             swal("", "@TempData["result"]", "success");
        </script>
    }
    @if (ViewBag.msg != null)
    {
        <script>
                      swal("",@ViewBag.msg, "success");
        </script>
    }
    <div class="col-12">
        <!-- MAIN CONTENT AREA STARTS -->
        @Html.Partial("_CMSnavigation")
        <div class="row">
            <div class="col-12">


                <div class="main-tab">
                    <ul class="nav nav-tabs">

                        <li class="nav-item">
                            <a class="nav-link" href="~/eReturn_NonCoal/eReturnProcess/PartOne?MonthYear=@TempData["M_Y"]">
                                Part 1
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" id="partTwo" href="~/eReturn_NonCoal/eReturnProcess/PartTwo?MonthYear=@TempData["M_Y"]">

                                Part 2
                            </a>
                        </li>

                    </ul>
                    @Html.Partial("_CMSutil")
                </div>


                <section class="box form-container">
                    <div class="content-body">
                        @using (Html.BeginForm("PartTwo", "eReturnProcess", FormMethod.Post, new { @id = "FormF1Part2", @enctype = "multipart/form-data" }))
                        {
                            <div class="text-center text-dark">
                                <h6 class="font-weight-bold">Monthly Return <small>(Form F-1)</small></h6>
                                <p class="font-weight-normal mb-0">
                                    To be used for minerals other than Copper, Gold, Lead, Pyrites,Tin,
                                    Tungsten, Zinc and precious and semi-precious stones
                                </p>
                                <h6 class="font-weight-bold">
                                    Production, Despatches and stocks , To be submitted separately for each mineral ,
                                    Unit of quantity in tonnes: indicate unit of quantity if not in tonnes<small> (Part – II)</small>
                                </h6>


                            </div>



                            <ul class="nav nav-tabs progressbar border-0" id="myTab" role="tablist">
                                <li class="startstep activestep1">
                                    <a class="active" id="first-tab" data-toggle="tab" href="#MD" role="tab" aria-controls="first" aria-selected="true">Type & Production and Grade</a>
                                </li>
                                <li>
                                    <a id="second-tab" data-toggle="tab" href="#ROM" role="tab" aria-controls="second" aria-selected="false">Grade-wise ROM</a>
                                </li>
                                @if (ViewBag.Mineral as string != "Iron ore" && ViewBag.Mineral as string != "Manganese ore" && ViewBag.Mineral as string != "Bauxite" && ViewBag.Mineral as string != "Chromite")
                                {
                                    <li>
                                        <a id="Six-tab" data-toggle="tab" href="#MP" role="tab" aria-controls="Six" aria-selected="false"> Mineral is being pulverized</a>
                                    </li>
                                }
                                <li>
                                    <a id="third-tab" data-toggle="tab" href="#RRP" role="tab" aria-controls="third" aria-selected="false"> Details of deductions made</a>
                                </li>
                                <li>
                                    <a id="four-tab" data-toggle="tab" href="#DWM" role="tab" aria-controls="four" aria-selected="false">Sales/ Dispatches effected</a>
                                </li>
                                <li>
                                    <a id="five-tab" data-toggle="tab" href="#ADE" role="tab" aria-controls="five" aria-selected="false">Reasons for Increase/Decrease</a>
                                </li>
                            </ul>
                            <div class="tab-content" id="myTabContent">
                                @Html.HiddenFor(m => m.objProduction.TypeOfProduction_Id)
                                @Html.HiddenFor(m => m.objProduction.Flag1)
                                @Html.HiddenFor(m => m.objProduction.TypeofOreProduced)
                                @Html.HiddenFor(m => m.objDeduction.DeductionMade_Id)
                                @Html.HiddenFor(m => m.objDeduction.CExMineSale)
                                @Html.HiddenFor(m => m.objDeduction.ex_mineSale)
                                @Html.Hidden("gradeWiseRom_Id", "", new { @class = "hiddenid" })
                                @Html.Hidden("gradeWiseProd_Id", "", new { @class = "hiddenid" })
                                @Html.Hidden("saleDespS_Id", "", new { @class = "hiddenid" })
                                @Html.Hidden("Pulverized_Id", "", new { @class = "hiddenid" })
                                @Html.Hidden("GradewiseRomLenth", "", new { @class = "hiddenid" })
                                @Html.Hidden("GradewiseProdLenth", "", new { @class = "hiddenid" })
                                @Html.Hidden("GradewiseSaledespLenth", "", new { @class = "hiddenid" })
                                @Html.Hidden("GradewisePulvLenth", "", new { @class = "hiddenid" })

                                <input type="hidden" value="@ViewBag.Month_Year" name="objProduction.Month_Year" id="Month_Year1" />
                                <input type="hidden" value="@ViewBag.Month_Year" name="objDeduction.Month_Year" id="Month_Year2" />
                                <input type="hidden" value="@ViewBag.Month_Year" name="objReason_Inc_Dec.Month_Year" id="Month_Year3" />
                                <input type="hidden" value="@ViewBag.Month_Year" name="Month_Year" id="Month_Year" />
                                <input type="hidden" value="@ViewBag.MineralId" name="objProduction.MineralId1" id="objProduction_MineralId1" />


                                <div class="tab-pane fade show active" id="MD" role="tabpanel" aria-labelledby="first-tab">

                                    <div class="form-group row ">
                                        <div class="col-lg-6 col-md-12 col-sm-12">
                                            <div class="row">

                                                @if (ViewBag.Mineral as string == "Iron ore")
                                                {
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

                                                        <h5 class="text-brown font-weight-bold">1. Type of ore produced</h5>
                                                        <br />
                                                        <input type="radio" name="TypeofOreProduced" value="Hematite" checked="checked" style="width: 20px; border-color: black; border: 1px" />Hematite
                                                        <input type="radio" name="TypeofOreProduced" value="Magnetite" style="width: 20px; border-color: black; border: 1px" />Magnetite
                                                        <hr style="border: none;" />
                                                    </div>
                                                }

                                            </div>
                                        </div>
                                    </div>

                                    <h5 class="text-brown font-weight-bold">2. Production and Stocks of ROM ore at Mine-head</h5>

                                    <div class="row">

                                        <table style="width: 100%" class="table table-sm table-bordered">
                                            <tr>
                                                <td>Category</td>
                                                <td>Opening stock</td>
                                                <td>Production</td>
                                                <td>Closing stock</td>
                                            </tr>
                                            <tr>
                                                <td>(a) Open Cast workings</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.OpeningStockOCW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.productionOCW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.closingOCW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                            </tr>
                                            <tr>
                                                <td>(b) Underground Workings</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.OpeningStockUW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.productionUW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.closingUW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                            </tr>
                                            <tr>
                                                <td>(c) Dump workings</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.OpeningStockDW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.productionDW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                                <td>@Html.TextBoxFor(m => m.objProduction.closingDW, new { @class = "form-control", onkeypress = "return numericdotOnly(event);" })</td>
                                            </tr>
                                        </table>




                                    </div>

                                    <div class="row mt-3">
                                        <div class="col-sm-12 text-center">

                                            <a id="second-tab" data-toggle="tab" href="#ROM" class="btn btn-primary btn-md ml-0 waves-effect waves-light btnNext" role="tab" aria-controls="second" aria-selected="false">Next</a>
                                        </div>
                                    </div>



                                </div>



                                <div class="tab-pane fade" id="ROM" role="tabpanel" aria-labelledby="second-tab">
                                    @if (ViewBag.Mineral as string == "Iron ore" || ViewBag.Mineral as string == "Chromite")
                                    {

                                        <div class="form-group row">
                                            <div class="col-sm-12">

                                                <h5 class="text-brown font-weight-bold">3(i) Grade-wise ROM ore despatches from mine head ($):</h5>

                                            </div>

                                            <a href="javascript:void(0);" class="btn btn-primary btn-md ml-0" data-target="#GradewiseromPop" data-toggle="modal"
                                               data-target=".alert-modal" onclick="ClearROM()">Add New Grade Wise ROM</a>
                                            <div class="col-sm-12">
                                                <div class="table-responsive">
                                                    <table id="datatable" class="table table-sm table-bordered ROM">
                                                        <thead>
                                                            <tr>
                                                                <th width="30">Sl#</th>
                                                                <th>Mineral Form</th>
                                                                <th>Mineral Grade</th>
                                                                <th>Despatches From Minehead</th>
                                                                <th>Ex-Mine price</th>
                                                                <th width="100px" class="noprint">Actions</th>
                                                            </tr>
                                                        </thead>

                                                    </table>
                                                </div>
                                                <br />

                                                <h9 class="text-brown font-weight-bold">($): Applicable for iron ore and chromite only</h9>


                                            </div>


                                        </div>
                                    }

                                    <div class="form-group row">
                                        <div class="col-sm-12">

                                            <h5 class="text-brown font-weight-bold">3(ii)Grade-wise Production, Dispatches, Stocks and Ex-mine prices</h5>
                                        </div>
                                        <a href="javascript:void(0);" class="btn btn-primary btn-md ml-0" data-target="#GradewiseProductionPop" data-toggle="modal"
                                           data-target=".alert-modal" onclick="ClearProduction()">Add New Grade Wise Production</a>
                                        <div class="col-sm-12">
                                            <div class="table-responsive">
                                                <table id="datatable2" class="table table-sm table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th width="30">Sl#</th>
                                                            <th>Mineral Form</th>
                                                            <th>Mineral Grade</th>
                                                            <th>Opening stock at Mine Head</th>
                                                            <th>Production</th>
                                                            <th>Dispatch</th>
                                                            <th>Closing Stock</th>
                                                            <th>Ex Mine Price</th>
                                                            <th width="100px" class="noprint">Actions</th>
                                                        </tr>
                                                    </thead>

                                                </table>
                                            </div>


                                        </div>
                                    </div>

                                    <div class="row mt-3">
                                        <div class="col-sm-12 text-center">

                                            @*<a class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious">Previous</a>*@
                                            <a id="second-tab" data-toggle="tab" href="#MD" class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious" role="tab" aria-controls="second" aria-selected="false">Previous</a>
                                            @*<a class="btn btn-danger btn-md ml-0 waves-effect waves-light">Reset</a>*@
                                            @if (ViewBag.Mineral as string != "Iron ore" && ViewBag.Mineral as string != "Manganese ore" && ViewBag.Mineral as string != "Bauxite" && ViewBag.Mineral as string != "Chromite")
                                            {
                                                <a id="third-tab" data-toggle="tab" href="#MP" class="btn btn-primary btn-md ml-0 waves-effect waves-light btnNext" role="tab" aria-controls="third" aria-selected="false"> Next</a>
                                            }
                                            else
                                            {
                                                <a id="third-tab" data-toggle="tab" href="#RRP" class="btn btn-primary btn-md ml-0 waves-effect waves-light btnNext" role="tab" aria-controls="third" aria-selected="false"> Next</a>
                                            }
                                        </div>
                                    </div>

                                </div>



                                <div class="tab-pane fade" id="MP" role="tabpanel" aria-labelledby="second-tab">
                                    @if (ViewBag.Mineral as string != "Iron ore" && ViewBag.Mineral as string != "Manganese ore" && ViewBag.Mineral as string != "Bauxite" && ViewBag.Mineral as string != "Chromite")
                                    {

                                        <div class="form-group row">
                                            <div class="col-sm-12">

                                                <h5 class="text-brown font-weight-bold">3(iii) In case the mineral is being pulverized in own factory, please give the following particulars</h5>

                                            </div>
                                            <a href="javascript:void(0);" class="btn btn-primary btn-md ml-0" data-target="#MineralPulverization" data-toggle="modal"
                                               data-target=".alert-modal" onclick="ClearPulverization()">Add New Mineral Pulverization</a>
                                            <div class="col-sm-12">
                                                <div class="table-responsive">
                                                    <table id="datatable1" class="table table-sm table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th width="30" rowspan="2">Sl#</th>
                                                                <th rowspan="2">Mineral Form</th>
                                                                <th rowspan="2">Mineral Grade</th>
                                                                <th rowspan="2">Total Qty Mineral Pulverization</th>
                                                                <th colspan="2" class="text-center">Total quantity of pulverized mineral produced(for each mesh size)</th>
                                                                <th colspan="3" class="text-center">Total Quantity of pulverized mineral sold during the month</th>

                                                                <th width="100px" class="noprint" rowspan="2">Actions</th>
                                                            </tr>
                                                            <tr>
                                                                <th>Mesh size</th>
                                                                <th>Quantity(tonne)</th>
                                                                <th>Mesh size</th>
                                                                <th>Quantity(tonne)</th>
                                                                <th>Ex-factory Sale value</th>
                                                            </tr>
                                                        </thead>

                                                    </table>
                                                </div>



                                            </div>


                                        </div>
                                    }

                                    <div class="form-group row">
                                        <div class="col-sm-12">
                                            @Html.HiddenFor(m => m.objDeduction.PFlag)
                                            @Html.HiddenFor(m => m.objDeduction.Average_Id)
                                            <br />

                                            <h5 class="text-brown font-weight-bold">3(iv) Average cost of pulverization (Not applicable for Iron ore, Manganese ore, Bauxite and Chromite) per tonne</h5>
                                            <hr />
                                            @Html.TextBoxFor(m => m.objDeduction.Averagecostofpulverization, new { @class = "form-control", @style = "width:30%;" })
                                        </div>

                                    </div>

                                    <div class="row mt-3">
                                        <div class="col-sm-12 text-center">


                                            <a id="second-tab" data-toggle="tab" href="#ROM" class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious" role="tab" aria-controls="second" aria-selected="false">Previous</a>


                                            <a id="third-tab" data-toggle="tab" href="#RRP" class="btn btn-primary btn-md ml-0 waves-effect waves-light btnNext" role="tab" aria-controls="third" aria-selected="false"> Next</a>

                                        </div>
                                    </div>

                                </div>


                                <div class="tab-pane fade" id="RRP" role="tabpanel" aria-labelledby="third-tab">
                                    <h5 class="text-brown font-weight-bold">Details of deductions made</h5>
                                    <div class="form-group row">
                                        <div class="col-lg-6 col-md-12 col-sm-12">
                                            <div class="row">
                                                @Html.HiddenFor(m => m.objDeduction.Flag2)
                                                <label for="inputName" class="col-sm-4 col-form-label font-weight-bolder">Captive dispatches sales</label>
                                                <div class="col-sm-7">
                                                    <div class="py-2">
                                                        <input type="radio" id="CExMineSaleYes" name="CExMineSale" value="Yes" style="width: 20px; border-color: black; border: 1px" />Yes
                                                        <input type="radio" id="CExMineSaleNo" name="CExMineSale" checked="checked" value="No" style="width: 20px; border-color: black; border: 1px" />No
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-12 col-sm-12">
                                            <div class="row">
                                                <label for="inputName" class="col-sm-3 col-form-label font-weight-bolder">Ex-mine sales</label>
                                                <div class="col-sm-7">
                                                    <div class="py-2">
                                                        <input type="radio" id="ex_mineYes" name="ex_mineSale" value="Yes" style="width: 20px; border-color: black; border: 1px" />Yes
                                                        <input type="radio" id="ex_mineNo" name="ex_mineSale" value="No" checked="checked" style="width: 20px; border-color: black; border: 1px" />No
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>

                                    <h5 class="text-brown font-weight-bold">4. Details of deductions made from sale value for computation of Ex-mine price (Rs / Tonne)</h5>
                                    <div class="row">
                                        <table style="width: 100%" class="table table-sm table-bordered">
                                            <tr>
                                                <td style="width: 40%">Deduction claimed (Not applicable for captive dispatch</td>
                                                <td style="width: 30%">Amount ( in Rs / Tonne)</td>
                                                <td style="width: 30%">Remarks</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    a)Cost of transportation
                                                    <br />
                                                    (indicate loading station and distance from mine in remarks)
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount1, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks1, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    b)Loading and unloading charges <br />
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount2, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks2, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    c)Railway freight, if applicable <br />
                                                    (indicate destination and distance)
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount3, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks3, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    d)Port handling charges or export duty <br />
                                                    (indicate name of port)
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount4, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks4, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    e)Charges for sampling and analysis <br />
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount5, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks5, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    f)Rent for the plot at Stocking yard <br />
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount6, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks6, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    g) Other charges(specify clearly)@Html.TextBoxFor(m => m.objDeduction.Deduction_claimedType7, new { @class = "form-control" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Amount7, new { @class = "form-control", @onKeyDown = "deduction_KeyDown(event);", @onchange = "TextChange();" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.Remarks7, new { @class = "form-control" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>Total (a) to (g)</td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.objDeduction.TotalAmount, new { @class = "form-control" })
                                                </td>
                                                <td></td>
                                            </tr>
                                        </table>
                                    </div>


                                    <div class="row mt-3">
                                        <div class="col-sm-12 text-center">
                                            @if (ViewBag.Mineral as string != "Iron ore" && ViewBag.Mineral as string != "Manganese ore" && ViewBag.Mineral as string != "Bauxite" && ViewBag.Mineral as string != "Chromite")
                                            {
                                                <a id="second-tab" data-toggle="tab" href="#MP" class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious" role="tab" aria-controls="second" aria-selected="false">Previous</a>
                                            }
                                            else
                                            {
                                                <a id="second-tab" data-toggle="tab" href="#ROM" class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious" role="tab" aria-controls="second" aria-selected="false">Previous</a>
                                            }

                                            <a id="third-tab" data-toggle="tab" href="#DWM" class="btn btn-primary btn-md ml-0 waves-effect waves-light btnNext" role="tab" aria-controls="third" aria-selected="false"> Next</a>


                                        </div>
                                    </div>



                                </div>


                                <div class="tab-pane fade" id="DWM" role="tabpanel" aria-labelledby="four-tab">

                                    <div class="form-group row">
                                        <div class="col-sm-12">

                                            <h5 class="text-brown font-weight-bold">5. Sales/ Dispatches effected for Domestic Purposes and for Exports:</h5>

                                        </div>
                                        <a href="javascript:void(0);" class="btn btn-primary btn-md ml-0" data-target="#AddSaledespatch" data-toggle="modal"
                                           data-target=".alert-modal" onclick="ClearsalesDespatch()">Add New Grade Wise Sale / Dispatches</a>
                                        <div class="col-sm-12">
                                            <div class="table-responsive">
                                                <table id="datatable4" class="table table-sm table-bordered w-100">
                                                    <thead>
                                                        <tr>
                                                            <th width="30px" rowspan="2">Sl#</th>
                                                            <th rowspan="2">Mineral Form</th>
                                                            <th rowspan="2">Mineral Grade</th>
                                                            <th rowspan="2">Nature of Despatch</th>
                                                            <th colspan="4" class="text-center">For Domestic purposes</th>
                                                            <th colspan="3" class="text-center">For Export</th>
                                                            <th width="100px" rowspan="2">Actions</th>
                                                        </tr>
                                                        <tr>

                                                            <th>Registration Number as allotted by the IBM</th>
                                                            <th>Purchaser Consinee</th>
                                                            <th>Quantity</th>
                                                            <th>Sale value (Rs)</th>
                                                            <th>Country</th>
                                                            <th>Quantity</th>
                                                            <th>F O B Value Rs</th>
                                                        </tr>
                                                    </thead>
                                                    @*<tbody>
                                                            <tr>
                                                                <td>1</td>
                                                                <td>Lumps</td>
                                                                <td>Lumps- Below 55% Fe</td>
                                                                <td>111</td>
                                                                <td>ee</td>
                                                                <td>0</td>
                                                                <td>2</td>
                                                                <td>N/A</td>
                                                                <td>0</td>
                                                                <td>N/A</td>
                                                                <td class="noprint">
                                                                    <a data-toggle="modal"
                                                                       data-target=".tab4-modal"
                                                                       class="btn-floating btn-outline-primary btn-sm"
                                                                       data-toggle="tooltip" data-placement="top" title="Edit"><i class="icon-pencil-alt-solid"></i></a>
                                                                    <a href="javascript:void(0);"
                                                                       class="btn-floating btn-outline-danger btn-sm"
                                                                       data-toggle="tooltip" data-placement="top" title="Delete"><i class="icon-trash-alt-solid"></i></a>
                                                                    <a href="javascript:void(0);"
                                                                       class="btn-floating btn-outline-success btn-sm"
                                                                       data-toggle="modal"
                                                                       data-target=".tab4-modal" data-toggle="tooltip" data-placement="top" title="Add New"><i class="icon-plus-solid"></i></a>
                                                                </td>
                                                            </tr>

                                                        </tbody>*@
                                                </table>
                                            </div>


                                        </div>
                                    </div>

                                    <div class="row mt-3">
                                        <div class="col-sm-12 text-center">


                                            <a id="second-tab" data-toggle="tab" href="#RRP" class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious" role="tab" aria-controls="second" aria-selected="false">Previous</a>


                                            <a id="third-tab" data-toggle="tab" href="#ADE" class="btn btn-primary btn-md ml-0 waves-effect waves-light btnNext" role="tab" aria-controls="third" aria-selected="false"> Next</a>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="ADE" role="tabpanel" aria-labelledby="five-tab">

                                    @Html.HiddenFor(m => m.objReason_Inc_Dec.Flag3)
                                    @Html.HiddenFor(m => m.objReason_Inc_Dec.Reason_Inc_Dec_Id)
                                    @Html.HiddenFor(m => m.objReason_Inc_Dec.FinalSubmitFlag)
                                    <div class="form-group row">
                                        <div class="col-sm-12">
                                            <h5 class="text-brown font-weight-bold">6. Give reasons for increase/decrease in production/nil production, if any, during the month compared to the previous month</h5>

                                            @Html.TextBoxFor(m => m.objReason_Inc_Dec.productionIncrDecResion, new { @class = "form-control" })
                                            <small class="text-danger">Maximum <strong>500</strong> characters</small>
                                        </div>


                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-12">

                                            <h5 class="text-brown font-weight-bold">7. Give reasons for increase/decrease in grade wise ex-mine price, if any, during the month compared to the previous month</h5>
                                            @Html.TextBoxFor(m => m.objReason_Inc_Dec.ex_minepriceIncrDecResion, new { @class = "form-control" })
                                            <small class="text-danger">Maximum <strong>500</strong> characters</small>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-12">

                                            @Html.CheckBoxFor(m => m.objReason_Inc_Dec.certify)
                                            <label>
                                                I certify that the information furnished above is correct and complete in all respects.
                                            </label>

                                        </div>
                                    </div>
                                    <div class="row mt-3">
                                        <div class="col-sm-12 text-center">

                                            <a id="second-tab" data-toggle="tab" href="#DWM" class="btn btn-dark btn-md ml-0 waves-effect waves-light btnPrevious" role="tab" aria-controls="second" aria-selected="false">Previous</a>
                                            <a id="btnReasonForInDcSave" class="btn btn-success btn-md ml-0 waves-effect waves-light btnsave" onclick="return OnSaveReason_Inc_Dec();">Save</a>

                                            <input type="button" value="Update" id="btnUpdateReason_Inc_Dec" style="display: none" class="btn btn-secondary btn-md ml-0 waves-effect waves-light btnsave" onclick="return OnUpdateReason_Inc_Dec();">
                                            <input type="button" value="Submit" id="btnFinalSubmit" style="display: none" class="btn btn-success btn-md ml-0 waves-effect waves-light btnsave" onclick="return OnSubmit();">
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                    </div>
                </section>

            </div>

            <div>

            </div>
        </div>



    </div>
</section>


<div class="modal fade alert-modal" tabindex="-1" role="dialog" aria-labelledby="alertModal" id="GradewiseromPop" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header p-2">
                <h5 class="modal-title m-0">Add New Grade Wise ROM</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-6 col-form-label font-weight-bolder">Mineral Form<span class="text-danger">*</span></label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(model => model.objGradewise_ROMModel.MineralNatureId8, ViewBag.MineralNature as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", autofocus = "autofocus", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-6 col-form-label font-weight-bolder">Mineral Grade<span class="text-danger">*</span></label>
                            <div class="col-sm-6">
                                <select name="MineralGradeId8" id="MineralGradeId8" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-6 col-form-label font-weight-bolder">Despatches from Mine-head<span class="text-danger">*</span></label>
                            <div class="col-sm-6">
                                <input class="form-control" id="Despatches_minehead" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-6 col-form-label font-weight-bolder">Ex Mine Price<span class="text-danger">*</span></label>
                            <div class="col-sm-6">
                                <input class="form-control" id="ExMinesprice" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                </div>

                <button class="btn btn-primary mb-1" id="btnGradewiserom">Submit</button>
                <button class="btn btn-secondary mb-1" style="display:none" id="UpdGradewiserom">Update</button>

            </div>

        </div>
    </div>
</div>


<!-- alert 1-->


<div class="modal fade table2-modal" tabindex="-1" role="dialog" id="GradewiseProductionPop" aria-labelledby="alertModal" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header p-2">
                <h5 class="modal-title m-0">Add New Grade Wise Production</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mineral Form<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                @Html.DropDownListFor(model => model.objGrade_WiseProduction.MineralNatureId5, ViewBag.MineralNatureProd as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", autofocus = "autofocus", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mineral Grade<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <select name="MineralGradeId5" id="MineralGradeId5" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Opening Stock <span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="OpeningStock_MineHead" name="OpeningStock_MineHead" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Production<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Production" name="Production" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Dispatch<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Dispatch_MineHead" name="Dispatch_MineHead" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Closing stock<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="ClosingStock_MineHead" onkeypress="return numericdotOnly(event);" name="ClosingStock_MineHead" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Ex Mine Price<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Ex_MinePrice" name="Ex_MinePrice" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                </div>
                <button class="btn btn-primary mb-1" id="btnGradewiseProd">Submit</button>
                <button class="btn btn-secondary mb-1" style="display:none" id="UpdbtnGradewiseProd">Update</button>

            </div>

        </div>
    </div>
</div>

<!-- alert 1-->
<div class="modal fade tab4-modal" tabindex="-1" role="dialog" id="AddSaledespatch" aria-labelledby="alertModal" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header p-2">
                <h5 class="modal-title m-0">Add New Add Sales and Dispatch</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mineral Form<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                @Html.DropDownListFor(model => model.objSalesDispatchModel.MineralNatureId6, ViewBag.MineralNatureProd as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", autofocus = "autofocus", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mineral Grade<span class="text-danger">*</span></label>
                            <div class="col-sm-7">

                                <select name="MineralGradeId6" id="MineralGradeId6" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Nature of Dispatch<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                @Html.DropDownListFor(model => model.objSalesDispatchModel.NatureofDispatch, ViewBag.NatureofDisp as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", autofocus = "autofocus", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div id="ForDomestic">
                        <label style="font:bolder;color:blue">For Domestic Purposes</label><hr />
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">Registration No. allotted by the IBM to the buyer<span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    <input class="form-control" id="RegistrationNo" name="RegistrationNo" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">Consignee Name<span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.objSalesDispatchModel.PurchaserConsinee, ViewBag.PurcConsig as IEnumerable<SelectListItem>, new { @class = "form-control", autofocus = "autofocus", required = "required" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">Quantity<span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    <input class="form-control" name="DomesticPurposes_Quantity" id="DomesticPurposes_Quantity" onkeypress="return numericdotOnly(event);" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">Sale Value <span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    <input class="form-control" id="SaleValue" name="SaleValue" onkeypress="return numericdotOnly(event);" type="text">
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id="ForExport" style="display:none">
                        <label style="font:bolder;color:blue">For export</label><hr />
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">Country<span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    <input class="form-control" id="Country" name="Country" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">Quantity<span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    <input class="form-control" id="Export_Quantity" name="Export_Quantity" onkeypress="return numericdotOnly(event);" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bolder">F.O.B Value (₹)<span class="text-danger">*</span></label>
                                <div class="col-sm-7">
                                    <input class="form-control" name="FOBValue" id="FOBValue" onkeypress="return numericdotOnly(event);" type="text">
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
                <button class="btn btn-primary mb-1" id="btnConsignee">Submit</button>
                <button class="btn btn-secondary mb-1" style="display:none" id="UpdConsignee">Update</button>

            </div>

        </div>
    </div>
</div>

<div class="modal fade table2-modal" tabindex="-1" role="dialog" id="MineralPulverization" aria-labelledby="alertModal" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header p-2">
                <h5 class="modal-title m-0">Add New Grade Wise ROM</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mineral Form<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                @Html.DropDownListFor(model => model.ObjMineral_PulverizedModel.MineralNatureId7, ViewBag.MineralNatureProd as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", autofocus = "autofocus", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mineral Grade<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <select name="MineralGradeId7" id="MineralGradeId7" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Total Qty Mineral Pulverization(in tonnes) <span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Total_Qty_Mineral_Pulverization" name="Total_Qty_Mineral_Pulverization" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <label>Total quantity of pulverized mineral produced(for each mesh size)</label>
                    <hr />
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mesh Size<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Pulverized_MeshSize" name="Pulverized_MeshSize" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Quantity (tonne)<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Pulverized_Qty" name="Pulverized_Qty" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <label>Total Quantity of pulverized mineral sold during the month</label>
                    <hr />
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Mesh size<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Produced_MeshSize" name="Produced_MeshSize" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Quantity (tonne)<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Produced_Qty" name="Produced_Qty" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label font-weight-bolder">Ex-factory Sale value (₹ )<span class="text-danger">*</span></label>
                            <div class="col-sm-7">
                                <input class="form-control" id="Produced_Ex_factory_Sale_value" name="Produced_Ex_factory_Sale_value" onkeypress="return numericdotOnly(event);" type="text">
                            </div>
                        </div>
                    </div>
                </div>
                <button class="btn btn-primary mb-1" id="btnPulverized">Submit</button>
                <button class="btn btn-secondary mb-1" style="display:none" id="UpdbtnPulverized">Update</button>

            </div>

        </div>
    </div>
</div>
@*Add New Grade Wise ROM Portion Added By Debaraj Swain 04-Jun-2021*@
<script>

    $(document).ready(function () {

            $("#objGradewise_ROMModel_MineralNatureId8").change(function () {
                var MineralID = $('#objGradewise_ROMModel_MineralNatureId8').val();
                if (MineralID == "") {
                    MineralID = 0;
                }

                $('#MineralGradeId8').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                            $.each(SList, function (i, item) {

                                $('#MineralGradeId8').append('<option value="' + item.mineralGradeID + '">' + item.mineralGrade + '</option>');

                            });

                        }


                    });
                }
                else {
                    swal("", "Select Mineral Form", "warning");
                }

            });

            $("#btnGradewiserom").click(function () {

                var mineralform = $('#objGradewise_ROMModel_MineralNatureId8 option:selected').val();
                var mineralGrade = $('#MineralGradeId8 option:selected').val();
                var desp = $('#Despatches_minehead').val();
                var ExMinesprice = $('#ExMinesprice').val();
                var monthYear = $('#Month_Year1').val();
                var UID =@TempData["UID"];

                if (!DropDownValidation("objGradewise_ROMModel_MineralNatureId8", "Mineral Form")) {
                    return false;
                }
                if (!DropDownValidation("MineralGradeId8", "Mineral grade")) {
                    return false;
                }
                if (!blankFieldValidation("Despatches_minehead", "Despatches from Mine-head")) {
                    return false;
                }
                if (!blankFieldValidation("ExMinesprice", " Ex Mine Price")) {
                    return false;
                }

                  $.ajax({
                        type: "POST",
                        url: '@Url.Action("ADDGradewise_ROM", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                      data: { 'mineralform': mineralform, 'mineralGrade': mineralGrade, 'desp': desp, 'ExMinesprice': ExMinesprice, 'monthYear': monthYear, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                      success: function (result) {
                          if (result == 1)
                          {
                              swal("","Record Added Successfully", "success");
                              GetGradewiseROM();
                              $('#GradewiseromPop').modal('toggle');
                          }
                          else
                            {
                              swal("", "Some error occred..Please Try again", "warning");
                              GetGradewiseROM();
                              $('#GradewiseromPop').modal('toggle');
                            }


                        }


                    });
            })
            $("#UpdGradewiserom").click(function () {

                var ID= $("#gradeWiseRom_Id").val();
                var mineralform = $('#objGradewise_ROMModel_MineralNatureId8 option:selected').val();
                var mineralGrade = $('#MineralGradeId8 option:selected').val();
                var desp = $('#Despatches_minehead').val();
                var ExMinesprice = $('#ExMinesprice').val();
                var monthYear = $('#Month_Year1').val();
                var UID =@TempData["UID"];

                if (!DropDownValidation("objGradewise_ROMModel_MineralNatureId8", "Mineral Form")) {
                    return false;
                }
                if (!DropDownValidation("MineralGradeId8", "Mineral grade")) {
                    return false;
                }
                if (!blankFieldValidation("Despatches_minehead", "Despatches from Mine-head")) {
                    return false;
                }
                if (!blankFieldValidation("ExMinesprice", " Ex Mine Price")) {
                    return false;
                }
                  $.ajax({
                        type: "POST",
                        url: '@Url.Action("UpdateGradewise_ROM", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                      data: { 'ROMID': ID,'mineralform': mineralform, 'mineralGrade': mineralGrade, 'desp': desp, 'ExMinesprice': ExMinesprice, 'monthYear': monthYear, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                      success: function (result) {
                          if (result == 1)
                          {
                              swal("","Record Updated Successfully", "success");
                              GetGradewiseROM();
                              $('#GradewiseromPop').modal('toggle');
                          }
                          else
                            {
                              swal("", "Some error occred..Please Try again", "warning");
                              GetGradewiseROM();
                              $('#GradewiseromPop').modal('toggle');
                            }


                        }


                    });
            })



    });
    $(document).ready(function () {


        GetGradewiseROM();
        GetGradewiseProduction();
        GetSalesDespatch();
        GetGradewisePulverization();
    });
    function ClearROM() {
        $("#btnGradewiserom").css("display", "block");
        $("#UpdGradewiserom").css("display", "none");
        $("#objGradewise_ROMModel_MineralNatureId8").val($("#objGradewise_ROMModel_MineralNatureId8 option:first").val());
        $('#MineralGradeId8').empty();
        $("#Despatches_minehead").val('');
        $("#ExMinesprice").val('');

    }


    function Edituser(id, MineralForm, MineralGrade, DespMineHead, ExPrice) {

        $("#gradeWiseRom_Id").val(id);
        $('#objGradewise_ROMModel_MineralNatureId8').val(MineralForm);

        var MineralID = MineralForm;
                if (MineralID == "") {
                    MineralID = 0;
                }

                $('#MineralGradeId8').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                            $.each(SList, function (i, item) {
                                $("#MineralGradeId8").append($("<option></option>").val(item.mineralGradeID).html(item.mineralGrade));
                            });
                            $('#MineralGradeId8').val(MineralGrade);
                        }


                    });
                }
                else {
                    alert('Select Mineral Form');
                }
        $("#Despatches_minehead").val(DespMineHead);
        $("#ExMinesprice").val(ExPrice);
        $("#btnGradewiserom").css("display", "none");
        $("#UpdGradewiserom").css("display", "block");
    }
    function DeleteROM(RomID) {
        if (confirm("Are you sure to delete the record?")) {

            var ID = RomID;
            var UID =@TempData["UID"];
            if (ID == 0 || ID == null) {
                alert('Something went wrong ..Please Try Again')
                return false
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteGradewise_ROM", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                data: { 'ROMID': ID, 'UID': UID },
                cache: false,

                datatype: "JSON",
                success: function (result) {
                    if (result == 1) {
                        swal("","Record Deleted Successfully", "success");
                        GetGradewiseROM();

                    }
                    else {
                        swal("", "Some error occred..Please Try again", "warning");
                        GetGradewiseROM();

                    }


                }


            });
        }
        else
        {
            return false;
        }
            }
    function GetGradewiseROM()
    {
        var monthYear = $('#Month_Year1').val();
        var UID =@TempData["UID"];
         $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradewise_ROM", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'MonthYear': monthYear, 'UserId': UID},
                        cache: false,

                        datatype: "JSON",
                    success: function (list) {


                        $("#datatable > tbody").html("");
                        $('#datatable').append('<tbody>');
                        for (var i = 0; i < list.length; i++)
                        {
                            $('#datatable').append('<tr><td><input type="hidden" id="gradeWiseRom_Id" name="gradeWiseRom_Id" value=' + list[i].gradeWiseRom_Id + ' />' + (i + 1) + '</td><td>' + list[i].mineralNature + '</td><td>' + list[i].mineralGrade + '</td><td>' + list[i].despatches_minehead + '</td> <td>' + list[i].ex_mine_Price + '</td> <td class="noprint"> <a data-toggle="modal" data-target="#GradewiseromPop" class="btn-floating btn-outline-primary btn-sm" data-toggle="tooltip" data-placement="top" onclick="Edituser(' + list[i].gradeWiseRom_Id + ' ,' + list[i].mineralNatureId8 + ',' + list[i].mineralGradeId8 + ',' + list[i].despatches_minehead + ',' + list[i].ex_mine_Price + ')" title="Edit"><i class="icon-pencil-alt-solid"></i></a><a class="btn-floating btn-outline-danger btn-sm"data-toggle="tooltip" onclick="DeleteROM(' + list[i].gradeWiseRom_Id + ')" data-placement="top" title="Delete"><i class="icon-trash-alt-solid"></i></a>  </td> </tr> ');
                        }
                        $('#datatable').append('</tbody>');
                        var count = $('#datatable tr').length;
                        $('#GradewiseRomLenth').val(count);

                        }


         });
        //$('#datatable').DataTable();

    }
</script>
@* End Add New Grade Wise ROM Portion*@

@*Add New Grade Wise Production Portion Added By Debaraj Swain 04-Jun-2021*@
<script>
    $(document).ready(function () {


        $("#Dispatch_MineHead").focusout(function () {

        var OS = $("#OpeningStock_MineHead").val();
        var PRD = $("#Production").val();
        var DP = $("#Dispatch_MineHead").val();
        if (PRD) {
            var CS = (parseFloat(OS) + parseFloat(PRD)) - parseFloat(DP);
            if (parseFloat(CS) < 0) {
                CS = 0;
                $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                $("#Production").val('').change();
                swal("", "Please enter proper opening stock and production !", "warning");
                return false;
            }
            $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
        }
        });
        $("#OpeningStock_MineHead").focusout(function () {

        var OS = $("#OpeningStock_MineHead").val();
        var PRD = $("#Production").val();
        var DP = $("#Dispatch_MineHead").val();
        if (PRD) {
            var CS = (parseFloat(OS) + parseFloat(PRD)) - parseFloat(DP);
            if (parseFloat(CS) < 0) {
                CS = 0;
                $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                swal("", "Please enter proper opening stock and production !", "warning");
                return false;
            }

            $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
        }
                           });

         $("#objGrade_WiseProduction_MineralNatureId5").change(function () {
          var MineralID = $('#objGrade_WiseProduction_MineralNatureId5').val();
                if (MineralID == "") {
                    MineralID = 0;
                }

                $('#MineralGradeId5').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                        $.each(SList, function (i, item) {

                        $('#MineralGradeId5').append('<option value="' + item.mineralGradeID + '">' + item.mineralGrade + '</option>');

                        });

                        }


                        });
                        }
                        else {
                        alert('Select Mineral Form');
                        }

                        });

                       $("#btnGradewiseProd").click(function () {

                           var mineralform = $('#objGrade_WiseProduction_MineralNatureId5 option:selected').val();
                           var mineralGrade = $('#MineralGradeId5 option:selected').val();
                           var OpeningStock_MineHead = $('#OpeningStock_MineHead').val();
                           var Production = $('#Production').val();
                           var Dispatch_MineHead = $('#Dispatch_MineHead').val();
                           var ClosingStock_MineHead = $('#ClosingStock_MineHead').val();
                           var Ex_MinePrice = $('#Ex_MinePrice').val();
                        var monthYear = $('#Month_Year1').val();
                        var UID =@TempData["UID"];

                           if (!DropDownValidation("objGrade_WiseProduction_MineralNatureId5", "Mineral Form")) {
                               return false;
                           }
                           if (!DropDownValidation("MineralGradeId5", "Mineral grade")) {
                               return false;
                           }
                           if (!blankFieldValidation("OpeningStock_MineHead", "Opening Stock")) {
                               return false;
                           }
                           if (!blankFieldValidation("Production", "Production")) {
                               return false;
                           }
                           if (!blankFieldValidation("Dispatch_MineHead", "Dispatch")) {
                               return false;
                           }
                           if (!blankFieldValidation("ClosingStock_MineHead", "Closing Stock")) {
                               return false;
                           }
                           if (!blankFieldValidation("ClosingStock_MineHead", "Ex Mine Price")) {
                               return false;
                           }



                               var OS = $("#OpeningStock_MineHead").val();
                               var PRD = $("#Production").val();
                               var DP = $("#Dispatch_MineHead").val();
                               if (PRD) {
                                   var CS = (parseFloat(OS) + parseFloat(PRD)) - parseFloat(DP);
                                   if (parseFloat(CS) < 0) {
                                       CS = 0;
                                       $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                                       $("#Production").val('').change();
                                       swal("", "Please enter proper opening stock and production !", "warning");
                                       return false;
                                   }
                                   $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                               }


                               var OS = $("#OpeningStock_MineHead").val();
                               var PRD = $("#Production").val();
                               var DP = $("#Dispatch_MineHead").val();
                               if (PRD) {
                                   var CS = (parseFloat(OS) + parseFloat(PRD)) - parseFloat(DP);
                                   if (parseFloat(CS) < 0) {
                                       CS = 0;
                                       $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                                       swal("", "Please enter proper opening stock and production !", "warning");
                                       return false;
                                   }

                                   $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                               }


                        $.ajax({
                        type: "POST",
                        url: '@Url.Action("ADDGradewise_Production", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                            data: { 'mineralform': mineralform, 'mineralGrade': mineralGrade, 'OpeningStock_MineHead': OpeningStock_MineHead, 'Production': Production, 'Dispatch_MineHead': Dispatch_MineHead, 'ClosingStock_MineHead': ClosingStock_MineHead, 'Ex_MinePrice': Ex_MinePrice, 'monthYear': monthYear, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                        success: function (result) {
                        if (result == 1)
                        {
                            swal("","Record Added Successfully" , "success");
                            GetGradewiseProduction();
                            $('#GradewiseProductionPop').modal('toggle');
                        }

                        else
                        {
                            if (result == 2)
                            {
                                swal("", "Mineral form and Grade Already present for the month and year !", "warning");
                                GetGradewiseProduction();
                                $('#GradewiseProductionPop').modal('toggle');
                            }
                            else {
                                swal("", "Some error occred..Please Try again !", "warning");
                                GetGradewiseProduction();
                                $('#GradewiseProductionPop').modal('toggle');
                                 }
                        }


                        }


                        });
                        })
                       $("#UpdbtnGradewiseProd").click(function () {

                        var ID = $("#gradeWiseProd_Id").val();
                         var mineralform = $('#objGrade_WiseProduction_MineralNatureId5 option:selected').val();
                           var mineralGrade = $('#MineralGradeId5 option:selected').val();
                           var OpeningStock_MineHead = $('#OpeningStock_MineHead').val();
                           var Production = $('#Production').val();
                           var Dispatch_MineHead = $('#Dispatch_MineHead').val();
                           var ClosingStock_MineHead = $('#ClosingStock_MineHead').val();
                           var Ex_MinePrice = $('#Ex_MinePrice').val();
                        var monthYear = $('#Month_Year1').val();
                        var UID =@TempData["UID"];
                           if (!DropDownValidation("objGrade_WiseProduction_MineralNatureId5", "Mineral Form")) {
                               return false;
                           }
                           if (!DropDownValidation("MineralGradeId5", "Mineral grade")) {
                               return false;
                           }
                           if (!blankFieldValidation("OpeningStock_MineHead", "Opening Stock")) {
                               return false;
                           }
                           if (!blankFieldValidation("Production", "Production")) {
                               return false;
                           }
                           if (!blankFieldValidation("Dispatch_MineHead", "Dispatch")) {
                               return false;
                           }
                           if (!blankFieldValidation("ClosingStock_MineHead", "Closing Stock")) {
                               return false;
                           }
                           if (!blankFieldValidation("ClosingStock_MineHead", "Ex Mine Price")) {
                               return false;
                           }

                               var OS = $("#OpeningStock_MineHead").val();
                               var PRD = $("#Production").val();
                               var DP = $("#Dispatch_MineHead").val();
                               if (PRD) {
                                   var CS = (parseFloat(OS) + parseFloat(PRD)) - parseFloat(DP);
                                   if (parseFloat(CS) < 0) {
                                       CS = 0;
                                       $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                                       $("#Production").val('').change();
                                       swal("", "Please enter proper opening stock and production !", "warning");
                                       return false;
                                   }
                                   $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                               }


                               var OS = $("#OpeningStock_MineHead").val();
                               var PRD = $("#Production").val();
                               var DP = $("#Dispatch_MineHead").val();
                               if (PRD) {
                                   var CS = (parseFloat(OS) + parseFloat(PRD)) - parseFloat(DP);
                                   if (parseFloat(CS) < 0) {
                                       CS = 0;
                                       $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                                       swal("", "Please enter proper opening stock and production !", "warning");
                                       return false;
                                   }

                                   $("#ClosingStock_MineHead").val(CS.toFixed(2)).change();
                               }

                        $.ajax({
                        type: "POST",
                        url: '@Url.Action("UpdateGradewise_Prod", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                            data: { 'ProdID': ID, 'mineralform': mineralform, 'mineralGrade': mineralGrade, 'OpeningStock_MineHead': OpeningStock_MineHead, 'Production': Production, 'Dispatch_MineHead': Dispatch_MineHead, 'ClosingStock_MineHead': ClosingStock_MineHead, 'Ex_MinePrice': Ex_MinePrice, 'monthYear': monthYear, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                        success: function (result) {
                        if (result == 1)
                        {
                            swal("","Record Updated Successfully" , "success");
                            GetGradewiseProduction();
                            $('#GradewiseProductionPop').modal('toggle');
                        }
                        else
                        {
                            swal("", "Some error occred..Please Try again !", "warning");
                            GetGradewiseProduction();
                            $('#GradewiseProductionPop').modal('toggle');
                        }


                        }


                        });
                        })



    });
    function ClearProduction() {
        $("#btnGradewiseProd").css("display", "block");
        $("#UpdbtnGradewiseProd").css("display", "none");
        $("#objGrade_WiseProduction_MineralNatureId5").val($("#objGrade_WiseProduction_MineralNatureId5 option:first").val());
        $('#MineralGradeId5').empty();
        $("#OpeningStock_MineHead").val('');
        $("#Production").val('');
        $("#Dispatch_MineHead").val('');
        $("#ClosingStock_MineHead").val('');
        $("#Ex_MinePrice").val('');

    }
    function GetGradewiseProduction()
    {
        var monthYear = $('#Month_Year1').val();
        var UID =@TempData["UID"];
         $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGrade_WiseProduction", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'MonthYear': monthYear, 'UserId': UID},
                        cache: false,

                        datatype: "JSON",
                    success: function (list) {


                        $("#datatable2 > tbody").html("");
                        $('#datatable2').append('<tbody>');
                        for (var i = 0; i < list.length; i++)
                        {

                            $('#datatable2').append('<tr><td><input type="hidden" id="gradeWiseProduction_Id" name="gradeWiseProduction_Id" value=' + list[i].gradeWiseProduction_Id + ' />' + (i + 1) + '</td><td>' + list[i].mineralNature + '</td><td>' + list[i].mineralGrade + '</td><td>' + list[i].openingStock_MineHead + '</td> <td>' + list[i].production + '</td><td>' + list[i].dispatch_MineHead + '</td><td>' + list[i].closingStock_MineHead + '</td><td>' + list[i].ex_MinePrice + '</td> <td class="noprint"> <a data-toggle="modal" data-target="#GradewiseProductionPop" class="btn-floating btn-outline-primary btn-sm" data-toggle="tooltip" data-placement="top" onclick="EditProduction(' + list[i].gradeWiseProduction_Id + ' ,' + list[i].mineralNatureId5 + ',' + list[i].mineralGradeId5 + ',' + list[i].openingStock_MineHead + ',' + list[i].production + ',' + list[i].dispatch_MineHead + ',' + list[i].closingStock_MineHead + ',' + list[i].ex_MinePrice + ')" title="Edit"><i class="icon-pencil-alt-solid"></i></a><a class="btn-floating btn-outline-danger btn-sm"data-toggle="tooltip" onclick="DeleteProd(' + list[i].gradeWiseProduction_Id + ')" data-placement="top" title="Delete"><i class="icon-trash-alt-solid"></i></a>  </td> </tr>');

                        }
                        $('#datatable2').append('</tbody>');
                        var count1 = $('#datatable2 tr').length;
                        $('#GradewiseProdLenth').val(count1);
                      //  $('#datatable2').DataTable();

                        }


         });


    }
    function EditProduction(id, MineralForm, MineralGrade, OpeningStock_MineHead, Production, Dispatch_MineHead, ClosingStock_MineHead, Ex_MinePrice) {

        $("#gradeWiseProd_Id").val(id);
        $('#objGrade_WiseProduction_MineralNatureId5').val(MineralForm);
        var MineralID = $('#objGrade_WiseProduction_MineralNatureId5').val();
                if (MineralID == "") {
                    MineralID = 0;
                }

        $('#MineralGradeId5').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                            $.each(SList, function (i, item) {
                                $("#MineralGradeId5").append($("<option></option>").val(item.mineralGradeID).html(item.mineralGrade));
                            });
                            $('#MineralGradeId5').val(MineralGrade);
                        }


                    });
                }
                else {
                    alert('Select Mineral Form');
                }
        $("#OpeningStock_MineHead").val(OpeningStock_MineHead);
        $("#Production").val(Production);
        $("#Dispatch_MineHead").val(Dispatch_MineHead);
        $("#ClosingStock_MineHead").val(ClosingStock_MineHead);
        $("#Ex_MinePrice").val(Ex_MinePrice);
        $("#btnGradewiseProd").css("display", "none");
        $("#UpdbtnGradewiseProd").css("display", "block");

    }
    function DeleteProd(RomID) {
        if (confirm("Are you sure to delete the record?")) {

            var ID = RomID;
            var UID =@TempData["UID"];
            if (ID == 0 || ID == null) {
                swal("", "Something went wrong ..Please Try Again !", "warning");
                return false
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteGradewise_Prod", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                data: { 'ProdID': ID, 'UID': UID },
                cache: false,

                datatype: "JSON",
                success: function (result) {
                    if (result == 1) {
                        swal("","Record Deleted Successfully", "success");
                        GetGradewiseProduction();

                    }
                    else {
                        swal("", "Something went wrong ..Please Try Again !", "warning");
                        GetGradewiseProduction();

                    }


                }


            });
        }
        else
        {
            return false;
        }
            }
</script>
@* End Add New Grade Wise Production Portion*@

@*Add New Sale / Dispatch Portion Added By Debaraj Swain 08-Jun-2021*@
<script>

    $(document).ready(function () {
        $("#objSalesDispatchModel_NatureofDispatch").change(function () {


            var NOD = $("#objSalesDispatchModel_NatureofDispatch").val();
                if (NOD == "Export") {
                    $("#ForExport").show();
                    $("#ForDomestic").hide();

                    $("#RegistrationNo").val(null);
                    $("#objSalesDispatchModel_PurchaserConsinee").val(null);
                    $("#DomesticPurposes_Quantity").val(null);
                    $("#SaleValue").val(null);
                }
                else if (NOD == "Domestic Sale" || NOD == "Domestic Transfer" || NOD == "Captive Consumption") {
                    $("#ForDomestic").show();
                    $("#ForExport").hide();

                    $("#Country").val(null);
                    $("#Export_Quantity").val(null);
                    $("#FOBValue").val(null);
                }

        });
        $("#objSalesDispatchModel_MineralNatureId6").change(function () {
              var MineralID = $('#objSalesDispatchModel_MineralNatureId6').val();
                if (MineralID == "") {
                    MineralID = 0;
                }

                $('#MineralGradeId6').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                        $.each(SList, function (i, item) {

                            $('#MineralGradeId6').append('<option value="' + item.mineralGradeID + '">' + item.mineralGrade + '</option>');

                        });

                        }


                        });
                        }
                        else {
                    swal("", "Select Mineral Form !", "warning");
                        }

                        });

        $("#btnConsignee").click(function () {

            var MineralNatureId6 = $('#objSalesDispatchModel_MineralNatureId6 option:selected').val();
            var MineralGradeId6 = $('#MineralGradeId6 option:selected').val();
            var NatureofDispatch = $('#objSalesDispatchModel_NatureofDispatch option:selected').val();
            var RegistrationNo = $('#RegistrationNo').val();
            var PurchaserConsinee = $('#objSalesDispatchModel_PurchaserConsinee option:selected').text();
            var DomesticPurposes_Quantity = $('#DomesticPurposes_Quantity').val();
            var SaleValue = $('#SaleValue').val();
            var Country = $('#Country').val();
            var Export_Quantity = $('#Export_Quantity').val();
            var FOBValue = $('#FOBValue').val();
            var MonthYear = $('#Month_Year1').val();
            var MineralId =@ViewBag.MineralId;
            var UID =@TempData["UID"];

            if (!DropDownValidation("objSalesDispatchModel_MineralNatureId6", "Mineral Form")) {
                return false;
            }
            if (!DropDownValidation("MineralGradeId6", "Mineral grade")) {
                return false;
            }
            if (!DropDownValidation("objSalesDispatchModel_NatureofDispatch", "Nature of Dispatch")) {
                return false;
            }



            if (NatureofDispatch != "Export") {
                if (!blankFieldValidation("RegistrationNo", " Registration No.")) {
                    return false;
                }
                if (!DropDownValidation("objSalesDispatchModel_PurchaserConsinee", "Consignee name")) {
                    return false;
                }
                if (!blankFieldValidation("DomesticPurposes_Quantity", "Quantity")) {
                    return false;
                }
                if (!blankFieldValidation("SaleValue", "Sale Value")) {
                    return false;
                }
            }
            else {

                if (!blankFieldValidation("Country", "Country")) {
                    return false;
                }
                if (!blankFieldValidation("Export_Quantity", "Exprt Quntity")) {
                    return false;
                }
                if (!blankFieldValidation("FOBValue", "F.O.B Value")) {
                    return false;
                }


            }

                        $.ajax({
                        type: "POST",
                        url: '@Url.Action("AddSaleDispatch", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                            data: { 'MineralNatureId6': MineralNatureId6, 'MineralGradeId6': MineralGradeId6, 'NatureofDispatch': NatureofDispatch, 'RegistrationNo': RegistrationNo, 'PurchaserConsinee': PurchaserConsinee, 'DomesticPurposes_Quantity': DomesticPurposes_Quantity, 'SaleValue': SaleValue, 'Country': Country, 'Export_Quantity': Export_Quantity, 'FOBValue': FOBValue, 'MonthYear': MonthYear, 'MineralId': MineralId, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                        success: function (result) {
                        if (result == 1)
                        {
                            swal("", "Record Added Successfully", "success");
                            GetSalesDespatch()
                            $('#AddSaledespatch').modal('toggle');
                        }

                        else
                        {
                            if (result == 2)
                            {
                                swal("", "Mineral form and Grade Already present for the month and year !", "warning");
                                GetSalesDespatch()
                                $('#AddSaledespatch').modal('toggle');
                            }
                            else {
                                swal("", "Some error occred..Please Try again !", "warning");
                                GetSalesDespatch()
                                $('#AddSaledespatch').modal('toggle');
                                 }
                        }


                        }


                        });
                        })
        $("#UpdConsignee").click(function () {
            var ID = $("#saleDespS_Id").val();
            var MineralNatureId6 = $('#objSalesDispatchModel_MineralNatureId6 option:selected').val();
            var MineralGradeId6 = $('#MineralGradeId6 option:selected').val();
            var NatureofDispatch = $('#objSalesDispatchModel_NatureofDispatch option:selected').val();
            var RegistrationNo = $('#RegistrationNo').val();
            var PurchaserConsinee = $('#objSalesDispatchModel_PurchaserConsinee option:selected').text();
            var DomesticPurposes_Quantity = $('#DomesticPurposes_Quantity').val();
            var SaleValue = $('#SaleValue').val();
            var Country = $('#Country').val();
            var Export_Quantity = $('#Export_Quantity').val();
            var FOBValue = $('#FOBValue').val();
            var MonthYear = $('#Month_Year1').val();
            var MineralId =@ViewBag.MineralId;
            var UID =@TempData["UID"];

            if (!DropDownValidation("objSalesDispatchModel_MineralNatureId6", "Mineral Form")) {
                return false;
            }
            if (!DropDownValidation("MineralGradeId6", "Mineral grade")) {
                return false;
            }
            if (!DropDownValidation("objSalesDispatchModel_NatureofDispatch", "Nature of Dispatch")) {
                return false;
            }



            if (NatureofDispatch != "Export") {
                if (!blankFieldValidation("RegistrationNo", " Registration No.")) {
                    return false;
                }
                if (!DropDownValidation("objSalesDispatchModel_PurchaserConsinee", "Consignee name")) {
                    return false;
                }
                if (!blankFieldValidation("DomesticPurposes_Quantity", "Quantity")) {
                    return false;
                }
                if (!blankFieldValidation("SaleValue", "Sale Value")) {
                    return false;
                }
            }
            else {

                if (!blankFieldValidation("Country", "Country")) {
                    return false;
                }
                if (!blankFieldValidation("Export_Quantity", "Exprt Quntity")) {
                    return false;
                }
                if (!blankFieldValidation("FOBValue", "F.O.B Value")) {
                    return false;
                }


            }


                        $.ajax({
                        type: "POST",
                        url: '@Url.Action("UpdateSaleDispatch", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                            data: { 'id': ID, 'MineralNatureId6': MineralNatureId6, 'MineralGradeId6': MineralGradeId6, 'NatureofDispatch': NatureofDispatch, 'RegistrationNo': RegistrationNo, 'PurchaserConsinee': PurchaserConsinee, 'DomesticPurposes_Quantity': DomesticPurposes_Quantity, 'SaleValue': SaleValue, 'Country': Country, 'Export_Quantity': Export_Quantity, 'FOBValue': FOBValue, 'MonthYear': MonthYear, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                        success: function (result) {
                        if (result == 1)
                        {
                            swal("","Record Updated Successfully" , "success");
                            GetSalesDespatch()
                            $('#AddSaledespatch').modal('toggle');
                        }
                        else
                        {
                            swal("", "Some error occred..Please Try again !", "warning");
                            GetSalesDespatch()
                            $('#AddSaledespatch').modal('toggle');
                        }


                        }


                        });
                        })



    });
    function ClearsalesDespatch() {
        $("#btnConsignee").css("display", "block");
        $("#UpdConsignee").css("display", "none");
        $("#ForDomestic").show();
        $("#ForExport").hide();
        $("#objSalesDispatchModel_MineralNatureId6").val($("#objSalesDispatchModel_MineralNatureId6 option:first").val());
        $('#MineralGradeId6').empty();
        $("#objSalesDispatchModel_NatureofDispatch").val($("#objSalesDispatchModel_NatureofDispatch option:first").val());
        $("#RegistrationNo").val('');
        $("#objSalesDispatchModel_PurchaserConsinee").val($("#objSalesDispatchModel_PurchaserConsinee option:first").val());
        $("#DomesticPurposes_Quantity").val('');
        $("#SaleValue").val('');
        $("#Country").val('');
        $("#Export_Quantity").val('');
        $("#FOBValue").val('');

    }
    function GetSalesDespatch()
    {
        var monthYear = $('#Month_Year1').val();
        var UID =@TempData["UID"];
         $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSalesDespatch", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'MonthYear': monthYear, 'UserId': UID},
                        cache: false,

                        datatype: "JSON",
                    success: function (list) {


                        $("#datatable4 > tbody").html("");
                        $('#datatable4').append('<tbody>');
                        for (var i = 0; i < list.length; i++)
                        {

                            $('#datatable4').append('<tr><td><input type="hidden" id="Sale_Dispatch_Id" name="Sale_Dispatch_Id" value=' + list[i].sale_Dispatch_Id + ' />' + (i + 1) + '</td><td>' + list[i].mineralNature + '</td><td>' + list[i].mineralGrade + '</td><td>' + list[i].natureofDispatch + '</td><td>' + list[i].registrationNo + '</td> <td>' + list[i].purchaserConsinee + '</td><td>' + list[i].domesticPurposes_Quantity + '</td><td>' + list[i].saleValue + '</td><td>' + list[i].country + '</td> <td>' + list[i].export_Quantity + '</td> <td>' + list[i].fobValue + '</td> <td class="noprint"> <a data-toggle="modal" data-target="#AddSaledespatch" class="btn-floating btn-outline-primary btn-sm" data-toggle="tooltip" data-placement="top" onclick="EditSalesDespache(' + list[i].sale_Dispatch_Id + ' ,' + list[i].mineralNatureId6 + ',' + list[i].mineralGradeId6 + ',\'' + list[i].natureofDispatch + '\',\'' + list[i].registrationNo + '\',\'' + list[i].purchaserConsinee + '\',\'' + list[i].domesticPurposes_Quantity + '\',\'' + list[i].saleValue + '\',\'' + list[i].country + '\',\'' + list[i].export_Quantity + '\',\'' + list[i].fobValue + '\')" title="Edit"><i class="icon-pencil-alt-solid"></i></a><a class="btn-floating btn-outline-danger btn-sm"data-toggle="tooltip" onclick="DeleteSaleDesp(' + list[i].sale_Dispatch_Id + ')" data-placement="top" title="Delete"><i class="icon-trash-alt-solid"></i></a>  </td> </tr>');

                        }
                        $('#datatable4').append('</tbody>');
                        var count2 = $('#datatable4 tr').length;
                        $('#GradewiseSaledespLenth').val(count2);

                        }


         });


    }

    function EditSalesDespache(id, MineralNatureId6, MineralGradeId6, NatureofDispatch, RegistrationNo, PurchaserConsinee, DomesticPurposes_Quantity, SaleValue, Country, Export_Quantity, FOBValue) {

        $("#saleDespS_Id").val(id);
        $('#objSalesDispatchModel_MineralNatureId6').val(MineralNatureId6);

        var MineralID = MineralNatureId6;
                if (MineralID == "") {
                    MineralID = 0;
                }

        $('#MineralGradeId6').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                            $.each(SList, function (i, item) {
                                $("#MineralGradeId6").append($("<option></option>").val(item.mineralGradeID).html(item.mineralGrade));
                            });
                            $('#MineralGradeId6').val(MineralGradeId6);
                        }


                    });
                }
                else {
                    swal("", "Select Mineral Form!", "warning");
        }
        $('#objSalesDispatchModel_NatureofDispatch').val(NatureofDispatch);
        if (NatureofDispatch != "Export") {
            $("#RegistrationNo").val(RegistrationNo);
            $("#objSalesDispatchModel_PurchaserConsinee option:contains('" + PurchaserConsinee + "')").attr('selected', 'selected');
            $("#DomesticPurposes_Quantity").val(DomesticPurposes_Quantity);
            $("#SaleValue").val(SaleValue);

            $("#Country").val('');
            $("#Export_Quantity").val('');
            $("#FOBValue").val('');
            $("#ForExport").hide();
            $("#ForDomestic").show();
        }
        else {
            $("#RegistrationNo").val('');
            $("#objSalesDispatchModel_PurchaserConsinee").val($("#objSalesDispatchModel_PurchaserConsinee option:first").val());
            $("#DomesticPurposes_Quantity").val('');
            $("#SaleValue").val('');
            $("#Country").val(Country);
            $("#Export_Quantity").val(Export_Quantity);
            $("#FOBValue").val(FOBValue);
            $("#ForExport").show();
            $("#ForDomestic").hide();
        }
        $("#btnConsignee").css("display", "none");
        $("#UpdConsignee").css("display", "block");

    }
    function DeleteSaleDesp(DID) {
        if (confirm("Are you sure to delete the record?")) {

            var ID = DID;
            var UID =@TempData["UID"];
            if (DID == 0 || DID == null) {
                swal("", "Something went wrong ..Please Try Again", "warning");
                return false
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteSaleDispatch", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                data: { 'DID': ID, 'UID': UID },
                cache: false,

                datatype: "JSON",
                success: function (result) {
                    if (result == 1) {
                        swal("","Record Deleted Successfully" , "success");
                        GetSalesDespatch();

                    }
                    else {
                        swal("", "Some error occred..Please Try again", "warning");
                        GetSalesDespatch();

                    }


                }


            });
        }
        else
        {
            return false;
        }
            }
</script>
@* End Add Sale / Despatch Portion*@

@*Add New Pulverization Added By Debaraj Swain 10-Jun-2021*@
<script>
    $(document).ready(function () {
        $("#ObjMineral_PulverizedModel_MineralNatureId7").change(function () {
            var MineralID = $('#ObjMineral_PulverizedModel_MineralNatureId7').val();
                if (MineralID == "") {
                    MineralID = 0;
                }

            $('#MineralGradeId7').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                        $.each(SList, function (i, item) {

                            $('#MineralGradeId7').append('<option value="' + item.mineralGradeID + '">' + item.mineralGrade + '</option>');

                        });

                        }


                        });
                        }
                        else {
                    swal("", "Select Mineral Form", "warning");
                        }

                        });

        $("#btnPulverized").click(function () {

            var MineralNatureId7 = $('#ObjMineral_PulverizedModel_MineralNatureId7 option:selected').val();
            var MineralGradeId7 = $('#MineralGradeId7 option:selected').val();
            var Total_Qty_Mineral_Pulverization = $('#Total_Qty_Mineral_Pulverization').val();
            var Pulverized_MeshSize = $('#Pulverized_MeshSize').val();
            var Pulverized_Qty = $('#Pulverized_Qty').val();
            var Produced_MeshSize = $('#Produced_MeshSize').val();
            var Produced_Qty = $('#Produced_Qty').val();
            var Produced_Ex_factory_Sale_value = $('#Produced_Ex_factory_Sale_value').val();
                        var monthYear = $('#Month_Year1').val();
                        var UID =@TempData["UID"];


            if (!DropDownValidation("ObjMineral_PulverizedModel_MineralNatureId7", "Mineral Form")) {
                return false;
            }
            if (!DropDownValidation("MineralGradeId7", "Mineral grade")) {
                return false;
            }
            if (!blankFieldValidation("Total_Qty_Mineral_Pulverization", "Total Qty Mineral Pulverization(in tonnes)")) {
                return false;
            }
            if (!blankFieldValidation("Pulverized_MeshSize", "Mesh Size")) {
                return false;
            }
            if (!blankFieldValidation("Pulverized_Qty", "Quantity (tonne)")) {
                return false;
            }
            if (!blankFieldValidation("Produced_MeshSize", "Mesh size")) {
                return false;
            }
            if (!blankFieldValidation("Produced_Qty", "Quantity (tonne)")) {
                return false;
            }
            if (!blankFieldValidation("Produced_Ex_factory_Sale_value", "Ex-factory Sale value (₹ )")) {
                return false;
            }

                        $.ajax({
                        type: "POST",
                        url: '@Url.Action("AddPulverization", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                            data: {
                                'MineralNatureId7': MineralNatureId7, 'MineralGradeId7': MineralGradeId7, 'Total_Qty_Mineral_Pulverization': Total_Qty_Mineral_Pulverization,'Pulverized_MeshSize': Pulverized_MeshSize, 'Pulverized_Qty': Pulverized_Qty, 'Produced_MeshSize': Produced_MeshSize, 'Produced_Qty': Produced_Qty, 'Produced_Ex_factory_Sale_value': Produced_Ex_factory_Sale_value, 'MonthYear': monthYear, 'UID': UID
                            },
                        cache: false,

                        datatype: "JSON",
                        success: function (result) {
                        if (result == 1)
                        {
                            swal("","Record Added Successfully" , "success");
                            GetGradewisePulverization();
                            $('#MineralPulverization').modal('toggle');
                        }

                        else
                        {
                            if (result == 2)
                            {
                                swal("", "Mineral form and Grade Already present for the month and year !", "warning");
                                GetGradewisePulverization();
                                $('#MineralPulverization').modal('toggle');
                            }
                            else {
                                swal("", "Some error occred..Please Try again !", "warning");
                                GetGradewisePulverization();
                                $('#MineralPulverization').modal('toggle');
                                 }
                        }


                        }


                        });
                        })
        $("#UpdbtnPulverized").click(function () {

            var ID = $("#Pulverized_Id").val();
            var MineralNatureId7 = $('#ObjMineral_PulverizedModel_MineralNatureId7 option:selected').val();
            var MineralGradeId7 = $('#MineralGradeId7 option:selected').val();
            var Total_Qty_Mineral_Pulverization = $('#Total_Qty_Mineral_Pulverization').val();
            var Pulverized_MeshSize = $('#Pulverized_MeshSize').val();
            var Pulverized_Qty = $('#Pulverized_Qty').val();
            var Produced_MeshSize = $('#Produced_MeshSize').val();
            var Produced_Qty = $('#Produced_Qty').val();
            var Produced_Ex_factory_Sale_value = $('#Produced_Ex_factory_Sale_value').val();
            var MonthYear = $('#Month_Year1').val();
            var UID =@TempData["UID"];
            if (!DropDownValidation("ObjMineral_PulverizedModel_MineralNatureId7", "Mineral Form")) {
                return false;
            }
            if (!DropDownValidation("MineralGradeId7", "Mineral grade")) {
                return false;
            }
            if (!blankFieldValidation("Total_Qty_Mineral_Pulverization", "Total Qty Mineral Pulverization(in tonnes)")) {
                return false;
            }
            if (!blankFieldValidation("Pulverized_MeshSize", "Mesh Size")) {
                return false;
            }
            if (!blankFieldValidation("Pulverized_Qty", "Quantity (tonne)")) {
                return false;
            }
            if (!blankFieldValidation("Produced_MeshSize", "Mesh size")) {
                return false;
            }
            if (!blankFieldValidation("Produced_Qty", "Quantity (tonne)")) {
                return false;
            }
            if (!blankFieldValidation("Produced_Ex_factory_Sale_value", "Ex-factory Sale value (₹ )")) {
                return false;
            }


                        $.ajax({
                        type: "POST",
                        url: '@Url.Action("UpdateMineral_Pulverized", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                            data: { 'id': ID, 'MineralNatureId7': MineralNatureId7, 'MineralGradeId7': MineralGradeId7, 'Total_Qty_Mineral_Pulverization': Total_Qty_Mineral_Pulverization, 'Pulverized_MeshSize': Pulverized_MeshSize, 'Pulverized_Qty': Pulverized_Qty, 'Produced_MeshSize': Produced_MeshSize, 'Produced_Qty': Produced_Qty, 'Produced_Ex_factory_Sale_value': Produced_Ex_factory_Sale_value, 'MonthYear': MonthYear, 'UID': UID},
                        cache: false,

                        datatype: "JSON",
                        success: function (result) {
                        if (result == 1)
                        {
                            swal("","Record Updated Successfully" , "success");
                            GetGradewisePulverization();
                            $('#MineralPulverization').modal('toggle');
                        }
                        else
                        {
                            swal("", "Some error occred..Please Try again !", "warning");
                            GetGradewisePulverization();
                            $('#MineralPulverization').modal('toggle');
                        }


                        }


                        });
                        })



    });
    function ClearPulverization() {
        $("#btnPulverized").css("display", "block");
        $("#UpdbtnPulverized").css("display", "none");
        $("#ObjMineral_PulverizedModel_MineralNatureId7").val($("#ObjMineral_PulverizedModel_MineralNatureId7 option:first").val());
        $('#MineralGradeId7').empty();
        $("#Total_Qty_Mineral_Pulverization").val('');
        $("#Pulverized_MeshSize").val('');
        $("#Pulverized_Qty").val('');
        $("#Produced_MeshSize").val('');
        $("#Produced_Qty").val('');
        $("#Produced_Ex_factory_Sale_value").val('');

    }
    function GetGradewisePulverization()
    {
        var monthYear = $('#Month_Year1').val();
        var UID =@TempData["UID"];
         $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetMineral_Pulverized", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'MonthYear': monthYear, 'UserId': UID},
                        cache: false,

                        datatype: "JSON",
                    success: function (list) {


                        $("#datatable1 > tbody").html("");
                        $('#datatable1').append('<tbody>');
                        for (var i = 0; i < list.length; i++)
                        {

                            $('#datatable1').append('<tr><td><input type="hidden" id="Pulverization_id" name="Pulverization_id" value=' + list[i].pulverization_id + ' />' + (i + 1) + '</td><td>' + list[i].mineralNature + '</td><td>' + list[i].mineralGrade + '</td><td>' + list[i].total_Qty_Mineral_Pulverization + '</td> <td>' + list[i].pulverized_MeshSize + '</td><td>' + list[i].pulverized_Qty + '</td><td>' + list[i].produced_MeshSize + '</td><td>' + list[i].produced_Qty + '</td><td>' + list[i].produced_Ex_factory_Sale_value + '</td> <td class="noprint"> <a data-toggle="modal" data-target="#MineralPulverization" class="btn-floating btn-outline-primary btn-sm" data-toggle="tooltip" data-placement="top" onclick="EditPUlverization(' + list[i].pulverization_id + ' ,' + list[i].mineralNatureId7 + ',' + list[i].mineralGradeId7 + ',\'' + list[i].total_Qty_Mineral_Pulverization + '\',\'' + list[i].pulverized_MeshSize + '\',\'' + list[i].pulverized_Qty + '\',\'' + list[i].produced_MeshSize + '\',\'' + list[i].produced_Qty + '\',\'' + list[i].produced_Ex_factory_Sale_value + '\')" title="Edit"><i class="icon-pencil-alt-solid"></i></a><a class="btn-floating btn-outline-danger btn-sm"data-toggle="tooltip" onclick="DeletePulveriZation(' + list[i].pulverization_id + ')" data-placement="top" title="Delete"><i class="icon-trash-alt-solid"></i></a>  </td> </tr>');

                        }
                        $('#datatable1').append('</tbody>');
                        var count3 = $('#datatable1 tr').length;
                        $('#GradewisePulvLenth').val(count3);
                        //$('#datatable1').DataTable();

                        }


         });


    }
    function EditPUlverization(id, MineralForm, MineralGrade, Total_Qty_Mineral_Pulverization, Pulverized_MeshSize, Pulverized_Qty, Produced_MeshSize, Produced_Qty, Produced_Ex_factory_Sale_value) {

        $("#Pulverized_Id").val(id);
        $('#ObjMineral_PulverizedModel_MineralNatureId7').val(MineralForm);
        var MineralID = MineralForm;
                if (MineralID == "") {
                    MineralID = 0;
                }

        $('#MineralGradeId7').empty();
                var v = "";

                if (MineralID != 0) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetGradeList", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                        data: { 'intMineralFormID': MineralID },
                        cache: false,

                        datatype: "JSON",
                        success: function (SList) {

                            $.each(SList, function (i, item) {
                                $("#MineralGradeId7").append($("<option></option>").val(item.mineralGradeID).html(item.mineralGrade));
                            });
                            $('#MineralGradeId7').val(MineralGrade);
                        }


                    });
                }
                else {
                    swal("", "Select Mineral Form !", "warning");
                }
        $("#Total_Qty_Mineral_Pulverization").val(Total_Qty_Mineral_Pulverization);
        $("#Pulverized_MeshSize").val(Pulverized_MeshSize);
        $("#Pulverized_Qty").val(Pulverized_Qty);
        $("#Produced_MeshSize").val(Produced_MeshSize);
        $("#Produced_Qty").val(Produced_Qty);
        $("#Produced_Ex_factory_Sale_value").val(Produced_Ex_factory_Sale_value);
        $("#btnPulverized").css("display", "none");
        $("#UpdbtnPulverized").css("display", "block");

    }
    function DeletePulveriZation(PID) {
        if (confirm("Are you sure to delete the record?")) {

            var ID = PID;
            var UID =@TempData["UID"];
            if (ID == 0 || ID == null) {
                swal("", "Something went wrong ..Please Try Again !", "warning");
                return false
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteeMineral_Pulverized", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
                data: { 'DID': ID, 'UID': UID },
                cache: false,

                datatype: "JSON",
                success: function (result) {
                    if (result == 1) {
                        swal("","Record Deleted Successfully" , "success");
                        GetGradewisePulverization();

                    }
                    else {
                        swal("", "Some error occred..Please Try again !", "warning");
                        GetGradewisePulverization();

                    }


                }


            });
        }
        else
        {
            return false;
        }
            }
</script>
@* End Add New Grade Wise Production Portion*@
<script>

    $(document).ready(function () {
        loadNavigation('MontlyReturnparttwo', 'glereturn', 'plmonret', 'tl', 'E-Return Non-coal', 'Monthly Return iron ore', ' ');
        $('.searchableselect').searchableselect();
        $('.shorting-lnk').click(function () {
            $('.shorting-lnk i').toggleClass('fa-sort-amount-up-alt fa-sort-amount-down-alt ');
        });
    });
</script>
<script>

    function onNatureSelection(e) {
        var Naturewidget = e.sender;
        if (Naturewidget.value() && Naturewidget.select() === -1) {
            Naturewidget.value(""); //reset widget
        }
    }
    $("#CExMineSaleYes").click(function () {
        $("#objDeduction_Amount1").val("N/A");
        $("#objDeduction_Amount2").val("N/A");
        $("#objDeduction_Amount3").val("N/A");
        $("#objDeduction_Amount4").val("N/A");
        $("#objDeduction_Amount5").val("N/A");
        $("#objDeduction_Amount6").val("N/A");
        $("#objDeduction_Amount7").val("N/A");
        $("#objDeduction_TotalAmount").val("N/A");

        $("#objDeduction_Remarks1").val("");
        $("#objDeduction_Remarks2").val("");
        $("#objDeduction_Remarks3").val("");
        $("#objDeduction_Remarks4").val("");
        $("#objDeduction_Remarks5").val("");
        $("#objDeduction_Remarks6").val("");
        $("#objDeduction_Remarks7").val("");
        $('#objDeduction_Amount1').attr('readonly', 'true');
        $('#objDeduction_Amount2').attr('readonly', 'true');
        $('#objDeduction_Amount3').attr('readonly', 'true');
        $('#objDeduction_Amount4').attr('readonly', 'true');
        $('#objDeduction_Amount5').attr('readonly', 'true');
        $('#objDeduction_Amount6').attr('readonly', 'true');
        $('#objDeduction_Amount7').attr('readonly', 'true');
        $("#objDeduction_TotalAmount").attr('readonly', 'true');

        $('#objDeduction_Remarks1').attr('readonly', 'true');
        $('#objDeduction_Remarks2').attr('readonly', 'true');
        $('#objDeduction_Remarks3').attr('readonly', 'true');
        $('#objDeduction_Remarks4').attr('readonly', 'true');
        $('#objDeduction_Remarks5').attr('readonly', 'true');
        $('#objDeduction_Remarks6').attr('readonly', 'true');
        $('#objDeduction_Remarks7').attr('readonly', 'true');

    });

    $("#ex_mineYes").click(function () {
        $("#objDeduction_Amount1").val("N/A");
        $("#objDeduction_Amount2").val("N/A");
        $("#objDeduction_Amount3").val("N/A");
        $("#objDeduction_Amount4").val("N/A");
        $("#objDeduction_Amount5").val("N/A");
        $("#objDeduction_Amount6").val("N/A");
        $("#objDeduction_Amount7").val("N/A");
        $("#objDeduction_TotalAmount").val("N/A");

        $("#objDeduction_Remarks1").val("");
        $("#objDeduction_Remarks2").val("");
        $("#objDeduction_Remarks3").val("");
        $("#objDeduction_Remarks4").val("");
        $("#objDeduction_Remarks5").val("");
        $("#objDeduction_Remarks6").val("");
        $("#objDeduction_Remarks7").val("");
        $('#objDeduction_Amount1').attr('readonly', 'true');
        $('#objDeduction_Amount2').attr('readonly', 'true');
        $('#objDeduction_Amount3').attr('readonly', 'true');
        $('#objDeduction_Amount4').attr('readonly', 'true');
        $('#objDeduction_Amount5').attr('readonly', 'true');
        $('#objDeduction_Amount6').attr('readonly', 'true');
        $('#objDeduction_Amount7').attr('readonly', 'true');
        $("#objDeduction_TotalAmount").attr('readonly', 'true');

        $('#objDeduction_Remarks1').attr('readonly', 'true');
        $('#objDeduction_Remarks2').attr('readonly', 'true');
        $('#objDeduction_Remarks3').attr('readonly', 'true');
        $('#objDeduction_Remarks4').attr('readonly', 'true');
        $('#objDeduction_Remarks5').attr('readonly', 'true');
        $('#objDeduction_Remarks6').attr('readonly', 'true');
        $('#objDeduction_Remarks7').attr('readonly', 'true');

    });

    $("#CExMineSaleNo").click(function () {
        if ($("input[name='ex_mineSale']:checked").val() == 'Yes') {
            $("#objDeduction_Amount1").val("N/A");
            $("#objDeduction_Amount2").val("N/A");
            $("#objDeduction_Amount3").val("N/A");
            $("#objDeduction_Amount4").val("N/A");
            $("#objDeduction_Amount5").val("N/A");
            $("#objDeduction_Amount6").val("N/A");
            $("#objDeduction_Amount7").val("N/A");
            $("#objDeduction_TotalAmount").val("N/A");

            $("#objDeduction_Remarks1").val("");
            $("#objDeduction_Remarks2").val("");
            $("#objDeduction_Remarks3").val("");
            $("#objDeduction_Remarks4").val("");
            $("#objDeduction_Remarks5").val("");
            $("#objDeduction_Remarks6").val("");
            $("#objDeduction_Remarks7").val("");
            $('#objDeduction_Amount1').attr('readonly', 'true');
            $('#objDeduction_Amount2').attr('readonly', 'true');
            $('#objDeduction_Amount3').attr('readonly', 'true');
            $('#objDeduction_Amount4').attr('readonly', 'true');
            $('#objDeduction_Amount5').attr('readonly', 'true');
            $('#objDeduction_Amount6').attr('readonly', 'true');
            $('#objDeduction_Amount7').attr('readonly', 'true');
            $("#objDeduction_TotalAmount").attr('readonly', 'true');

            $('#objDeduction_Remarks1').attr('readonly', 'true');
            $('#objDeduction_Remarks2').attr('readonly', 'true');
            $('#objDeduction_Remarks3').attr('readonly', 'true');
            $('#objDeduction_Remarks4').attr('readonly', 'true');
            $('#objDeduction_Remarks5').attr('readonly', 'true');
            $('#objDeduction_Remarks6').attr('readonly', 'true');
            $('#objDeduction_Remarks7').attr('readonly', 'true');
        }
        else {
            $("#objDeduction_Amount1").val("");
            $("#objDeduction_Amount2").val("");
            $("#objDeduction_Amount3").val("");
            $("#objDeduction_Amount4").val("");
            $("#objDeduction_Amount5").val("");
            $("#objDeduction_Amount6").val("");
            $("#objDeduction_Amount7").val("");
            $("#objDeduction_TotalAmount").val("");
            $('#objDeduction_Amount1').removeAttr("readonly");
            $('#objDeduction_Amount2').removeAttr("readonly");
            $('#objDeduction_Amount3').removeAttr("readonly");
            $('#objDeduction_Amount4').removeAttr("readonly");
            $('#objDeduction_Amount5').removeAttr("readonly");
            $('#objDeduction_Amount6').removeAttr("readonly");
            $('#objDeduction_Amount7').removeAttr("readonly");

            $('#objDeduction_Remarks1').removeAttr("readonly");
            $('#objDeduction_Remarks2').removeAttr("readonly");
            $('#objDeduction_Remarks3').removeAttr("readonly");
            $('#objDeduction_Remarks4').removeAttr("readonly");
            $('#objDeduction_Remarks5').removeAttr("readonly");
            $('#objDeduction_Remarks6').removeAttr("readonly");
            $('#objDeduction_Remarks7').removeAttr("readonly");
        }
    });

    $("#ex_mineNo").click(function () {
        if ($("input[name='CExMineSale']:checked").val() == 'Yes') {
            $("#objDeduction_Amount1").val("N/A");
            $("#objDeduction_Amount2").val("N/A");
            $("#objDeduction_Amount3").val("N/A");
            $("#objDeduction_Amount4").val("N/A");
            $("#objDeduction_Amount5").val("N/A");
            $("#objDeduction_Amount6").val("N/A");
            $("#objDeduction_Amount7").val("N/A");
            $("#objDeduction_TotalAmount").val("N/A");

            $("#objDeduction_Remarks1").val("");
            $("#objDeduction_Remarks2").val("");
            $("#objDeduction_Remarks3").val("");
            $("#objDeduction_Remarks4").val("");
            $("#objDeduction_Remarks5").val("");
            $("#objDeduction_Remarks6").val("");
            $("#objDeduction_Remarks7").val("");
            $('#objDeduction_Amount1').attr('readonly', 'true');
            $('#objDeduction_Amount2').attr('readonly', 'true');
            $('#objDeduction_Amount3').attr('readonly', 'true');
            $('#objDeduction_Amount4').attr('readonly', 'true');
            $('#objDeduction_Amount5').attr('readonly', 'true');
            $('#objDeduction_Amount6').attr('readonly', 'true');
            $('#objDeduction_Amount7').attr('readonly', 'true');
            $("#objDeduction_TotalAmount").attr('readonly', 'true');

            $('#objDeduction_Remarks1').attr('readonly', 'true');
            $('#objDeduction_Remarks2').attr('readonly', 'true');
            $('#objDeduction_Remarks3').attr('readonly', 'true');
            $('#objDeduction_Remarks4').attr('readonly', 'true');
            $('#objDeduction_Remarks5').attr('readonly', 'true');
            $('#objDeduction_Remarks6').attr('readonly', 'true');
            $('#objDeduction_Remarks7').attr('readonly', 'true');
        }
        else {
            $("#objDeduction_Amount1").val("");
            $("#objDeduction_Amount2").val("");
            $("#objDeduction_Amount3").val("");
            $("#objDeduction_Amount4").val("");
            $("#objDeduction_Amount5").val("");
            $("#objDeduction_Amount6").val("");
            $("#objDeduction_Amount7").val("");
            $("#objDeduction_TotalAmount").val("");
            $('#objDeduction_Amount1').removeAttr("readonly");
            $('#objDeduction_Amount2').removeAttr("readonly");
            $('#objDeduction_Amount3').removeAttr("readonly");
            $('#objDeduction_Amount4').removeAttr("readonly");
            $('#objDeduction_Amount5').removeAttr("readonly");
            $('#objDeduction_Amount6').removeAttr("readonly");
            $('#objDeduction_Amount7').removeAttr("readonly");

            $('#objDeduction_Remarks1').removeAttr("readonly");
            $('#objDeduction_Remarks2').removeAttr("readonly");
            $('#objDeduction_Remarks3').removeAttr("readonly");
            $('#objDeduction_Remarks4').removeAttr("readonly");
            $('#objDeduction_Remarks5').removeAttr("readonly");
            $('#objDeduction_Remarks6').removeAttr("readonly");
            $('#objDeduction_Remarks7').removeAttr("readonly");

        }
    });

</script>













<script>

    var MID;


  function OnSavepulverization(mode) {
        var flag = 0;
        var M_Y = $("#Month_Year").val();
        debugger;
        var COuntPulv = $('#GradewisePulvLenth').val();

        if (COuntPulv > 2) {
                    var Acp = $("#objDeduction_Averagecostofpulverization").val();
                    if (Acp == "") {
                        flag = 0;
                        swal("", "Enter Average cost of pulverization !", "warning");
                        $("#objDeduction_Averagecostofpulverization").focus();
                        return false;
                    }
                    else {
                        flag = 1;
                        $("#objDeduction_PFlag").val(2);

                        if (mode == 'Update') {
                            if (flag == 1) {
                                $("#objDeduction_PFlag").val(1);
                                return true;
                            }
                        }
                        else {
                            if (flag == 1) {
                                return true;
                            }
                        }
                    }
                }
                else {
            swal("", "Please Entaer Pulverization !", "warning");
                    return false;
                }

    }



  function OnSubmit() {

        var M_Id = $("#objProduction_MineralId1").val();
        if (M_Id == "") {
            swal("", "There is no Mineral !", "warning");
            return false;
        }
        else {

            var MY = $("#Month_Year").val();
            var OpeningStockOCW = $("#objProduction_OpeningStockOCW").val();
            var OpeningStockUW = $("#objProduction_OpeningStockUW").val();
            var OpeningStockDW = $("#objProduction_OpeningStockDW").val();

            var productionOCW = $("#objProduction_productionOCW").val();
            var productionUW = $("#objProduction_productionUW").val();
            var productionDW = $("#objProduction_productionDW").val();

            var closingOCW = $("#objProduction_closingOCW").val();
            var closingUW = $("#objProduction_closingUW").val();
            var closingDW = $("#objProduction_closingDW").val();

            if ($("#Month_Year").val() == "") {
                $("#Month_Year").focus();
                swal("", "Please Select Month_Year !", "warning");
                return false;
            }
            else if ($("#objProduction_MineralId1").val() == "") {
                $("#objProduction_MineralId1").focus();
                swal("", "Please Select Minera !", "warning");
                return false;
            }
            else if (OpeningStockOCW == "" && OpeningStockUW == "" && OpeningStockDW == "") {
                swal("", "Atleast one category should be filled in Opening Stock of ROM ore at Mine-head !", "warning");
                return false;
            }
            else if (productionOCW == "" && productionUW == "" && productionDW == "") {
                swal("", "Atleast one category should be filled in Production and Stocks of ROM ore at Mine-head !", "warning");
                return false;
            }
            else if (closingOCW == "" && closingUW == "" && closingDW == "") {
                swal("", "Atleast one category should be filled in Closing Stock of ROM ore at Mine-head !", "warning");
                return false;
            }
            else {
                var COuntRom = $('#GradewiseRomLenth').val();
                var COuntProd = $('#GradewiseProdLenth').val();
                var COuntStock = $('#GradewiseSaledespLenth').val();
                if (COuntStock > 2) {

                    if (COuntProd > 1) {

                        if ('@ViewBag.Mineral' == "Iron ore" || '@ViewBag.Mineral' == "Chromite") {
                                if (COuntRom <= 1) {                                   
                                    swal("", "Grade-wise ROM ore despatches from mine head should be filled !", "warning");
                                return false;
                            }
                        }

                        if (confirm("Are you sure to final submission ?")) {

                            if (confirm("Before submit Form F1 you need to apply your Digital Signature. Are you confirmed to Submit Form F1??")) {


                                $("#objReason_Inc_Dec_FinalSubmitFlag").val(1);
                                $("#FormF1Part2").submit();
                            }

                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        swal("", "Grade-wise Production, Dispatches, Stocks and Ex-mine prices should be filled !", "warning");
                        return false;
                    }

                }
                else {
                    swal("", "Sales/ Dispatches effected for Domestic Purposes and for Exports should be filled !", "warning");
                    return false;
                }
            }

}
}

function GetOpeningStock() {

    var selectedMonthYear = $("#Month_Year").val();
    var M_Id = $("#objProduction_MineralId1").val();
    $.ajax({
        type: "GET",
        url: '@Url.Action("GetOpeningStock", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
        data: {
            MineralId: M_Id, MonthYear: selectedMonthYear
        },
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (result) {


            if (result.objProduction.OpeningStockOCW != "" && result.objProduction.OpeningStockOCW > 0 && result.objProduction.OpeningStockOCW != null) {
                $("#objProduction_OpeningStockOCW").val(result.objProduction.OpeningStockOCW);
                $("#objProduction_OpeningStockOCW").attr("readonly", "readonly");
            }
            else {
                $("#objProduction_OpeningStockOCW").val();
                $("#objProduction_OpeningStockOCW").removeAttr("readonly");

            }

            if (result.objProduction.OpeningStockUW != "" && result.objProduction.OpeningStockUW > 0 && result.objProduction.OpeningStockUW != null) {
                $('#objProduction_OpeningStockUW').val(result.objProduction.OpeningStockUW);
                $("#objProduction_OpeningStockUW").attr("readonly", "readonly");
            }
            else {
                $('#objProduction_OpeningStockUW').val();
                $("#objProduction_OpeningStockUW").removeAttr("readonly");
            }

            if (result.objProduction.OpeningStockDW != "" && result.objProduction.OpeningStockDW > 0 && result.objProduction.OpeningStockDW != null) {
                $('#objProduction_OpeningStockDW').val(result.objProduction.OpeningStockDW);
                $("#objProduction_OpeningStockDW").attr("readonly", "readonly");
            }
            else {
                $('#objProduction_OpeningStockDW').val();
                $("#objProduction_OpeningStockDW").removeAttr("readonly");
            }


            if (result.objProduction.productionOCW != "" && result.objProduction.productionOCW > 0 && result.objProduction.productionOCW != null) {
                $("#objProduction_productionOCW").val(result.objProduction.productionOCW);

            }
            else {
                $("#objProduction_productionOCW").val();


            }




        }
    });
}

function GetSaleQtyToConsignee() {

    var MG_Id = $("#MineralGradeId6").val();
    var PC = $("#PurchaserConsinee").val();
    var M_Y = $("#Month_Year").val();


    if (MG_Id != "" && PC != "") {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSaleQtyToConsignee", "eReturnProcess")',
            data: {
                MineralGradeId: MG_Id, PurchaserConsignee: PC, MonthYear: M_Y
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#DomesticPurposes_Quantity").val(result.toFixed(2)).change();

            }
        });
    }
    else if (MG_Id == "") {
        swal("", "Select Mineral Grade !", "warning");
    }
    else if (PC == "") {
        swal("", "Select Purchaser Consinee !", "warning");
    }
}

function GetDispatche() {
    var M_Id = $("#objProduction_MineralId1").val();
    var MN_Id = $("#MineralNatureId5").val();
    var G_Id = $("#MineralGradeId5").val();
    var M_Y = $("#Month_Year").val();
    $.ajax({
        type: "GET",
        url: '@Url.Action("GetDespatches_MineHead", "eReturnProcess")',
            data: {
                MineralId: M_Id,
                MineralNatureId: MN_Id,
                MineralGradeId: G_Id,
                MonthYear: M_Y
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {

                $("#Dispatch_MineHead").val(result.Dispatche.toFixed(2)).change();
                if (result.OpeningStock != null && result.OpeningStock != "") {
                    $("#OpeningStock_MineHead").val(result.OpeningStock.toFixed(2));
                    $("#OpeningStock_MineHead").trigger("change");
                    $("#OpeningStock_MineHead").attr("readonly", "readonly");
                }
                else {
                    $("#OpeningStock_MineHead").val(0);
                    $("#OpeningStock_MineHead").removeAttr("readonly");
                }

                if (result.DailyProductQty != null && result.DailyProductQty != "") {
                    $("#Production").val(result.DailyProductQty.toFixed(2));
                    $("#Production").trigger("change");
                }
                else {
                    $("#Production").val(0);
                }
            }
        });
    }

    function OnSaveProduction() {

        var OpeningStockOCW = $("#objProduction_OpeningStockOCW").val();
        var OpeningStockUW = $("#objProduction_OpeningStockUW").val();
        var OpeningStockDW = $("#objProduction_OpeningStockDW").val();

        var productionOCW = $("#objProduction_productionOCW").val();
        var productionUW = $("#objProduction_productionUW").val();
        var productionDW = $("#objProduction_productionDW").val();

        var closingOCW = $("#objProduction_closingOCW").val();
        var closingUW = $("#objProduction_closingUW").val();
        var closingDW = $("#objProduction_closingDW").val();

        var selectedVal = $('input[name=TypeofOreProduced]:checked').val();
        $("#objProduction_TypeofOreProduced").val(selectedVal);

        if ($("#Month_Year").val() == "") {
            $("#Month_Year").focus();
            swal("", "Please Select Month_Year !", "warning");
            return false;
        }
        else if ($("#objProduction_MineralId1").val() == "") {
            $("#objProduction_MineralId1").focus();
            swal("", "Please Select Mineral !", "warning");
            return false;
        }
        else if (OpeningStockOCW == "" && OpeningStockUW == "" && OpeningStockDW == "") {
            swal("", "Atleast one category should be filled in Opening Stock of ROM ore at Mine-head !", "warning");
            return false;
        }
        else if (productionOCW == "" && productionUW == "" && productionDW == "") {
            swal("", "Atleast one category should be filled in Production and Stocks of ROM ore at Mine-head !", "warning");
            return false;
        }
        else if (closingOCW == "" && closingUW == "" && closingDW == "") {
            swal("", "Atleast one category should be filled in Closing Stock of ROM ore at Mine-head !", "warning");
            return false;
        }
        else {
            $("#objProduction_Flag1").val(2);
            return true;
        }
    }

    function OnUpdateProduction() {

        var OpeningStockOCW = $("#objProduction_OpeningStockOCW").val();
        var OpeningStockUW = $("#objProduction_OpeningStockUW").val();
        var OpeningStockDW = $("#objProduction_OpeningStockDW").val();

        var productionOCW = $("#objProduction_productionOCW").val();
        var productionUW = $("#objProduction_productionUW").val();
        var productionDW = $("#objProduction_productionDW").val();

        var closingOCW = $("#objProduction_closingOCW").val();
        var closingUW = $("#objProduction_closingUW").val();
        var closingDW = $("#objProduction_closingDW").val();

        var selectedVal = $('input[name=TypeofOreProduced]:checked').val();
        $("#objProduction_TypeofOreProduced").val(selectedVal);

        if ($("#Month_Year").val() == "") {
            $("#Month_Year").focus();
            swal("", "Please Select Month_Year !", "warning");
            return false;
        }
        else if ($("#objProduction_MineralId1").val() == "") {
            $("#objProduction_MineralId1").focus();
            swal("", "Please Select Mineral !", "warning");
            return false;
        }
        else if (OpeningStockOCW == "" && OpeningStockUW == "" && OpeningStockDW == "") {
            swal("", "Atleast one category should be filled in Opening Stock of ROM ore at Mine-head !", "warning");
            return false;
        }
        else if (productionOCW == "" && productionUW == "" && productionDW == "") {
            swal("", "Atleast one category should be filled in Production and Stocks of ROM ore at Mine-head !", "warning");
            return false;
        }
        else if (closingOCW == "" && closingUW == "" && closingDW == "") {
            swal("", "Atleast one category should be filled in Closing Stock of ROM ore at Mine-head !", "warning");
            return false;
        }
        else {
            $("#objProduction_Flag1").val(1);
            return true;
        }
    }

    $(document).ready(function () {


        ViewPart2Return();
        ViewPart2Return2();
        ViewPart2Return3();
        ViewPart2Returnpulverization();
        GetOpeningStock();

    });


    function ViewPart2Return() {

        var selectedMonthYear = $("#Month_Year").val();
        var SelectMineral = $("#objProduction_MineralId1").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetProduction", "eReturnProcess",new { Area = "eReturn_NonCoal" })',

                    data: { MonthYear: selectedMonthYear },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    beforeSend: function () {
                        var varValue = 1;
                    },
            success: function (data) {

                if (data.objProduction.typeOfProduction_Id != null && data.objProduction.typeOfProduction_Id != "") {

                            $("#objProduction_MineralId1").val(data.objProduction.mineralId1);
                            $('#objProduction_TypeOfProduction_Id').val(data.objProduction.typeOfProduction_Id);
                            $('#TypeofOreProduced').val(data.objProduction.typeofOreProduced);

                            $('#objProduction_OpeningStockOCW').val(data.objProduction.openingStockOCW).trigger('change');
                            $('#objProduction_productionOCW').val(data.objProduction.productionOCW).trigger('change');
                            $('#objProduction_closingOCW').val(data.objProduction.closingOCW).trigger('change');

                            $('#objProduction_OpeningStockUW').val(data.objProduction.openingStockUW).trigger('change');
                            $('#objProduction_productionUW').val(data.objProduction.productionUW).trigger('change');
                            $('#objProduction_closingUW').val(data.objProduction.closingUW).trigger('change');

                            $('#objProduction_OpeningStockDW').val(data.objProduction.openingStockDW).trigger('change');
                            $('#objProduction_productionDW').val(data.objProduction.productionDW).trigger('change');
                            $('#objProduction_closingDW').val(data.objProduction.closingDW).trigger('change');

                            MID = $("#objProduction_MineralId1").val();

                            var $radios = $('input:radio[name=TypeofOreProduced]');
                            if (data.objProduction.typeofOreProduced == "Hematite") {
                                $radios.filter('[value=Hematite]').prop('checked', true);
                            }
                            else {
                                $radios.filter('[value=Magnetite]').prop('checked', true);
                            }
                        }
                        else {
                        }
                    }
                });
            }
</script>
<script>
    function OnSaveDeductions() {



        var selectedVal_CEX = $('input[name=CExMineSale]:checked').val();
        $("#objDeduction_CExMineSale").val(selectedVal_CEX);

        var selectedVal_EX = $('input[name=ex_mineSale]:checked').val();
        $("#objDeduction_ex_mineSale").val(selectedVal_EX);

        $("#objDeduction_Flag2").val(2);
        return true;

    }

    function OnUpdateDeductions() {
        var selectedVal_CEX = $('input[name=CExMineSale]:checked').val();
        $("#objDeduction_CExMineSale").val(selectedVal_CEX);

        var selectedVal_EX = $('input[name=ex_mineSale]:checked').val();
        $("#objDeduction_ex_mineSale").val(selectedVal_EX);

        $("#objDeduction_Flag2").val(1);
        return true;
    }

    function ViewPart2Returnpulverization() {
        var selectedMonthYear = $("#Month_Year").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("Getpulverization", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
            data: { MonthYear: selectedMonthYear },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                var varValue = 1;
            },
            success: function (data) {
                if (data.objDeduction.average_Id != null && data.objDeduction.average_Id != "") {
                    $("#btnUpdatepulverization").show();
                    $("#btnSavepulverization").hide();
                    $('#objDeduction_Average_Id').val(data.objDeduction.average_Id);
                    $('#objDeduction_Averagecostofpulverization').val(data.objDeduction.averagecostofpulverization);
                }
                else { $("#btnUpdatepulverization").hide(); }
            }
        });
    }


    function ViewPart2Return2() {

        var selectedMonthYear = $("#Month_Year").val();
        var Mineralid = $("#objProduction_MineralId1").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDetails_of_deductions", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
            data: { MonthYear: selectedMonthYear, MineralId: Mineralid },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                var varValue = 1;
            },
            success: function (data) {

                if (data.objDeduction.deductionMade_Id != null && data.objDeduction.deductionMade_Id != "") {
                    $('#objDeduction_DeductionMade_Id').val(data.objDeduction.deductionMade_Id);

                    var $radios = $('input:radio[name=CExMineSale]');
                    if (data.objDeduction.cExMineSale == "Yes") {
                        $('input:radio[id=CExMineSaleYes]').prop('checked', true);
                    }
                    else {
                        $('input:radio[id=CExMineSaleNo]').prop('checked', true);
                    }

                    var $radios = $('input:radio[name=ex_mineSale]');
                    if (data.objDeduction.ex_mineSale == "Yes") {
                        $('input:radio[id=ex_mineYes]').prop('checked', true);
                    }
                    else {
                        $('input:radio[id=ex_mineNo]').prop('checked', true);
                    }

                    $('#objDeduction_Deduction_claimedType1').val(data.objDeduction.deduction_claimedType1);
                    $('#objDeduction_Amount1').val(data.objDeduction.amount1);
                    $('#objDeduction_Remarks1').val(data.objDeduction.remarks1);

                    $('#objDeduction_Deduction_claimedType2').val(data.objDeduction.deduction_claimedType2);
                    $('#objDeduction_Amount2').val(data.objDeduction.amount2);
                    $('#objDeduction_Remarks2').val(data.objDeduction.remarks2);

                    $('#objDeduction_Deduction_claimedType3').val(data.objDeduction.deduction_claimedType3);
                    $('#objDeduction_Amount3').val(data.objDeduction.amount3);
                    $('#objDeduction_Remarks3').val(data.objDeduction.remarks3);

                    $('#objDeduction_Deduction_claimedType4').val(data.objDeduction.deduction_claimedType4);
                    $('#objDeduction_Amount4').val(data.objDeduction.amount4);
                    $('#objDeduction_Remarks4').val(data.objDeduction.remarks4);

                    $('#objDeduction_Deduction_claimedType5').val(data.objDeduction.deduction_claimedType5);
                    $('#objDeduction_Amount5').val(data.objDeduction.amount5);
                    $('#objDeduction_Remarks5').val(data.objDeduction.remarks5);

                    $('#objDeduction_Deduction_claimedType6').val(data.objDeduction.deduction_claimedType6);
                    $('#objDeduction_Amount6').val(data.objDeduction.amount6);
                    $('#objDeduction_Remarks6').val(data.objDeduction.remarks6);

                    $('#objDeduction_Deduction_claimedType7').val(data.objDeduction.deduction_claimedType7);
                    $('#objDeduction_Amount7').val(data.objDeduction.amount7);
                    $('#objDeduction_Remarks7').val(data.objDeduction.remarks7);

                    $('#objDeduction_TotalAmount').val(data.objDeduction.totalAmount);
                }
                else {
                }
            }
        });
    }


</script>
<script>

    function OnSaveReason_Inc_Dec(e) {

        var Pulverization_Result = true;
        var Production_Result = OnSaveProduction();
        var COuntRom = $('#GradewiseRomLenth').val();
        var COuntProd = $('#GradewiseProdLenth').val();
        var COuntStock = $('#GradewiseSaledespLenth').val();

        if (Production_Result) {

             if ('@ViewBag.Mineral' != "Iron ore" && '@ViewBag.Mineral' != "Manganese ore" && '@ViewBag.Mineral' != "Bauxite" && '@ViewBag.Mineral' != "Chromite") {
                 Pulverization_Result = OnSavepulverization('Save');
                 if (Pulverization_Result == false)
                 {
                     return false;
                 }
            }
            else {
                if (COuntRom > 1) {

                }
                else {
                    swal("", "Grade-wise ROM ore despatches from mine head should be filled !", "warning");
                    return false;



                }
            }


            var Deduction_Result = OnSaveDeductions();

            if (Production_Result == true && Deduction_Result == true) {
                if (COuntProd > 1 ) {
                    if (COuntStock > 2) {
                        if ($("#objReason_Inc_Dec_Month_Year").val() == "") {
                            $("#objReason_Inc_Dec_Month_Year").focus();      
                            swal("", "Please Select Month_Year !", "warning");
                            return false;
                        }
                        else if ($("#objReason_Inc_Dec_certify").prop('checked') == false) {
                            swal("", "Please Checked Certify Statement !", "warning");
                            return false;

                        }
                        else {
                            $("#objReason_Inc_Dec_Flag3").val(2);
                            $("#FormF1Part2").submit();
                        }
                    }
                    else {
                        swal("", "Sales/ Dispatches effected for Domestic Purposes and for Exports should be filled !", "warning");
                        return false;
                         }

                }
                else {
                    swal("", "Grade-wise Production, Dispatches, Stocks and Ex-mine prices should be filled !", "warning");
                    return false;
                }
            }
            else {
                return false;
            }
        }
        else {
            return false;
        }
    }


    function OnUpdateReason_Inc_Dec() {

        var Pulverization_Result = true;
        var Production_Result = OnUpdateProduction();
        var COuntRom = $('#GradewiseRomLenth').val();
        var COuntProd = $('#GradewiseProdLenth').val();
        var COuntStock = $('#GradewiseSaledespLenth').val();
        if (Production_Result) {
            if ('@ViewBag.Mineral' != "Iron ore" && '@ViewBag.Mineral' != "Manganese ore" && '@ViewBag.Mineral' != "Bauxite" && '@ViewBag.Mineral' != "Chromite") {
                Pulverization_Result = OnSavepulverization('Update');
            }
            else {
                if (COuntRom > 1) {

                }
                else {
                    swal("", "Grade-wise ROM ore despatches from mine head should be filled !", "warning");
                    return false;
                }
            }

            var Deduction_Result = OnUpdateDeductions();

            if (Production_Result == true && Deduction_Result == true) {
                if (COuntProd > 1) {

                        if (COuntStock > 2) {
                        if ($("#objReason_Inc_Dec_certify").prop('checked') == false) {
                            swal("", "Please Checked Certify Statement !", "warning");
                            return false;
                        }
                        else {
                            $("#objReason_Inc_Dec_Flag3").val(1);
                            $("#FormF1Part2").submit();
                        }
                    }
                    else {
                            swal("", "Sales/ Dispatches effected for Domestic Purposes and for Exports should be filled !", "warning");
                        return false;
                    }

                }
                else {
                    swal("", "Grade-wise Production, Dispatches, Stocks and Ex-mine prices should be filled !", "warning");
                    return false;
                }
            }
            else {
                return false;
            }
        }
        else {
            return false;
        }
    }

    function ViewPart2Return3() {
        var selectedMonthYear = $("#Month_Year").val();
        var Mid = $("#MineralId1").val();
        if (Mid == null) {
            Mid = $("#objProduction_MineralId1").val();
        }
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetReason_Inc_Dec", "eReturnProcess", new { Area = "eReturn_NonCoal" })',
            data: { MonthYear: selectedMonthYear, MineralId: Mid },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                var varValue = 1;
            },
            success: function (data) {
                if (data.objReason_Inc_Dec.reason_Inc_Dec_Id != null && data.objReason_Inc_Dec.reason_Inc_Dec_Id != "") {
                    $("#btnUpdateReason_Inc_Dec").show();
                    $("#btnFinalSubmit").show();

                    $("#btnReasonForInDcSave").hide();
                    $('#objReason_Inc_Dec_Reason_Inc_Dec_Id').val(data.objReason_Inc_Dec.reason_Inc_Dec_Id);
                    $('#objReason_Inc_Dec_productionIncrDecResion').val(data.objReason_Inc_Dec.productionIncrDecResion);
                    $('#objReason_Inc_Dec_ex_minepriceIncrDecResion').val(data.objReason_Inc_Dec.ex_minepriceIncrDecResion);
                    if (data.objReason_Inc_Dec.certify == true) {
                        $("#objReason_Inc_Dec_certify").prop('checked', true);
                    }
                }
                else {
                    $("#btnUpdateReason_Inc_Dec").hide();
                    $("#btnFinalSubmit").hide();
                }
            }
        });
    }
</script>
<script>
    function GetGrade() {
        return {
            MineralNatureId: $("#MineralNatureId").val()
        };
    }
    function GetGrade1() {
        return {

            MineralNatureId: $("#MineralNatureId5").val()
        };
    }
    function GetGrade2() {
        return {

            MineralNatureId: $("#MineralNatureId6").val()
        };
    }
    function GetGrade3() {
        return {

            MineralNatureId: $("#MineralNatureId7").val()
        };
    }
    function GetGrade4() {
        return {
            MineralNatureId: $("#MineralNatureId8").val()
        };
    }
    function GetMineralId() {

        var Mid = $("#MineralId1").val();
        if (Mid == null) {
            Mid = $("#objProduction_MineralId1").val();
        }
        return {
            MineralId: Mid
        };
    }
    $(document).ready(function () {
        $("#objProduction_closingOCW").focusout(function () {
            var OB = $("#objProduction_OpeningStockOCW").val();
            if (OB == "") {
                OB = 0;
            }
            var PRD = $("#objProduction_productionOCW ").val();
            if (PRD == "") {
                PRD = 0;
            }
            var CB = parseFloat(OB) + parseFloat(PRD);
            var CS = $("#objProduction_closingOCW").val();
            if (CS > CB) {
                swal("", "Closing stock should be less then or equal to Opening Stock + Production !", "warning");
                $("#objProduction_closingOCW").val(0);
            }

        })

    });
    $(document).ready(function () {

        $("#objProduction_closingUW").focusout(function () {
            var OB = $("#objProduction_OpeningStockUW ").val();
            if (OB == "") {
                OB = 0;
            }
            var PRD = $("#objProduction_productionUW").val();
            if (PRD == "") {
                PRD = 0;
            }
            var CB = parseFloat(OB) + parseFloat(PRD);
            var CS = $("#objProduction_closingUW").val();
            if (CS > CB) {
                swal("", "Closing stock should be less then or equal to Opening Stock + Production  !", "warning");
                $("#objProduction_closingUW").val(0);
            }
        })

    });
    $(document).ready(function () {

        $("#objProduction_closingDW").focusout(function () {
            var OB = $("#objProduction_OpeningStockDW").val();
            if (OB == "") {
                OB = 0;
            }
            var PRD = $("#objProduction_productionDW").val();
            if (PRD == "") {
                PRD = 0;
            }
            var CB = parseFloat(OB) + parseFloat(PRD);

            var CS = $("#objProduction_closingDW").val();
            if (CS > CB) {
                swal("", "Closing stock should be less then or equal to Opening Stock + Production  !", "warning");
                $("#objProduction_closingDW").val(0);
            }
        })

    });

    //$("#MinePinCode").keydown(function (e) {
    function deduction_KeyDown(e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    }

    function TextChange() {

        var T = $("#objDeduction_TotalAmount").val();
        if (T == "") {
            T = 0;
        }
        T = 0;
        for (var i = 1 ; i <= 7; i++) {
            var amt = "#objDeduction_Amount" + i;
            if ($(amt).val() != "") {
                T = Number(T) + Number($(amt).val());
            }
        }
        if (T > 0) { $("#objDeduction_TotalAmount").val(T); }
        else { $("#objDeduction_TotalAmount").val(""); }
    }

    function OpeningStock_MineHead_Onchange(event) {
        if (event.shiftKey == true) {
            event.preventDefault();
        }

        if ((event.keyCode >= 48 && event.keyCode <= 57) ||
            (event.keyCode >= 96 && event.keyCode <= 105) ||
            event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
            event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {

            var val = $("#OpeningStock_MineHead").val();
            if (isNaN(val)) {
                val = val.replace(/[^0-9\.]/g, '');
                if (val.split('.').length > 2) {
                    val = 0;
                    $("#OpeningStock_MineHead").val(val);
                    event.preventDefault();
                    return false;
                }
            }
        }
        else {
            event.preventDefault();
        }

        return true;
    }

    function Production_Onchange(event) {
        if (event.shiftKey == true) {
            event.preventDefault();
        }

        if ((event.keyCode >= 48 && event.keyCode <= 57) ||
            (event.keyCode >= 96 && event.keyCode <= 105) ||
            event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
            event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {

            var val = $("#OpeningStock_MineHead").val();
            if (isNaN(val)) {
                val = val.replace(/[^0-9\.]/g, '');
                if (val.split('.').length > 2) {
                    val = 0;
                    $("#OpeningStock_MineHead").val(val);
                    event.preventDefault();
                    return false;
                }
            }
        }
        else {
            event.preventDefault();
        }

        return true;
    }

    $(document).ready(function () {
        $("#GradeWiseProduction").focusout(function () {
            var OB = $("#OpStockAtMineHead_GradeWise").val();
            if (OB == "") {
                OB = 0;
            }
            var PRD = $("#GradeWiseProduction").val();
            if (PRD == "") {
                PRD = 0;
            }
            var CB = OB - PRD;
            $("#GradeWiseClosingStock").val(CB.toFixed(2));
        })

    });
    function OnMineralGradeIdchange() {
        var MGradeID = $("#MineralGradeId").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDispacheMineHead", "eReturnProcess")',
            data: {
                MineralGradeID: MGradeID
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.DispacheMineHead != null) {
                    $("#DispacheMineHead").val(result.DispacheMineHead.toFixed(2));
                }
                else
                    $("#DispacheMineHead").val("");
            }
        });
    }
    function OnMineralGradeIdchange1() {
        var MGradeID = $("#MineralGradeId1").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDispacheMineHead", "eReturnProcess")',
            data: {
                MineralGradeID: MGradeID
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.DispacheMineHead != null) {
                    $("#DispacheMineHead1").val(result.DispacheMineHead.toFixed(2));
                }
                else
                    $("#DispacheMineHead1").val("");
            }
        });
    }
</script>




















<script>
    var Count_GradeWiseGrid = 0;
    function onDataBound() {

        var data = this.dataSource.view();

        if (data.length > 0) {
            Count_GradeWiseGrid = 1;
        }
        else {
            Count_GradeWiseGrid = 0;
        }

        var crt = '@(ViewBag.iscreate)';
        var edt = '@(ViewBag.isedit)';
        var dlt = '@(ViewBag.isdelete)';
        if (crt == "False") {

            $("#Grade_WiseGrid").find('.k-grid-add').hide();
        }
        if (crt == "True") {
            $("#Grade_WiseGrid").find('.k-grid-add').show();
        }

        if (edt == "False") {

            $("#Grade_WiseGrid").find('.k-grid-edit').hide();
        }
        if (edt == "True") {
            $("#Grade_WiseGrid").find('.k-grid-edit').show();
        }

        if (dlt == "False") {

            $("#Grade_WiseGrid").find('.k-grid-delete').hide();
        }
        if (dlt == "True") {
            $("#Grade_WiseGrid").find('.k-grid-delete').show();
        }
    }


    function OnRefreshGrid() {
        $("#Grade_WiseGrid").data("kendoGrid").dataSource.read();
    }

    function onRequestEnd(e) {
        var MasterTableParameter = "Grade-wise Production, Dispatches, Stocks and Ex-mine prices";
        if (e.response.Data[0] == 2) {
            fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            //e.preventDefault();
            OnRefreshGrid();
        }
        else {
            if (e.type == "create" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            }
            else if (e.type == "update" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Update", MasterTableParameter);

            }
            else if (e.type == "destroy" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Delete", MasterTableParameter);
            }
            if (e.type != "read") {
                OnRefreshGrid();
            }
        }
        $('.k-grid-content').append('<div class="k-grid-content-expander" style="width: 1340px;"></div>');
    }
    var exportFlag = false;
    var columnToHide = 0;
    function funcPdfExport(e) {
        $("thead tr th a.k-link").removeAttr("href");
        var grid = $("#Grade_WiseGrid").data("kendoGrid");
        for (i = 0; i <= grid.columns.length - 1; i++) {
            if (grid.columns[i].command != null) {
                if (!exportFlag) {
                    grid.hideColumn(i);
                    columnToHide = i;
                    e.preventDefault();
                    exportFlag = true;
                    grid.saveAsPDF();
                    setTimeout(function () {
                        exportFlag = false;
                    })
                }
            }
        }
    }
    function insertPopupCaption(e) {
        if (e.model.isNew()) {
            $('.k-window-title').text("Add Grade Wise Production,Dispatches");
            $('.k-grid-update').text("Submit");
            $('.k-grid-cancel').text("Cancel");
        }
        else {
            $('.k-window-title').text("Edit Grade Wise Production,Dispatches");
            $('.k-grid-update').text("Update");
            $('.k-grid-cancel').text("Cancel");
        }
    }

    function GetData() {
        var MY = $("#Month_Year").val();
        if (MY == null && MY == "") {
            swal("", "Please Select Month Year !", "warning");
            return false;
        }
        else {
            return {
                MonthYear: MY
            };
        }
    }

    function GetDataSalesDispatch() {
        var MY = $("#Month_Year").val();
        var Mid = $("#objProduction_MineralId1").val();
        if (MY == null && MY == "") {
            swal("", "Please Select Month Year !", "warning");
            return false;
        }
        if (Mid == null && Mid == "") {
            swal("", "Please Select Mineral !", "warning");
            return false;
        }
        else {
            return {
                MonthYear: MY, MineralId: Mid
            };
        }
    }

    function GetDataMineral_Pulverization() {

        var MY = $("#Month_Year").val();
        if (MY == null && MY == "") {
            swal("", "Please Select Month Year !", "warning");
            return false;
        }
        else {
            return {
                MonthYear: MY
            };
        }
    }

    function GetDataGradeWiseRom() {

        var MY = $("#Month_Year").val();
        if (MY == null && MY == "") {
            swal("", "Please Select Month Year !", "warning");
            return false;
        }
        else {
            return {
                MonthYear: MY
            };
        }
    }
    function GetNature2() {
        return {
            MineralId: $("#objProduction_MineralId1").val()
        };
    }


    function GetDataByParameter() {
        $("#Grade_WiseGrid").data("kendoGrid").dataSource.read();
    }
    function GetDataByParameterSalesDispatch() {
        $("#SaleDispatchGrid").data("kendoGrid").dataSource.read();
    }

    function GetDataByParameterMineral_Pulverization() {
        $("#Mineral_PulverizationGrid").data("kendoGrid").dataSource.read();
    }
    function GetDataByParameterGradeWiseRom() {
        $("#GradewiseROMGrid").data("kendoGrid").dataSource.read();
    }
    function fnAccessCreateGrade(gridName) {
        DatagridName = gridName;
        var gridElement = $("#" + gridName);
        var headerHeight = $('#NavHdr').height();
        var footerHeight = $('.footer').height();
        var newGridHeight = ($(window).height() - headerHeight - footerHeight - 300);

        if (gridElement != null) {
            gridElement.height(newGridHeight);
        }
    }


</script>
<script>
    var Count_SaleDispatchGrid = 0;

    function onDataBound1() {

        var data = this.dataSource.view();
        if (data.length > 0) {
            Count_SaleDispatchGrid = 1;
        }
        else {
            Count_SaleDispatchGrid = 0;
        }

        var crt = '@(ViewBag.iscreate)';
        var edt = '@(ViewBag.isedit)';
        var dlt = '@(ViewBag.isdelete)';
        if (crt == "False") {

            $("#SaleDispatchGrid").find('.k-grid-add').hide();
        }
        if (crt == "True") {
            $("#SaleDispatchGrid").find('.k-grid-add').show();
        }

        if (edt == "False") {

            $("#SaleDispatchGrid").find('.k-grid-edit').hide();
        }
        if (edt == "True") {
            $("#SaleDispatchGrid").find('.k-grid-edit').show();
        }

        if (dlt == "False") {

            $("#SaleDispatchGrid").find('.k-grid-delete').hide();
        }
        if (dlt == "True") {
            $("#SaleDispatchGrid").find('.k-grid-delete').show();
        }
    }


    function OnRefreshGrid1() {
        $("#SaleDispatchGrid").data("kendoGrid").dataSource.read();
    }

    function onRequestEnd1(e) {
        var MasterTableParameter = "Sales/ Dispatches effected for Domestic Purposes and for Exports";
        if (e.response.Data[0] == 2) {
            fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            e.preventDefault();
            OnRefreshGrid1();
        }
        else {
            if (e.type == "create" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            }
            else if (e.type == "update" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Update", MasterTableParameter);

            }
            else if (e.type == "destroy" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Delete", MasterTableParameter);
            }
            if (e.type != "read") {
                OnRefreshGrid1();
            }
        }
        $('.k-grid-content').append('<div class="k-grid-content-expander" style="width: 1840px;"></div>');
    }

    function insertPopupCaption1(e) {
        if (e.model.isNew()) {
            $('.k-window-title').text("Add Sales and Dispatch");
            $('.k-grid-update').text("Submit").hide();
            $('.k-edit-buttons').prepend("<button type='Submit' class='k-button k-button-icontext k-primary k-grid-update' id='btnSubmit' onclick='return submitSalesDispatch();'>Submit</button>");
            $('.k-grid-cancel').text("Cancel");
        }
        else {

            var NOD = $("#NatureofDispatch").val();
            if (NOD == "Export") {
                $("#ForExport").show();
                $("#ForDomestic").hide();
            }
            else if (NOD == "Domestic Sale" || NOD == "Domestic Transfer" || NOD == "Captive Consumption") {
                $("#ForDomestic").show();
                $("#ForExport").hide();
            }
            $('.k-window-title').text("Edit Sales and Dispatch");
            $('.k-grid-update').text("Update").hide();
            $('.k-edit-buttons').prepend("<button type='Submit' class='k-button k-button-icontext k-primary k-grid-update' id='btnUpdate' onclick='return updateSalesDispatch();'>Update</button>");
            $('.k-grid-cancel').text("Cancel");
        }
    }

    function CheckValidation() {
        if ($("#MineralNatureId6").val() == "" || $("#MineralNatureId6").val() == null) {
            swal("", "Mineral Form Required !", "warning");
            return false;
        }
        if ($("#MineralGradeId6").val() == "" || $("#MineralGradeId6").val() == null) {
            swal("", "Mineral Grade Required !", "warning");
            return false;
        }
        if ($("#NatureofDispatch").val() == "" || $("#NatureofDispatch").val() == null) {
            swal("", "Nature of Dispatch Required !", "warning");
            return false;
        }
        else {
            if ($("#NatureofDispatch").val() == "Export") {
                if ($("#Country").val() == "" || $("#Country").val() == null) {
                    swal("", "Country Required  !", "warning");
                    return false;
                }
                if ($("#Export_Quantity").val() == "" || $("#Export_Quantity").val() == null) {
                    swal("", "Quantity Required !", "warning");
                    return false;
                }
                if ($("#FOBValue").val() == "" || $("#FOBValue").val() == null) {    
                    swal("", "F O B Value Required !", "warning");
                    return false;
                }
            }
            else {
                if ($("#RegistrationNo").val() == "" || $("#RegistrationNo").val() == null) {
                    swal("", "Registration No allotted by the IBM to the buyer Required  !", "warning");
                    return false;
                }
                if ($("#PurchaserConsinee").val() == "" || $("#PurchaserConsinee").val() == null) {
                    swal("", "Consignee name Required  !", "warning");
                    return false;
                }
                if ($("#DomesticPurposes_Quantity").val() == "" || $("#DomesticPurposes_Quantity").val() == null) {
                    swal("", "Quantity Required  !", "warning");
                    return false;
                }
                if ($("#SaleValue").val() == "" || $("#SaleValue").val() == null) {
                    swal("", "Sale Value Required  !", "warning");
                    return false;
                }
            }
        }
        return true;
    }

    function submitSalesDispatch(modeType) {
        if (CheckValidation()) {
            var objModel = {
                MineralNatureId6: $("#MineralNatureId6").val(),
                MineralGradeId6: $("#MineralGradeId6").val(),
                NatureofDispatch: $("#NatureofDispatch").val(),
                RegistrationNo: $("#RegistrationNo").val(),
                PurchaserConsinee: $("#PurchaserConsinee").val(),
                DomesticPurposes_Quantity: $("#DomesticPurposes_Quantity").val(),
                SaleValue: $("#SaleValue").val(),
                Country: $("#Country").val(),
                Export_Quantity: $("#Export_Quantity").val(),
                FOBValue: $("#FOBValue").val(),
                MonthYear: $("#Month_Year").val(),
                MineralId: $("#MineralId1").val()
            };



            $.ajax({
                type: "POST",
                url: '@Url.Action("ADDSaleDispatch", "eReturnProcess", new { Area = "eReturn" })',
                data: objModel,

                dataType: "json",
                success: function (result) {
                    if (result == "1") {
                        swal("", "Record inserted successfully !", "warning");
                        window.location.reload(true);
                    }
                    else if (result == "2") {

                        swal("", "Record already existed !", "warning");
                    }
                    else if (result == "3") {
                        swal("", "Something went wrong !", "warning");
                    }
                }
            });
        }
    }

    function updateSalesDispatch() {
        if (CheckValidation()) {
            var objModel = {
                Sale_Dispatch_Id: $("#Sale_Dispatch_Id").val(),
                MineralNatureId6: $("#MineralNatureId6").val(),
                MineralGradeId6: $("#MineralGradeId6").val(),
                NatureofDispatch: $("#NatureofDispatch").val(),
                RegistrationNo: $("#RegistrationNo").val(),
                PurchaserConsinee: $("#PurchaserConsinee").val(),
                DomesticPurposes_Quantity: $("#DomesticPurposes_Quantity").val(),
                SaleValue: $("#SaleValue").val(),
                Country: $("#Country").val(),
                Export_Quantity: $("#Export_Quantity").val(),
                FOBValue: $("#FOBValue").val(),
                MonthYear: $("#Month_Year").val(),
                MineralId: $("#MineralId1").val()
            };


            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateSaleDispatch", "eReturnProcess", new { Area = "eReturn" })',
                data: objModel,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result == "1") {
                        alert("Record updated successfully.");
                        window.location.reload(true);
                    }
                    else if (result == "2") {
                        alert("Record already existed !");
                    }
                    else if (result == "3") {
                        alert("Something went wrong !");
                    }
                }
            });
        }
    }

</script>
<script>
    function onDataBound2() {
        var crt = '@(ViewBag.iscreate)';
        var edt = '@(ViewBag.isedit)';
        var dlt = '@(ViewBag.isdelete)';
        if (crt == "False") {

            $("#Mineral_PulverizationGrid").find('.k-grid-add').hide();
        }
        if (crt == "True") {
            $("#Mineral_PulverizationGrid").find('.k-grid-add').show();
        }

        if (edt == "False") {

            $("#Mineral_PulverizationGrid").find('.k-grid-edit').hide();
        }
        if (edt == "True") {
            $("#Mineral_PulverizationGrid").find('.k-grid-edit').show();
        }

        if (dlt == "False") {

            $("#Mineral_PulverizationGrid").find('.k-grid-delete').hide();
        }
        if (dlt == "True") {
            $("#Mineral_PulverizationGrid").find('.k-grid-delete').show();
        }


    }


    function OnRefreshGrid2() {
        $("#Mineral_PulverizationGrid").data("kendoGrid").dataSource.read();
    }

    function onRequestEnd2(e) {
        var MasterTableParameter = "Mineral Pulverization";
        if (e.response.Data[0] == 2) {
            fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            e.preventDefault();
            OnRefreshGrid2();
        }
        else {
            if (e.type == "create" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            }
            else if (e.type == "update" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Update", MasterTableParameter);

            }
            else if (e.type == "destroy" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Delete", MasterTableParameter);
            }
            if (e.type != "read") {
                OnRefreshGrid2();
            }
        }
        $('.k-grid-content').append('<div class="k-grid-content-expander" style="width: 1240px;"></div>');
    }


    function insertPopupCaption2(e) {
        if (e.model.isNew()) {
            $('.k-window-title').text("Add Grade Wise ROM");
            $('.k-grid-update').text("Submit");
            $('.k-grid-cancel').text("Cancel");

        }
        else {

            $('.k-window-title').text("Edit Grade Wise ROM");
            $('.k-grid-update').text("Update");
            $('.k-grid-cancel').text("Cancel");
        }
    }
</script>
<script>

    var Count_GradewiseROMGrid = 0
    function onDataBound3() {

        var data = this.dataSource.view();
        if (data.length > 0) {
            Count_GradewiseROMGrid = 1;
        }
        else {
            Count_GradewiseROMGrid = 0;
        }

        var crt = '@(ViewBag.iscreate)';
        var edt = '@(ViewBag.isedit)';
        var dlt = '@(ViewBag.isdelete)';
        if (crt == "False") {

            $("#GradewiseROMGrid").find('.k-grid-add').hide();
        }
        if (crt == "True") {
            $("#GradewiseROMGrid").find('.k-grid-add').show();
        }

        if (edt == "False") {

            $("#GradewiseROMGrid").find('.k-grid-edit').hide();
        }
        if (edt == "True") {
            $("#GradewiseROMGrid").find('.k-grid-edit').show();
        }

        if (dlt == "False") {

            $("#GradewiseROMGrid").find('.k-grid-delete').hide();
        }
        if (dlt == "True") {
            $("#GradewiseROMGrid").find('.k-grid-delete').show();
        }


    }


    function OnRefreshGrid3() {
        $("#GradewiseROMGrid").data("kendoGrid").dataSource.read();
    }

    function onRequestEnd3(e) {
        var MasterTableParameter = "Grade-wise ROM ore";
        if (e.response.Data[0] == 2) {
            fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            //e.preventDefault();
            OnRefreshGrid3();
        }
        else {
            if (e.type == "create" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Insert", MasterTableParameter);
            }
            else if (e.type == "update" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Update", MasterTableParameter);

            }
            else if (e.type == "destroy" && !e.response.Errors) {
                fn_AlertMessage(e.response.Data[0], "Delete", MasterTableParameter);
            }
            if (e.type != "read") {
                OnRefreshGrid3();
            }
        }
        $('.k-grid-content').append('<div class="k-grid-content-expander" style="width: 978px;"></div>');
    }

    function insertPopupCaption3(e) {
        if (e.model.isNew()) {
            $('.k-window-title').text("Add Grade-wise ROM ore");
            $('.k-grid-update').text("Submit");
            $('.k-grid-cancel').text("Cancel");

        }
        else {

            $('.k-window-title').text("Edit Grade-wise ROM ore");
            $('.k-grid-update').text("Update");
            $('.k-grid-cancel').text("Cancel");
        }
    }
</script>
<script type="text/javascript">
    function numericOnly() {

        var keycode = event.which;
        if (!(event.shiftKey == false && (keycode == 8 || keycode == 37 || keycode == 39 || (keycode >= 48 && keycode <= 57)))) {
            event.preventDefault();
            return false;
        }
    }
    var specialKeys = new Array();
    specialKeys.push(8); //Backspace
    function numericdotOnly(elementRef) {
        var keyCodeEntered = (event.which) ? event.which : (window.event.keyCode) ? window.event.keyCode : -1;
        if ((keyCodeEntered >= 48) && (keyCodeEntered <= 57)) {
            return true;
        }
        // '.' decimal point...
        else if (keyCodeEntered == 46) {
            // Allow only 1 decimal point ('.')...
            if ((elementRef.value) && (elementRef.value.indexOf('.') >= 0))
                return false;
            else
                return true;
        }
        return false;
    }
    function lettersOnly() {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    }

</script>
