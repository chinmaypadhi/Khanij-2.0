@model PermitEF.ePermitModel
@{
    ViewData["Title"] = "ePermitApplication";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}


<section class="wrapper main-wrapper row">
    <div class="col-12">
        @Html.Partial("_CMSnavigation")

        <!-- MAIN CONTENT AREA STARTS -->
        <div class="row">
            <div class="col-12">
                <div class="main-tab">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" href="javascript:void(0);">
                                Apply e-permit
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Content("~/Permit/CoalEPermit/CoalSavedEPermit")">
                                Saved Permit
                            </a>
                        </li>
                    </ul>
                    @Html.Partial("_CMSutil")
                </div>

                <section class="box form-container">
                    <div class="content-body">
                        @using (Html.BeginForm("CoalEPermit", "CoalEPermit", FormMethod.Post, new { enctype = "multipart/form-data", AUTOCOMPLETE = "Off", id = "frmEPermit", @Area = "Permit" }))
                        {
                            @Html.AntiForgeryToken()

                            @(Html.HiddenFor(model => model.BulkPermitId))
                            @(Html.HiddenFor(model => model.TransactionalID))
                            @(Html.HiddenFor(model => model.EmailId))
                            @(Html.HiddenFor(model => model.MobileNo))
                            @(Html.HiddenFor(model => model.PayableRoyalty))
                            @(Html.HiddenFor(model => model.NMET))
                            @(Html.HiddenFor(model => model.TCS))
                            @(Html.HiddenFor(model => model.DMF))
                            @(Html.HiddenFor(model => model.Cess))
                            @(Html.HiddenFor(model => model.eCess))
                            @(Html.HiddenFor(model => model.NMETPer))
                            @(Html.HiddenFor(model => model.TCSPer))
                            @(Html.HiddenFor(model => model.DMFPer))
                            @(Html.HiddenFor(model => model.CessPer))
                            @(Html.HiddenFor(model => model.eCessPer))
                            @(Html.HiddenFor(model => model.PayableRoyaltyBase))
                            @(Html.HiddenFor(model => model.Production))
                            @(Html.HiddenFor(model => model.RemainingProduction))
                            @(Html.HiddenFor(model => model.RoyaltyRateID))
                            @(Html.HiddenFor(model => model.isForwarded))
                            @(Html.HiddenFor(model => model.MineralGradeName))
                            @(Html.HiddenFor(model => model.MineralNature))
                            @(Html.HiddenFor(model => model.GeneratedBy))
                            @(Html.HiddenFor(model => model.GeneratedDesignation))
                            @(Html.HiddenFor(model => model.IsWalletAdjusted))
                            <div class="row">
                                <div class="col-lg-6 col-md-12 col-sm-12">
                                    <h5 class="text-brown font-weight-bold mt-0">New Application</h5>
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Scheme of Coal Sale </label>
                                            @Html.DropDownListFor(model => model.TypeOfCoalDispatched, ViewBag.ViewCoalTypeList as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control form-group", autofocus = "autofocus", required = "required" })
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Name of Lessee </label>
                                            @(Html.TextBoxFor(model => model.LesseeName, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Address</label>
                                            @(Html.TextBoxFor(model => model.LesseeAddress, new { @class = "form-control form-group", @readonly = "readonly" }))

                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Grant Order No.</label>
                                            @(Html.TextBoxFor(model => model.GrantOrderNo, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Grant Order Date </label>
                                            @(Html.TextBoxFor(model => model.DateOfGrant, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>


                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Period of Lease</label>
                                            @(Html.TextBoxFor(model => model.PeriodOfLease, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Village</label>
                                            @(Html.TextBoxFor(model => model.Village, new { @class = "form-control form-group", @readonly = "readonly" }))
                                            @(Html.HiddenFor(model => model.VillageId))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Panchayat</label>
                                            @(Html.TextBoxFor(model => model.Panchayat, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Tehsil</label>
                                            @(Html.TextBoxFor(model => model.Tehsil, new { @class = "form-control form-group", @readonly = "readonly" }))
                                            @(Html.HiddenFor(model => model.TehsilId))
                                        </div>


                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Police Station</label>
                                            @(Html.TextBoxFor(model => model.PoliceStation, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>

                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">District</label>
                                            @(Html.TextBoxFor(model => model.District, new { @class = "form-control form-group", @readonly = "readonly" }))
                                            @(Html.HiddenFor(model => model.DistrictId))
                                        </div>

                                        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                                            <label class="col-form-label font-weight-bolder">Delivery Order </label>
                                            <div class="col-lg-12 col-md-12 col-sm-12 pl-0">
                                                <input name="DOSelection" type="radio" id="YESDO" value="1" class="custom-radio" />
                                                <label class="radio-label">YES</label>
                                                <input name="DOSelection" type="radio" id="NODO" value="0" class="custom-radio" checked="checked" />
                                                <label class="radio-label">NO</label>
                                            </div>
                                        </div>

                                        <div class="col-lg-6 col-md-6 col-sm-12" id="doRequired">
                                            <label class="col-form-label font-weight-bolder">Delivery Order No. </label>
                                            @Html.DropDownListFor(model => model.DONumber, ViewBag.ViewDONumber as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control form-group", autofocus = "autofocus" })
                                            @(Html.ValidationMessageFor(model => model.DONumber))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12" id="doRequired2">
                                            <label class="col-form-label font-weight-bolder">Delivery Order Date </label>
                                            <div class="input-group">
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @Html.TextBoxFor(model => model.DODate, new { @class = "form-control datepicker", placeholder = "DD/MMM/YYYY", autofocus = "autofocus", @maxlength = "20", @id = "DODate", @autocomplete = "off", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Mineral Name</label>
                                            @(Html.TextBoxFor(model => model.MineralName, new { @class = "form-control form-group", @readonly = "readonly" }))
                                            @(Html.HiddenFor(model => model.MineralId))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12 form-group">
                                            <label class="col-form-label font-weight-bolder">Mineral Form</label>
                                            @Html.DropDownListFor(model => model.MineralNatureId, ViewBag.ViewMineralNatureList as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control form-group", autofocus = "autofocus", required = "required" })
                                            @(Html.HiddenFor(model => model.MineralNatureId))

                                        </div>

                                        <div class="col-lg-6 col-md-6 col-sm-12 form-group">
                                            <label class="col-form-label font-weight-bolder">Mineral Grade</label>
                                            @* @Html.DropDownListFor(model => model.MineralGradeId, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "form-control form-group", autofocus = "autofocus", required = "required" })*@
                                            @Html.DropDownListFor(model => model.MineralGradeId, ViewBag.MineralGradeList as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control form-group", autofocus = "autofocus", required = "required" })
                                            @(Html.HiddenFor(model => model.MineralGradeId))
                                        </div>
                                        @*<div class="col-lg-6 col-md-6 col-sm-12 form-group bauxite">
            <label class="col-form-label font-weight-bolder">Alumina Content Percent (Do not Use % Symbol)</label>
            @(Html.TextBoxFor(model => model.AluminaContent, new { @class = "form-control form-group", onkeypress = "return isNumberKey(event,this)", @maxlength = "10", @onblur = "txtQuantityChange();" }))
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12 form-group tin">
            <label class="col-form-label font-weight-bolder">Tin Content Percent (Do not Use % Symbol)</label>
            @(Html.TextBoxFor(model => model.TinContent, new { @class = "form-control form-group", onkeypress = "return isNumberKey(event,this)", @maxlength = "10", @onblur = "txtQuantityChange();" }))
        </div>*@
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Quantity<small><i class="fas fa-rupee-sign ml-1"></i></small></label>
                                            @(Html.TextBoxFor(model => model.ProposedQty, new { @class = "form-control form-group"}))
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Unit</label>
                                            @(Html.TextBoxFor(model => model.UnitName, new { @class = "form-control form-group", @readonly = "readonly" }))
                                            @(Html.HiddenFor(model => model.UnitId))
                                        </div>
                                        @if (ViewBag.read != null)
                                        {
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <label class="col-form-label font-weight-bolder">Basic Price /Royalty Rate</label>
                                                @(Html.TextBoxFor(model => model.BasicRate, new { @class = "form-control",@readonly = @ViewBag.read }))
                                                <input type="hidden" id="che" name="che" value="@ViewBag.read" />
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="col-lg-6 col-md-6 col-sm-12">
                                                <label class="col-form-label font-weight-bolder">Basic Price /Royalty Rate</label>
                                                @(Html.TextBoxFor(model => model.BasicRate, new { @class = "form-control"}))
                                                <input type="hidden" id="che" name="che" value="@ViewBag.read" />
                                            </div>
                                        }

                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            <label class="col-form-label font-weight-bolder">Total Payable Amount<small><i class="icon-rupee-sign-solid ml-1"></i></small></label>
                                            @(Html.TextBoxFor(model => model.TotalPayableAmount, new { @class = "form-control form-group", @readonly = "readonly" }))
                                        </div>
                                    </div>

                                </div>
                                <div class="col-lg-6 col-md-12 col-sm-12">
                                    <h5 class="text-brown font-weight-bold mt-0">Details</h5>
                                    <div class="bg-light p-2 shadow-sm">
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">EC Approved Qty + Opening Stock</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.TotalECApprovedQty, @Model.TotalECApprovedQty))
                                                        @*<label class="form-control-plaintext"><span class="colon">:</span>2000000.000</label>*@
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">Mining Plan Qty</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @Html.LabelFor(x => x.TotalMiningProductionQty, @Model.TotalMiningProductionQty.ToString())
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">Lease Validity</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.Label(@Model.MPValidity))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By Road</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.RoadDispatch, @Model.RoadDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By Road-Rail</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.RoadRailDispatch, @Model.RoadRailDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By Inside Railway Siding</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.InsideRailwaySidingDispatch, @Model.InsideRailwaySidingDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By Conveyor Belt</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.ConveyorBeltDispatch, @Model.ConveyorBeltDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By MGR/Own Wagon</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.MGROWNWagonDispatch, @Model.MGROWNWagonDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By End use plant inside the lease area</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.EndUsePlantinsIdetheLeaseAreaDispatch, @Model.EndUsePlantinsIdetheLeaseAreaDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">By Ropeway</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.RopewayDispatch, @Model.RopewayDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">Total Dispatched (e-Pass)</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.UserTotalDispatch, @Model.UserTotalDispatch))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-7 col-form-label font-weight-bolder">Total Dispatched</label>
                                                    <div class="col-sm-5">
                                                        <span class="colon">:</span>
                                                        @(Html.LabelFor(x => x.TillDateDispatched, @Model.TillDateDispatched))
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-sm-12">
                                    <a class="btn btn-dark btn-md ml-0 waves-effect waves-light " data-toggle="modal" data-target="#viewcalculation">View Calculation</a>
                                    @if (Model == null || Model.isForwarded == 1 || Model.isForwarded < 1 || Model.isForwarded == null)
                                    {
                                        <input type="button" title="Save" value="Save" id="btnSave" class="btn btn-success btn-md ml-0 waves-effect waves-light" onclick="return OnSubmitForm();" />

                                        <input type="button" title="Make Payment" onclick="return OnPayment();" value="Make Payment" id="btnPayment" class="btn btn-primary btn-md ml-0 waves-effect waves-light" />
                                        if (Model.BulkPermitId > 0)
                                        {
                                            <input type="submit" title="Donwload Form" value="Download Draft Application" name="cmdPreview" class="btn btn-primary btn-md ml-0 waves-effect waves-light" id="btnPreview" onclick="return OnPreviewForm();" />
                                        }
                                    }
                                    else
                                    {
                                        <input type="submit" title="Donwload Form" value="Download Draft Application" name="cmdPreview" class="btn btn-primary btn-md ml-0 waves-effect waves-light" id="btnPreview1" onclick="return OnPreviewForm();" />
                                    }

                                </div>
                            </div>
                        }

                    </div>
                </section>
            </div>
        </div>
    </div>
    <!-- MAIN CONTENT AREA ENDS -->
</section>


<div class="modal fade" id="viewcalculation">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title m-0">View Calculation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="row col-md-12">
                    <h6 class="w-100">Mines Details</h6>

                    <div class="mb-3">
                        <span class="font-weight-bold">Auction Type : </span><small>@ViewBag.Auct =></small>
                        <span class="font-weight-bold">Lease Extend : </span><small>@ViewBag.Leaseext =></small>
                        <span class="font-weight-bold">Captive : </span><small>@ViewBag.capt =></small>
                        <span class="font-weight-bold">Grant Date : </span><small>@ViewBag.Mlgrd</small>
                    </div>
                   
                    <table id="PaymentTable" class="table table-bordered"></table>
                </div>
            </div>
        </div>

    </div>

</div>

@(Html.HiddenFor(model => model.PaymentDetails))
<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="mi-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Do you want to adjust your e-wallet amount with this e-permit payment ?</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="modal-btn-si">Yes</button>
                <button type="button" class="btn btn-primary" id="modal-btn-no">No</button>
            </div>
        </div>
    </div>
</div>
<script>
    backMe = "yes"
    $(document).ready(function () {
        loadNavigation('NewE-permit', 'glepermit', 'Epermit', 'tl', 'E-Permit', 'Apply Coal e-permit', ' ');
        $('.searchableselect').searchableselect();
    });
</script>
<script>
    $(document).ready(function () {
        $("#MineralNatureId").change(function () {

            var NatureID = $('#MineralNatureId').val();
            if (NatureID == "") {
                NatureID = 0;
            }
            //alert(RoleTypeId.toString());
            $('#MineralGradeId').empty();
            var v = "";
            if (NatureID != 0) {

                $.ajax({
                    type: "POST",
                    url: "/Permit/CoalEPermit/GetMineralGrade",
                    data: { 'NatureID': NatureID },
                    cache: false,
                    //contentType: "application/json",
                    datatype: "JSON",
                    success: function (SList) {
                        var opt = new Option('--Select--', 0);
                        $('#MineralGradeId').append(opt).selectpicker('refresh');
                        $.each(SList, function (i, item) {

                            // console.log(item);
                            var opt = new Option(item.MineralGrade, item.MineralGradeId);
                            $('#MineralGradeId').append(opt).selectpicker('refresh');
                            //$('#ddlUserName').append('<option value="' + item[" UserID"] + '"> ' + item["ApplicantName"] + ' </option>' );
                            // v += "<option value='" + item.userID.toString() + "'>" + item.applicantName + "</option>";
                            // alert(v);
                        });

                    }
                });
            }
            else {
                $('#MineralGradeId').val("");
                swal("", "Select Mineral Form", "warning");
            }

        });


         if ($('#che').val()!= null) {
            $("#MineralGradeId").change(function () {

                $("#BasicRate").val(0);
                $("#TotalPayableAmount").val(0);

                var P_MineralNatureId = $('#MineralNatureId').val();
                var P_Mineral = $('#MineralId').val();
                var P_MineralGrade = $('#MineralGradeId').val();
                var P_DistrictId = $('#DistrictId').val();

                 $.ajax({
            url: '@Url.Action("GetBasicprice", "CoalEPermit")',
            type: "GET",
            //data: '{MineralGradeId : "' + MineralGrade + '" }',
                     data: { MineralNatureId: P_MineralNatureId, Mineral: P_Mineral, MineralGrade: P_MineralGrade, DistrictId: P_DistrictId },
               success: function (data) {
                if (data != "" && data != 0) {

                    $("#BasicRate").val(data.SalePrice);

                }
                else {
                    $("#BasicRate").val(0);
                    $("#TotalPayableAmount").val(0);
                    return false;
                }
            },
            error: function (data) {
            }
        });

                var vv = getCalculation();
                if (vv == false) {
                    //alert("Your Production Capacity Balance is : " + MiningProduction2);
                }

            });
        }

        $("#DONumber").change(function () {
            debugger;
            var DoNumber = $('#DONumber').val();
            if (DoNumber == "") {
                DoNumber = "0";
            }
            //alert(RoleTypeId.toString());
            $('#DODate').empty();
            if (DoNumber != "0") {

                $.ajax({
                    type: "POST",
                    url: "/Permit/CoalEPermit/GetDODate",
                    data: { 'DoNumber': DoNumber },
                    cache: false,
                    //contentType: "application/json",
                    datatype: "JSON",
                    success: function (data) {
                        if (data != "" && data != 0) {
                            $("#DODate").val(data.DODate);
                        }

                    }
                });
            }
            else {
                $('#DODate').val("");
                swal("", "Select DoNumber", "warning");
            }

        });
    });
</script>
@{if (TempData["AlertMsg"] != null)
    {
        <script>
        $("#btnSave").attr("disabled", "disabled");
        $("#btnPreivew").attr("disabled", "disabled");
            $("#btnForwardToDDDMO").attr("disabled", "disabled");
            swal("", '@TempData["AlertMsg"]', "success");
        </script>
    }
}
<script>
    var isCalled = false;
    function GetMineralGradeId() {
        return {
            MineralNatureId: $("#MineralNatureId").val()
        };
    }

    $(document).ready(function () {
        if ('@TempData["SuccMessage"]' != '' && '@TempData["SuccMessage"]' != null) {

    swal("",'@TempData["SuccMessage"]',"success");
    }

        if (parseInt($("#BulkPermitId").val()) > 0 && $("#DONumber").val() != "") {
            // var DOApplicable = $("input:radio[name='DOSelection']:checked").val();
            $(":radio[name='DOSelection'][value='1']").attr('checked', 'checked');
            $("#doRequired").show();
            $("#doRequired2").show();
        }
        else {
            $(":radio[name='DOSelection'][value='0']").attr('checked', 'checked');
            $("#doRequired").hide();
            $("#doRequired2").hide();
        }

    });
    var myWindow = $("#window"), undo = $("#Calculation");
    var win;
    myWindow.hide();
    var resultdata;

    undo.click(function () {
        openPopUp();
        undo.fadeOut();
    });

    function onClose() {
        undo.fadeIn();
    }

    $(document).ready(function () {

        var vv = $("#BulkPermitId").val();

        if (vv != null && vv > 0) {
            getCalculation();
        }

        //win = myWindow.kendoWindow({
        //    width: "50%",
        //    left: "28%",
        //    title: "Calculation",
        //    visible: false,
        //    scrollable: false,
        //    modal: true,
        //    actions: ["Close"],
        //    close: onClose
        //}).data("kendoWindow").center();
    });


    function openPopUp() {
        if ($("#TotalPayableAmount_popup").val() == null || $("#TotalPayableAmount_popup").val() == "") {
            getCalculation();
        }
        if (!win) {
            win.center().open();
        } else {
            win.open();
        }

        if (resultdata != null) {
            $("#PayableRoyalty1").val(resultdata.PayableRoyalty);
            $("#TCS1").val(resultdata.TCS);
            $("#Cess1").val(resultdata.Cess);
            $("#eCess1").val(resultdata.eCess);
            $("#DMF1").val(resultdata.DMF);
            $("#NMET1").val(resultdata.NMET);
            $("#TotalPayableAmount1").val(resultdata.TotalPayableAmount);
            $("#TotalPayableAmount_popup").val(resultdata.TotalPayableAmount);
            $("#TCSPer1").val(resultdata.TCSPer).change();
            $("#CessPer1").val(resultdata.CessPer).change();
            $("#eCessPer1").val(resultdata.eCessPer).change();
            $("#DMFPer1").val(resultdata.DMFPer).change();
            $("#NMETPer1").val(resultdata.NMETPer).change();
            $("#PayableRoyaltyBase1").val(resultdata.PayableRoyaltyBase).change();
        }
    }


    //$('#TypeOfCoalDispatched').change(function () {

    //})

    var MiningProduction2 = 0
    $('#ProposedQty').change(function () {
        var vv = getCalculation();
        if (vv == false) {
            //alert("Your Production Capacity Balance is : " + MiningProduction2);
        }
    })

    $('#BasicRate').change(function () {
        var vv = getCalculation();
        if (vv == false) {
            //alert("Your Production Capacity Balance is : " + MiningProduction2);
        }
    })

    function TypeOfCoalDispatchedChanged() {

        var AuctionType = $("#TypeOfCoalDispatched").val();
        $("#EAuctionType").val(AuctionType);
    }


    function RoyaltyCheckAmount() {
        $("#RoyaltyRateID").val(0);
        $("#RoyaltyRate").val(0);
        $("#TotalPayableAmount").val(0);
        $("#PayableRoyalty").val(0);
        getCalculation();
    }

    function getCalculation() {

        var TotalQuantity = parseFloat($("#ProposedQty").val());

        if ($("#BasicRate").val() == "" || $("#ProposedQty").val() == "") {
            $('#PaymentTable').empty();
            $("#TotalPayableAmount").val(0);
            return false;
        }

        var MineralGrade = $('#MineralGradeId').val();
        $.ajax({
            url: '@Url.Action("GradeWiseCheckECQTY", "Lessee")',
            type: "GET",
            //data: '{MineralGradeId : "' + MineralGrade + '" }',
            data: { MineralGradeId: MineralGrade },
            success: function (data) {
                if (data != "" && data != 0) {

                    $("#RemainingProduction").val(parseFloat(data));

                    var MiningProduction = parseFloat($("#RemainingProduction").val());

                    if (TotalQuantity > MiningProduction) {
                        $("#ProposedQty").val(0).change();
                        $("#PayableRoyalty").val(0).change();
                        alert("Your Production Capacity Balance is : " + MiningProduction);
                        return false;
                    }
                    else {
                        var P_BulkPermitId = $('#BulkPermitId').val();
                        var P_MineralNatureId = $('#MineralNatureId').val();
                        var P_Mineral = $('#MineralId').val();
                        var P_MineralGrade = $('#MineralGradeId').val();
                        var P_RoyaltyRate = $("#BasicRate").val();
                        var AppQuantity = 0;
                        if (AppQuantity == "" || AppQuantity == null) { AppQuantity = "0" }
                        $.ajax({
                            type: "POST",
                           url: "/Permit/Lessee/RevisedCalculation",
                            data: { 'MineralNatureId': P_MineralNatureId, MineralGradeId: P_MineralGrade, MineralId: P_Mineral, Quantity: TotalQuantity, RoyaltyRate: P_RoyaltyRate, BulkPermitId: P_BulkPermitId},
                            //contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (result) {
                                if (result != null) {
                                    resultdata = result;
                                    $('#isNegativeRoyalty').val(0).change();
                                    var isOffline = false;
                                    $('#PaymentTable').empty();
                                    if ($("#MineralName").val() == "Coal" && $("#LesseeName").val().indexOf('Hindalco') >= 0 && $("#ISAdjustmentCess").val() == "1") {
                                        $('#PaymentTable').append('<tr><td colspan="4" ><label style="color: red;font-size: 14px;">Note : This adjustment in Royalty is w.r.t to <b style="color: black">' + $("#OrderOf").val() + ' </b> with order no <b style="color: black"> ' + $("#OrderNo").val() + ' </b> on dated : <b style="color: black">' + $("#OrderDate").val() + '<b>.</label><br /><label style="color: red;font-size: 14px;">Total Payable Royalty = Payable Royalty - (Infrastructure Development  Cess + Environmental Cess) </label></td></tr>');
                                    }
                                    $('#PaymentTable').append('<tr><th width="160px"><label style="color: red;font-size: 16px;margin-bottom: 0px;">Payable</label></th><th ><label style="margin-bottom: 0px;">Payment Amount <small><i class="icon-rupee-sign-solid ml-1"></i></small></label></th><th><label style="margin-bottom: 0px;">Calculation</label></th><th><label style="margin-bottom: 0px;">Head of Account</label></th></tr>');
                                    $.each(result, function (i) {

                                        if (result[i].MappingValue <= 0 && $('#isNegativeRoyalty').val() == 0 && $("#LesseeName").val().indexOf('Hindalco') >= 0 && $("#ISAdjustmentCess").val() == "1") {
                                            $('#isNegativeRoyalty').val(1).change();
                                        }

                                        debugger;
                                        if (result[i].IsApplicable == false) {
                                            if (isOffline == false) {
                                                $('#PaymentTable').append('<tr><td style="width:100%;" colspan="4"><label style="color: red;font-size: 16px;font-weight: 700;margin-bottom: 0px;">Shall be paid separately</label></td></tr>');
                                                isOffline = true;
                                            }
                                        }
                                        if (i == 0) {
                                            $("#RoyaltyRateID").val(result[0].PaymentTypeID);
                                            $("#RoyaltyRate").val(result[0].CalValue);
                                            $("#TotalPayableAmount").val(result[0].TotalPayableAmount);
                                            $("#PayableRoyalty").val(result[0].MappingValue);
                                            var vvRoyalty = result[i].PaymentType;

                                            if (vvRoyalty == "Payable Royalty" && $("#ISAdjustmentCess").val() == "1") {
                                                vvRoyalty = "Total Payable Royalty";
                                            }

                                            else {
                                                vvRoyalty = "Royalty";
                                            }


                                            if (result[i].CalType == "Rs / Unit") {
                                                $('#PaymentTable').append('<tr><td><label>' + vvRoyalty + '</label></td><td><input class="form-control" readonly="readonly" type="text" value="' + result[i].MappingValue + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].RoyaltyRate + ' ' + result[i].CalType + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].HeadAccount + '"></td></tr>');
                                            }
                                            else if (result[i].CalType == "Fixed") {
                                                $('#PaymentTable').append('<tr><td><label>' + vvRoyalty + '</label></td><td><input class="form-control" readonly="readonly" type="text" value="' + result[i].MappingValue + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].RoyaltyRate + ' ' + result[i].CalType + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].HeadAccount + '"></td></tr>');
                                            }
                                            else {
                                                $('#PaymentTable').append('<tr><td ><label>' + vvRoyalty + '</label></td><td><input class="form-control" readonly="readonly" type="text" value="' + result[i].MappingValue + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].RoyaltyRate + ' ' + result[i].CalType + ' of ' + result[i].BasisRate + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].HeadAccount + '"></td></tr>');
                                            }
                                        }
                                        else {
                                            $('#PaymentTable').append('<tr><td><label>' + result[i].PaymentType + '</label></td><td><input class="form-control" readonly="readonly" type="text" value="' + result[i].MappingValue + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].CalValue + ' ' + result[i].CalType + '"></td><td ><input class="form-control" readonly="readonly" type="text" value="' + result[i].HeadAccount + '"></td></tr>');
                                        }

                                    })
                                }
                            }
                        });
                    }

                }
                else {
                    $("#ProposedQty").val(0).change();
                    $("#PayableRoyalty").val(0).change();
                    swal("", "Your Production Capacity Balance is 0.", "warning");
                    return false;
                }
            },
            error: function (data) {
            }
        });

    }

@*    function getCalculation() {
        var TotalQuantity = parseFloat($("#ProposedQty").val());
        var MiningProduction = parseFloat($("#RemainingProduction").val());
        if (TotalQuantity <= MiningProduction) {
            var MineralType = $('#MineralNatureId').val();
            var Mineral = $('#MineralId').val();
            var UnitType = $('#UnitId').val();
            var MineralGrade = $('#MineralGradeId').val();
            var RoyaltyRate = $("#RoyaltyRate").val();
            var LeaseTypeId = '@TempData["LeaseTypeId"]';
            var AppQuantity = $("#ApprovedQty").val();
            var TotalQuantity = $("#ProposedQty").val();
            var BasicRate = $("#BasicRate").val();
            var GrantDate = $("#DateOfGrant").val();

            if (AppQuantity == "" || AppQuantity == null) { AppQuantity = "0" }

            if ((TotalQuantity != "" && TotalQuantity != null && TotalQuantity > 0) && (BasicRate != "" && BasicRate != null && BasicRate > 0)) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("calculatePayableRoyalty", "CoalEPermit")',
                    data: '{UnitTypeId: "' + UnitType + '",MineralTypeId: "' + MineralType + '",MineralGradeId: "' + MineralGrade + '",MineralId: "' + Mineral + '",RoyaltyRate: "' + BasicRate + '",LeaseTypeId: "' + LeaseTypeId + '",Quantity:"' + TotalQuantity + '",ApprovedQuantity:"' + AppQuantity + '",GrantDate:"' + GrantDate + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        resultdata = result;
                        $("#PayableRoyalty").val(result.PayableRoyalty).change();
                        $("#TCS").val(result.TCS).change();
                        $("#Cess").val(result.Cess).change();
                        $("#eCess").val(result.eCess).change();
                        $("#DMF").val(result.DMF).change();
                        $("#NMET").val(result.NMET).change();
                        $("#TotalPayableAmount").val(result.TotalPayableAmount).change();
                        $("#TotalPayableAmount_popup").val(result.TotalPayableAmount).change();
                        $("#TCSPer").val(result.TCSPer).change();
                        $("#CessPer").val(result.CessPer).change();
                        $("#eCessPer").val(result.eCessPer).change();
                        $("#DMFPer").val(result.DMFPer).change();
                        $("#NMETPer").val(result.NMETPer).change();
                        $("#PayableRoyaltyBase").val(result.PayableRoyaltyBase).change();

                        $("#RoyaltyRateID").val(result.RoyaltyRateID).change();

                    }
                });
            }
            return true;
        }
        else {
            $("#PayableRoyalty").val(0).change();
            $("#TCS").val(0).change();
            $("#Cess").val(0).change();
            $("#DMF").val(0).change();
            $("#NMET").val(0).change();
            $("#TotalPayableAmount").val(0).change();
            $("#eCess").val(0).change();
            $("#TCSPer").val(0).change();
            $("#CessPer").val(0).change();
            $("#eCessPer").val(0).change();
            $("#DMFPer").val(0).change();
            $("#NMETPer").val(0).change();
            $("#PayableRoyaltyBase").val(0).change();
            $("#PayableRoyalty1").val(0).change();
            $("#TCS1").val(0).change();
            $("#Cess1").val(0).change();
            $("#DMF1").val(0).change();
            $("#NMET1").val(0).change();
            $("#TotalPayableAmount1").val(0).change();
            $("#eCess1").val(0).change();

            //$("#ProposedQty").val(0).change();
            //$("#BasicRate").val(0).change();
            MiningProduction2 = MiningProduction;
            return false;
        }
    }*@




    function OnForwarding() {
        var checkdata = checkFields();
        if (checkdata == 1) {

            swal({
                title: "Are you confirmed??",
                icon: "warning",
                buttons: ["No", "Yes"],
            })
                .then((submit) => {
                    if (submit) {
                        if ($("#BulkPermitId").val() == null || $("#BulkPermitId").val() != "") {
                   $("#isForwarded").val(1).change();
                        }
                $("#frmEPermit").submit();
                    }
                });

            //if (confirm("Are you confirmed to forward Coal Application??")) {
            //    if ($("#BulkPermitId").val() == null || $("#BulkPermitId").val() != "") {
            //        $("#isForwarded").val(1).change();
            //    }
            //    $("#frmEPermit").submit();

            //}
            //else {
            //    return false;
            //}


        }
        else
            return false;
    }

    var modalConfirm = function (callback) {
        $("#btnPayment").on("click", function () {
        //    $("#mi-modal").modal('show');

        //});
        //$("#modal-btn-si").on("click", function () {
        //    callback(true);
        //    $("#mi-modal").modal('hide');
        //});
        //$("#modal-btn-no").on("click", function () {
        //    callback(false);
        //    $("#mi-modal").modal('hide');
            $("#modal-btn-si").on("click", function () {
                callback(true);
                $("#mi-modal").modal('hide');
            });
            $("#modal-btn-no").on("click", function () {
                callback(false);
                $("#mi-modal").modal('hide');
            });
        });


    };

    modalConfirm(function (confirm) {
        if (confirm) {
            //Acciones si el usuario confirma
            $("#IsWalletAdjusted").val(1).change();
            OnPayment();
        } else {
            $("#IsWalletAdjusted").val(0).change();
            OnPayment();
            //Acciones si el usuario no confirma
        }
    });


    function OnPayment() {

        if ($("#isNegativeRoyalty").val() == 1) {
            swal("", "Payable Amount is coming less than 0. Kindly re-check the values entered for Basic Price/ Royalty Rate & Quantity.", "warning");
            return false;
        }
        else {
            getCalculation();
            var checkdata = checkFields();
            if (checkdata == 1) {

                swal({
                    title: "Are you confirmed??",
                    icon: "warning",
                    buttons: ["No", "Yes"],
                })
                    .then((submit) => {
                        if (submit) {
                            if ($("#BulkPermitId").val() == null || $("#BulkPermitId").val() != "") {
                                $("#isForwarded").val(1).change();
                            }
                            $("#frmEPermit").submit();
                        }
                    });

                //if (confirm("Are you sure to make payment?")) {

                //    if ($("#BulkPermitId").val() == null || $("#BulkPermitId").val() != "") {
                //        $("#isForwarded").val(1).change();

                //    }
                //    $("#frmEPermit").submit();

                //}
                //else {
                //    return false;
                //}


            }
            else
                return false;
        }
    }

    $('#ProposedQty').keypress(function (e) {
        if (isNaN(this.value + String.fromCharCode(event.keyCode))) return false;
    });

    $('#BasicRate').keypress(function (e) {
        if (isNaN(this.value + String.fromCharCode(event.keyCode))) return false;
    });

    $(document).on("change", "input[type=radio]", function () {
        var DOApplicable = $("input:radio[name='DOSelection']:checked").val();
        if (DOApplicable == "1") {
            $("#doRequired").show();
            $("#doRequired2").show();
            if (parseInt($("#BulkPermitId").val()) > 0) {

            }
            else {
                $('#DONumber').val('');
            }
        }
        else {
            $("#doRequired").hide();
            $("#doRequired2").hide();
            if (parseInt($("#BulkPermitId").val()) > 0) {

            }
            else {
                $('#DONumber').val('');
            }
        }

    });

    function checkFields() {
        var valid = 1;

        var DOApplicable = $("input:radio[name='DOSelection']:checked").val();


        var DONumber = $('#DONumber').val();
        var DODate = $('#DODate').val();
        var MineralSizeId = $('#MineralSizeId').val();
        var MineralSizeName = $('#MineralSizeName').val();
        var ProposedQty = $('#ProposedQty').val();
        var MineralNatureId = $('#MineralNatureId').val();

        var MineralGradeId = $('#MineralGradeId').val();

        var BasicRate = $('#BasicRate').val();
        var TypeOfCoalDispatched = $('#TypeOfCoalDispatched').val();

        var vv = $("#ProposedQty").val();
        var TotalQuantity = parseFloat($("#ProposedQty").val());
        var MiningProduction = parseFloat($("#RemainingProduction").val());
        var TotalPayableAmount = $("#TotalPayableAmount").val();

        if (parseInt(DOApplicable) == 1) {

            if (DONumber == null || DONumber == "") {
                valid = 0;
                swal("", "please enter Delivery order no.", "warning");
                return false;
            }
            else if (DODate == null || DODate == "") {
                valid = 0;
                swal("", "please enter Delivery order date.", "warning");
                return false;
            }

        }


        if (vv == "") {
            valid = 0;
            swal("", "Enter Qty.", "warning");
            return false;
        }
        else if (TotalQuantity > MiningProduction) {
            valid = 0;
            swal("", "Your Production Capacity Balance is : " + MiningProduction, "warning");
            return false;
        }


        else if (MineralNatureId == null || MineralNatureId == "") {
            valid = 0;
            swal("", "please select Mineral Form.", "warning");
            return false;
        }
        else if (MineralGradeId == null || MineralGradeId == "") {
            valid = 0;
            swal("", "please select Mineral Grade.", "warning");
            return false;
        }

        else if (ProposedQty == null || ProposedQty == "" || ProposedQty == 0) {
            valid = 0;
            swal("", "please enter Proposed Qty.", "warning");
            return false;
        }
        else if (BasicRate == null || BasicRate == "" || BasicRate == "0") {
            valid = 0;
            swal("", "please enter Basic Rate.", "warning");
            return false;
        }
        else if (TypeOfCoalDispatched == null || TypeOfCoalDispatched == "") {
            valid = 0;
            swal("", "please enter Scheme of Coal Sale.", "warning");
            return false;
        }
        else if (TotalPayableAmount == "" || TotalPayableAmount == 0) {
            valid = 0;
            swal("", "Royalty Rate is not defined for Selected Mineral Grade.Contact Competent Authority.", "warning");
            return false;
        }
        else {
            return true;
        }
        return valid;
    }

    function OnPreviewForm() {
        if ($("#isNegativeRoyalty").val() == 1) {
            swal("", "Payable Amount is coming less than 0. Kindly re-check the values entered for Basic Price/ Royalty Rate & Quantity.", "warning");
            return false;
        }
        else {
            var checkdata = checkFields();
            if (checkdata == 1) {
                swal({
                    title: "Are you confirmed??",
                    icon: "warning",
                    buttons: ["No", "Yes"],
                })
                    .then((submit) => {
                        if (submit) {
                            $("#frmEPermit").submit();
                        }
                    });
            }
            else {
                return false;
            }
        }
    }

    function OnSubmitForm() {

        if ($("#isNegativeRoyalty").val() == 1) {
            swal("", "Payable Amount is coming less than 0. Kindly re-check the values entered for Basic Price/ Royalty Rate & Quantity.", "warning");
            return false;
        }
        else {
            getCalculation();
            var checkdata = checkFields();
            if (checkdata == 1) {
                swal({
                    title: "Are you confirmed to Save Coal Application?",
                    icon: "warning",
                    buttons: ["No", "Yes"],
                })
                    .then((submit) => {
                        if (submit) {
                            $("#frmEPermit").submit();
                        }
                    });
                //if (confirm("Are you confirmed to Save Coal Application?")) {

                //    $("#frmEPermit").submit();

                //}
            }
            else
                return false;
        }
    }

    $('#DONumber').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z0-9]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }

        e.preventDefault();
        return false;
    });
</script>